// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:2.3.0.0
//      SpecFlow Generator Version:2.3.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace GuidewireTestSuites.Features
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.3.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [Microsoft.VisualStudio.TestTools.UnitTesting.TestClassAttribute()]
    public partial class QuoteAndAPPPartner_JAWS_Flag_OFF_PC9Feature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
        private Microsoft.VisualStudio.TestTools.UnitTesting.TestContext _testContext;
        
#line 1 "QuoteAndAPPPartner_JAWS_Flag_OFF_PC9.feature"
#line hidden
        
        public virtual Microsoft.VisualStudio.TestTools.UnitTesting.TestContext TestContext
        {
            get
            {
                return this._testContext;
            }
            set
            {
                this._testContext = value;
            }
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassInitializeAttribute()]
        public static void FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext testContext)
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner(null, 0);
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "QuoteAndAPPPartner_JAWS_Flag_OFF_PC9", null, ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassCleanupAttribute()]
        public static void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestInitializeAttribute()]
        public virtual void TestInitialize()
        {
            if (((testRunner.FeatureContext != null) 
                        && (testRunner.FeatureContext.FeatureInfo.Title != "QuoteAndAPPPartner_JAWS_Flag_OFF_PC9")))
            {
                global::GuidewireTestSuites.Features.QuoteAndAPPPartner_JAWS_Flag_OFF_PC9Feature.FeatureSetup(null);
            }
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCleanupAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
            testRunner.ScenarioContext.ScenarioContainer.RegisterInstanceAs<Microsoft.VisualStudio.TestTools.UnitTesting.TestContext>(TestContext);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        public virtual void _01_QAPM_STP_LessThan16KWithAppraisals_Virg(
                    string applicationEnvironment, 
                    string targetType, 
                    string capability, 
                    string browserType, 
                    string operatingSystem, 
                    string firstName, 
                    string lastName, 
                    string address, 
                    string apartment, 
                    string city, 
                    string state, 
                    string addressZipCode, 
                    string isMailingAddress, 
                    string phoneNumber, 
                    string emailAddress, 
                    string contactPreference, 
                    string gender, 
                    string wearerType, 
                    string minorTrafficViolation, 
                    string lossTheftDamageToJewelry, 
                    string privacyPolicy, 
                    string alarmAndSecurity, 
                    string effectiveDate, 
                    string producerCode, 
                    string gWPaperlessDelivery, 
                    string gWApplicationTakenBy, 
                    string gWDistributionSource, 
                    string gWPrimaryInsured, 
                    string gWDateofBirth, 
                    string gWOccupation, 
                    string gWAddressType, 
                    string gWStatus, 
                    string gWAddress, 
                    string accountNumber, 
                    string gW_UserName, 
                    string gW_Password, 
                    string gWPaymentPlan, 
                    string gWExpireDate, 
                    string gWPayment_Instrument, 
                    string autoPay, 
                    string gW_PolicyStatus, 
                    string termsAndConditions, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "STP",
                    "QAPMregressionSTAGE",
                    "QAPMregression",
                    "QAPM1"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("01_QAPM_STP_LessThan16kWithAppraisals_Virg", @__tags);
#line 10
this.ScenarioSetup(scenarioInfo);
#line 11
                testRunner.Given(string.Format("I access the QuoteAndApp app in {0} , {1} , {2} , {3} and {4}", applicationEnvironment, targetType, capability, browserType, operatingSystem), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table2347 = new TechTalk.SpecFlow.Table(new string[] {
                        "UserName",
                        "Password"});
            table2347.AddRow(new string[] {
                        "claudiatest03@apptest.jminsure.com",
                        "Pass1234"});
#line 12
                testRunner.When("I login to partner mode", ((string)(null)), table2347, "When ");
#line 16
    testRunner.And("I verify Quote Page error validation messages", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table2348 = new TechTalk.SpecFlow.Table(new string[] {
                        "ZipCode",
                        "JewelryType",
                        "Value"});
            table2348.AddRow(new string[] {
                        "53189",
                        "Ring",
                        "15000"});
#line 17
    testRunner.And("I Enter the Quote Page Details", ((string)(null)), table2348, "And ");
#line 20
       testRunner.And(string.Format("I Enter the Contact Information {0} , {1} , {2} , {3} , {4} , {5} , {6} , {7} , {" +
                        "8} , {9} , {10} , {11} , {12}", firstName, lastName, address, apartment, city, state, addressZipCode, isMailingAddress, phoneNumber, emailAddress, contactPreference, gWDateofBirth, gender), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table2349 = new TechTalk.SpecFlow.Table(new string[] {
                        "WearerType",
                        "FirstName",
                        "LastName",
                        "AddressAsPriApp",
                        "Address",
                        "AptSuite",
                        "City",
                        "StateProv",
                        "ZipCode",
                        "PhoneNumber",
                        "Email",
                        "DOB",
                        "Relationship",
                        "Gender"});
            table2349.AddRow(new string[] {
                        "PrimaryApplicant",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""});
#line 21
                testRunner.And("I Enter the Applicant or Wearers details with respect to wearing items", ((string)(null)), table2349, "And ");
#line 24
                testRunner.And(string.Format("I Enter qualification questions {0} , {1} on Applicant and Wearer page", minorTrafficViolation, lossTheftDamageToJewelry), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 25
                testRunner.And(string.Format("I Check the {0} on Applicant and Wearer page", termsAndConditions), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table2350 = new TechTalk.SpecFlow.Table(new string[] {
                        "JewelrySubType",
                        "Gender",
                        "DateOFPurchase",
                        "Appraisal"});
            table2350.AddRow(new string[] {
                        "Engagement Ring",
                        "Women\'s",
                        "01/04/2017",
                        "Yes"});
#line 26
                testRunner.And("I Enter the jewelry information Jewelry Details page", ((string)(null)), table2350, "And ");
#line 31
                testRunner.And(string.Format("I select {0} in Jewelry Details page", effectiveDate), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 32
                testRunner.And(string.Format("I Enetr {0} in Securityoption of  Jewelry Details page", alarmAndSecurity), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table2351 = new TechTalk.SpecFlow.Table(new string[] {
                        "Submitapplication",
                        "PaperlessDelivery"});
            table2351.AddRow(new string[] {
                        "NO",
                        "Yes"});
#line 33
                testRunner.And("I Review the application", ((string)(null)), table2351, "And ");
#line hidden
            TechTalk.SpecFlow.Table table2352 = new TechTalk.SpecFlow.Table(new string[] {
                        "cardType",
                        "Country",
                        "ConfirmationContentValidation"});
            table2352.AddRow(new string[] {
                        "VISA",
                        "USA",
                        "You have successfully completed your application, and your jewelry is now insured" +
                            "."});
#line 36
    testRunner.And(string.Format("I make payment using Card, Set {0} and Later I verify confirmation message and po" +
                        "licy number depending on Environment and {1}", autoPay, gW_PolicyStatus), ((string)(null)), table2352, "And ");
#line 39
       testRunner.And("I access the Guidewire PC on Desktop in IE", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 40
                testRunner.And("I enter pluwmanager and pluwmanagerpwd on the PC9 Login page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 41
    testRunner.And("I select Policies from the Search Tab menu of PC9", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 42
    testRunner.And(string.Format("search for account with {0} and select from search results in PC9", accountNumber), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 43
    testRunner.And(string.Format("I verify {0} , {1} , {2} , {3} , {4} , {5} , {6} , {7}, {8}  in Left Account Deta" +
                        "ils page for PC9", gWPrimaryInsured, gWAddress, phoneNumber, emailAddress, gWStatus, gWAddressType, gender, gWOccupation, gWDateofBirth), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 44
    testRunner.And(string.Format("I verify {0} , {1} , {2} , {3} , {4} in Right Account Details page for PC9 for QN" +
                        "A Account", gWDistributionSource, contactPreference, gWApplicationTakenBy, gWPaperlessDelivery, producerCode), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 45
    testRunner.And(string.Format("I verfy   , {0} , REGISTRY in Policy Term  for PC9", gW_PolicyStatus), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 46
    testRunner.And("I logout of the PC9 application", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 47
    testRunner.And("I Kill Web Driver", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 48
    testRunner.And("I access the Guidewire BC on Desktop in IE", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 49
                testRunner.And("I enter bcmanager and bcmanagerpwd on the BC Login page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 50
                testRunner.And("I select Search from the Tab menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 51
                testRunner.And(string.Format("search for account with {0} and select from search results for QNA", accountNumber), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 52
                testRunner.And("I select details from left navigation menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 53
                testRunner.Then(string.Format("I verify {0} , {1} , \" \" , {2} ,  REGISTRY , REGISTRY , {3} in Account Details pa" +
                        "ge", gWPrimaryInsured, gWAddress, gWPaymentPlan, gWPayment_Instrument), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 54
                testRunner.And("I Logout of the Billing Center application", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("01_QAPM_STP_LessThan16kWithAppraisals_Virg: QP")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "QuoteAndAPPPartner_JAWS_Flag_OFF_PC9")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("STP")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("QAPMregressionSTAGE")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("QAPMregression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("QAPM1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "QP")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ApplicationEnvironment", "QP")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:TargetType", "desktop")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Capability", "")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:BrowserType", "Chrome")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:OperatingSystem", "")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:FirstName", "QAPMGolden")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:LastName", "STP")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Address", "48 Jewelers Park Dr")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Apartment", "")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:City", "Neenah")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:State", "Wisconsin")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:AddressZipCode", "54956")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:IsMailingAddress", "Yes")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:PhoneNumber", "9205352871")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:EmailAddress", "adzhoharidze@jminsure.com")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ContactPreference", "Email")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Gender", "FeMale")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:WearerType", "PrimaryApplicant")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:MinorTrafficViolation", "No")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:LossTheftDamageToJewelry", "No")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:PrivacyPolicy", "Yes")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:AlarmAndSecurity", "No")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:EffectiveDate", "currentdate")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ProducerCode", "TW003")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:GWPaperlessDelivery", "Yes")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:GWApplicationTakenBy", "")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:GWDistributionSource", "Agency Express")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:GWPrimaryInsured", "REGISTRY")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:GWDateofBirth", "05/01/1977")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:GWOccupation", "")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:GWAddressType", "Home")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:GWStatus", "Active")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:GWAddress", "REGISTRY")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:AccountNumber", "REGISTRY")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:GW_UserName", "su")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:GW_Password", "gw")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:GWPaymentPlan", "Annual Pay")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:GWExpireDate", "REGISTRY")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:GWPayment_Instrument", "visa ****1111")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:AutoPay", "Yes")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:GW_PolicyStatus", "In Force")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:TermsAndConditions", "No")]
        public virtual void _01_QAPM_STP_LessThan16KWithAppraisals_Virg_QP()
        {
#line 10
this._01_QAPM_STP_LessThan16KWithAppraisals_Virg("QP", "desktop", "", "Chrome", "", "QAPMGolden", "STP", "48 Jewelers Park Dr", "", "Neenah", "Wisconsin", "54956", "Yes", "9205352871", "adzhoharidze@jminsure.com", "Email", "FeMale", "PrimaryApplicant", "No", "No", "Yes", "No", "currentdate", "TW003", "Yes", "", "Agency Express", "REGISTRY", "05/01/1977", "", "Home", "Active", "REGISTRY", "REGISTRY", "su", "gw", "Annual Pay", "REGISTRY", "visa ****1111", "Yes", "In Force", "No", ((string[])(null)));
#line hidden
        }
        
        public virtual void _02_QAPM_NonSTP_To38KWithAppraisalsFred(
                    string applicationEnvironment, 
                    string targetType, 
                    string capability, 
                    string browserType, 
                    string operatingSystem, 
                    string firstName, 
                    string lastName, 
                    string address, 
                    string apartment, 
                    string city, 
                    string state, 
                    string addressZipCode, 
                    string isMailingAddress, 
                    string phoneNumber, 
                    string emailAddress, 
                    string contactPreference, 
                    string gender, 
                    string wearerType, 
                    string minorTrafficViolation, 
                    string lossTheftDamageToJewelry, 
                    string privacyPolicy, 
                    string alarmAndSecurity, 
                    string effectiveDate, 
                    string producerCode, 
                    string gWPaperlessDelivery, 
                    string gWApplicationTakenBy, 
                    string gWDistributionSource, 
                    string gWPrimaryInsured, 
                    string gWDateofBirth, 
                    string gWOccupation, 
                    string gWAddressType, 
                    string gWStatus, 
                    string gWAddress, 
                    string accountNumber, 
                    string gW_UserName, 
                    string gW_Password, 
                    string policyStatus, 
                    string activities, 
                    string termsAndConditions, 
                    string pCActivities, 
                    string userName, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "STP",
                    "QAPMregressionSTAGE",
                    "QAPMregression",
                    "QAPM2"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("02_QAPM_NonSTP_to38kWithAppraisalsFred", @__tags);
#line 62
this.ScenarioSetup(scenarioInfo);
#line 63
                testRunner.Given(string.Format("I access the QuoteAndApp app in {0} , {1} , {2} , {3} and {4}", applicationEnvironment, targetType, capability, browserType, operatingSystem), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table2353 = new TechTalk.SpecFlow.Table(new string[] {
                        "UserName",
                        "Password"});
            table2353.AddRow(new string[] {
                        "claudiatest03@apptest.jminsure.com",
                        "Pass1234"});
#line 64
                testRunner.When("I login to partner mode", ((string)(null)), table2353, "When ");
#line hidden
            TechTalk.SpecFlow.Table table2354 = new TechTalk.SpecFlow.Table(new string[] {
                        "ZipCode",
                        "JewelryType",
                        "Value"});
            table2354.AddRow(new string[] {
                        "53189",
                        "Necklace",
                        "38000"});
#line 67
       testRunner.And("I Enter the Quote Page Details", ((string)(null)), table2354, "And ");
#line 70
                 testRunner.And(string.Format("I Enter the Contact Information {0} , {1} , {2} , {3} , {4} , {5} , {6} , {7} , {" +
                        "8} , {9} , {10} , {11} , {12}", firstName, lastName, address, apartment, city, state, addressZipCode, isMailingAddress, phoneNumber, emailAddress, contactPreference, gWDateofBirth, gender), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table2355 = new TechTalk.SpecFlow.Table(new string[] {
                        "WearerType",
                        "FirstName",
                        "LastName",
                        "AddressAsPriApp",
                        "Address",
                        "AptSuite",
                        "City",
                        "StateProv",
                        "ZipCode",
                        "PhoneNumber",
                        "Email",
                        "DOB",
                        "Relationship",
                        "Gender"});
            table2355.AddRow(new string[] {
                        "PrimaryApplicant",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""});
#line 71
                testRunner.And("I Enter the Applicant or Wearers details with respect to wearing items", ((string)(null)), table2355, "And ");
#line 74
                testRunner.And(string.Format("I Enter qualification questions {0} , {1} on Applicant and Wearer page", minorTrafficViolation, lossTheftDamageToJewelry), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 75
                testRunner.And(string.Format("I Check the {0} on Applicant and Wearer page", termsAndConditions), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table2356 = new TechTalk.SpecFlow.Table(new string[] {
                        "JewelrySubType",
                        "Gender",
                        "DateOFPurchase",
                        "Appraisal"});
            table2356.AddRow(new string[] {
                        "",
                        "",
                        "01/04/2017",
                        "Yes"});
#line 76
                testRunner.And("I Enter the jewelry information Jewelry Details page", ((string)(null)), table2356, "And ");
#line 79
                testRunner.And(string.Format("I select {0} in Jewelry Details page", effectiveDate), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 80
                testRunner.And(string.Format("I Enetr {0} in Securityoption of  Jewelry Details page", alarmAndSecurity), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table2357 = new TechTalk.SpecFlow.Table(new string[] {
                        "DeniedCov",
                        "DeniedCovreason"});
            table2357.AddRow(new string[] {
                        "no",
                        ""});
#line 81
                testRunner.And("I enter the  Personal  History Details in UW question details", ((string)(null)), table2357, "And ");
#line hidden
            TechTalk.SpecFlow.Table table2358 = new TechTalk.SpecFlow.Table(new string[] {
                        "SafeDepositBox",
                        "SafeDepositlocation",
                        "SafeDepositAddress",
                        "CommunityGated",
                        "FenceSurround",
                        "GuardAtGate",
                        "GuardPresent",
                        "CommunityPatrol",
                        "PatrolFrequency",
                        "HowyouEnterCommunity",
                        "HowGuestEnterCommunity",
                        "DomesticHelp",
                        "DomesticHelpType",
                        "EmployeeLength",
                        "DomesticHelpResideHome",
                        "DomesticHelpFreq",
                        "HomeHasOtherResidents",
                        "ReleationshiptoResident",
                        "JewelryWornFre"});
            table2358.AddRow(new string[] {
                        "No",
                        "test12",
                        "Address",
                        "No",
                        "Yes",
                        "Yes",
                        "night only",
                        "Yes",
                        "night only",
                        "EnterCommunity",
                        "GuestEnterCommunity",
                        "No",
                        "Medical Assistant",
                        "Less than 2 years ago",
                        "No",
                        "1-2 times a month",
                        "No",
                        "children",
                        "Never"});
#line 84
                testRunner.And("I enter  for Jewelry Storage Details in UW question details", ((string)(null)), table2358, "And ");
#line hidden
            TechTalk.SpecFlow.Table table2359 = new TechTalk.SpecFlow.Table(new string[] {
                        "TravelOverNightFreq",
                        "TravelAbroad",
                        "TravelSafeGuard",
                        "TravelDescription"});
            table2359.AddRow(new string[] {
                        "1-3 trips",
                        "yes",
                        "I keep it in the hotel safe",
                        ""});
#line 87
                testRunner.And("I enter Travel Details in UW question details", ((string)(null)), table2359, "And ");
#line hidden
            TechTalk.SpecFlow.Table table2360 = new TechTalk.SpecFlow.Table(new string[] {
                        "Submitapplication",
                        "PaperlessDelivery"});
            table2360.AddRow(new string[] {
                        "Yes",
                        "Yes"});
#line 90
                testRunner.And("I Review the application", ((string)(null)), table2360, "And ");
#line hidden
            TechTalk.SpecFlow.Table table2361 = new TechTalk.SpecFlow.Table(new string[] {
                        "ConfirmationContentValidation"});
            table2361.AddRow(new string[] {
                        "Your application will be reviewed and you\'ll hear from us within 2 to 3 business " +
                            "days on next steps. If your application is approved, we will update your policy " +
                            "effective date to the date when payment is taken."});
#line 93
                testRunner.And("I should get the confirmation page with the account number", ((string)(null)), table2361, "And ");
#line 96
                testRunner.And("I access the Guidewire PC on Desktop in IE", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 97
                testRunner.And("I enter pluwmanager and pluwmanagerpwd on the PC9 Login page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 98
    testRunner.And("I select Accounts from the Search Tab menu of PC9", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 99
    testRunner.And(string.Format("search for account with {0} and select from search results in PC9", accountNumber), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 100
    testRunner.And(string.Format("I verify {0} , {1} , {2} , {3} , {4} , {5} , {6} , {7}, {8}  in Left Account Deta" +
                        "ils page for PC9", gWPrimaryInsured, gWAddress, phoneNumber, emailAddress, gWStatus, gWAddressType, gender, gWOccupation, gWDateofBirth), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 101
    testRunner.And(string.Format("I verify {0} , {1} , {2} , {3} , {4} in Right Account Details page for PC9 for QN" +
                        "A Account", gWDistributionSource, contactPreference, gWApplicationTakenBy, gWPaperlessDelivery, producerCode), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 102
    testRunner.And(string.Format("I verify Activity  {0} in PC9", pCActivities), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 103
    testRunner.And(string.Format("I verfy {0} , REGISTRY in Policy Term  for WorkOrders in PC9", policyStatus), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 104
    testRunner.And("I click workorder number of Account detail screen in PC9", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 105
    testRunner.And("I click on PolicyInfoPage on the Left NavMenu Screen in PC9", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 106
    testRunner.And(string.Format("I verify {0} , {1} , {2} , {3} in Left Policy Info Page in partner mode for PC9", firstName, lastName, phoneNumber, userName), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 107
    testRunner.And("I click on RiskAnalysis on Left NavMenu Screen in PC9", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 108
    testRunner.And(string.Format("I verify {0} in the Risk Analysis screen in PC9", activities), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 109
    testRunner.And("I logout of the PC9 application", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("02_QAPM_NonSTP_to38kWithAppraisalsFred: QP")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "QuoteAndAPPPartner_JAWS_Flag_OFF_PC9")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("STP")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("QAPMregressionSTAGE")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("QAPMregression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("QAPM2")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "QP")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ApplicationEnvironment", "QP")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:TargetType", "desktop")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Capability", "")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:BrowserType", "Chrome")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:OperatingSystem", "")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:FirstName", "claudia")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:LastName", "test03")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Address", "302 Millers Xing")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Apartment", "Ste 11")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:City", "Harker Heights")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:State", "Texas")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:AddressZipCode", "76548")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:IsMailingAddress", "Yes")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:PhoneNumber", "6546655545")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:EmailAddress", "adzhoharidze@jminsure.com")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ContactPreference", "Email")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Gender", "FeMale")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:WearerType", "PrimaryApplicant")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:MinorTrafficViolation", "No")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:LossTheftDamageToJewelry", "No")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:PrivacyPolicy", "Yes")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:AlarmAndSecurity", "No")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:EffectiveDate", "currentdate")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ProducerCode", "TW003")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:GWPaperlessDelivery", "Yes")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:GWApplicationTakenBy", "")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:GWDistributionSource", "Agency Express")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:GWPrimaryInsured", "REGISTRY")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:GWDateofBirth", "05/01/1977")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:GWOccupation", "")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:GWAddressType", "Home")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:GWStatus", "Active")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:GWAddress", "REGISTRY")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:AccountNumber", "REGISTRY")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:GW_UserName", "su")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:GW_Password", "gw")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:PolicyStatus", "Quoted")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Activities", "Item Value Exceeds Underwriting Guidelines")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:TermsAndConditions", "No")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:PCActivities", "Submission with issues")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:UserName", "claudiatest03@apptest.jminsure.com")]
        public virtual void _02_QAPM_NonSTP_To38KWithAppraisalsFred_QP()
        {
#line 62
this._02_QAPM_NonSTP_To38KWithAppraisalsFred("QP", "desktop", "", "Chrome", "", "claudia", "test03", "302 Millers Xing", "Ste 11", "Harker Heights", "Texas", "76548", "Yes", "6546655545", "adzhoharidze@jminsure.com", "Email", "FeMale", "PrimaryApplicant", "No", "No", "Yes", "No", "currentdate", "TW003", "Yes", "", "Agency Express", "REGISTRY", "05/01/1977", "", "Home", "Active", "REGISTRY", "REGISTRY", "su", "gw", "Quoted", "Item Value Exceeds Underwriting Guidelines", "No", "Submission with issues", "claudiatest03@apptest.jminsure.com", ((string[])(null)));
#line hidden
        }
        
        public virtual void _03_QAPM_NonSTP_ScheduleTotalGreaterThen2_5K_Virg(
                    string applicationEnvironment, 
                    string targetType, 
                    string capability, 
                    string browserType, 
                    string operatingSystem, 
                    string firstName, 
                    string lastName, 
                    string address, 
                    string apartment, 
                    string city, 
                    string state, 
                    string addressZipCode, 
                    string isMailingAddress, 
                    string phoneNumber, 
                    string emailAddress, 
                    string contactPreference, 
                    string gender, 
                    string wearerType, 
                    string minorTrafficViolation, 
                    string lossTheftDamageToJewelry, 
                    string privacyPolicy, 
                    string alarmAndSecurity, 
                    string effectiveDate, 
                    string producerCode, 
                    string gWPaperlessDelivery, 
                    string gWApplicationTakenBy, 
                    string gWDistributionSource, 
                    string gWPrimaryInsured, 
                    string gWDateofBirth, 
                    string gWOccupation, 
                    string gWAddressType, 
                    string gWStatus, 
                    string gWAddress, 
                    string accountNumber, 
                    string gW_UserName, 
                    string gW_Password, 
                    string gWPaymentPlan, 
                    string gWExpireDate, 
                    string gWPayment_Instrument, 
                    string autoPay, 
                    string gW_PolicyStatus, 
                    string termsAndConditions, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "STP",
                    "QAPMregressionSTAGE",
                    "QAPMregression",
                    "QAPM3"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("03_QAPM_NonSTP_ScheduleTotalGreaterThen2.5k_Virg", @__tags);
#line 121
this.ScenarioSetup(scenarioInfo);
#line 122
                testRunner.Given(string.Format("I access the QuoteAndApp app in {0} , {1} , {2} , {3} and {4}", applicationEnvironment, targetType, capability, browserType, operatingSystem), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table2362 = new TechTalk.SpecFlow.Table(new string[] {
                        "UserName",
                        "Password"});
            table2362.AddRow(new string[] {
                        "claudiatest03@apptest.jminsure.com",
                        "Pass1234"});
#line 123
                testRunner.When("I login to partner mode", ((string)(null)), table2362, "When ");
#line hidden
            TechTalk.SpecFlow.Table table2363 = new TechTalk.SpecFlow.Table(new string[] {
                        "ZipCode",
                        "JewelryType",
                        "Value"});
            table2363.AddRow(new string[] {
                        "53189",
                        "Watch",
                        "1000"});
            table2363.AddRow(new string[] {
                        "",
                        "Chain",
                        "1500"});
#line 127
    testRunner.And("I Enter the Quote Page Details", ((string)(null)), table2363, "And ");
#line 132
    testRunner.And(string.Format("I Enter the Contact Information {0} , {1} , {2} , {3} , {4} , {5} , {6} , {7} , {" +
                        "8} , {9} , {10} , {11} , {12}", firstName, lastName, address, apartment, city, state, addressZipCode, isMailingAddress, phoneNumber, emailAddress, contactPreference, gWDateofBirth, gender), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table2364 = new TechTalk.SpecFlow.Table(new string[] {
                        "WearerType",
                        "FirstName",
                        "LastName",
                        "AddressAsPriApp",
                        "Address",
                        "AptSuite",
                        "City",
                        "StateProv",
                        "ZipCode",
                        "PhoneNumber",
                        "Email",
                        "DOB",
                        "Relationship",
                        "Gender"});
            table2364.AddRow(new string[] {
                        "Primaryapplicant",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""});
            table2364.AddRow(new string[] {
                        "Wearer",
                        "WearerFName1",
                        "WearerLName",
                        "Yes",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "07/07/1985",
                        "Child",
                        "Male"});
#line 133
    testRunner.And("I Enter the Applicant or Wearers details with respect to wearing items", ((string)(null)), table2364, "And ");
#line 138
                testRunner.And(string.Format("I Enter qualification questions {0} , {1} on Applicant and Wearer page", minorTrafficViolation, lossTheftDamageToJewelry), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 139
                testRunner.And(string.Format("I Check the {0} on Applicant and Wearer page", termsAndConditions), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table2365 = new TechTalk.SpecFlow.Table(new string[] {
                        "JewelrySubType",
                        "Gender",
                        "DateOFPurchase",
                        "Appraisal"});
            table2365.AddRow(new string[] {
                        "Rolex",
                        "men\'s",
                        "",
                        ""});
            table2365.AddRow(new string[] {
                        "",
                        "men\'s",
                        "",
                        ""});
#line 140
                testRunner.And("I Enter the jewelry information Jewelry Details page", ((string)(null)), table2365, "And ");
#line 144
                testRunner.And(string.Format("I select {0} in Jewelry Details page", effectiveDate), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 145
                testRunner.And(string.Format("I Enetr {0} in Securityoption of  Jewelry Details page", alarmAndSecurity), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table2366 = new TechTalk.SpecFlow.Table(new string[] {
                        "Submitapplication",
                        "PaperlessDelivery"});
            table2366.AddRow(new string[] {
                        "NO",
                        "Yes"});
#line 146
     testRunner.And("I Review the application", ((string)(null)), table2366, "And ");
#line hidden
            TechTalk.SpecFlow.Table table2367 = new TechTalk.SpecFlow.Table(new string[] {
                        "cardType",
                        "Country",
                        "ConfirmationContentValidation"});
            table2367.AddRow(new string[] {
                        "VISA",
                        "USA",
                        "You have successfully completed your application, and your jewelry is now insured" +
                            "."});
#line 150
    testRunner.And(string.Format("I make payment using Card, Set {0} and Later I verify confirmation message and po" +
                        "licy number depending on Environment and {1}", autoPay, gW_PolicyStatus), ((string)(null)), table2367, "And ");
#line 153
       testRunner.And("I access the Guidewire PC on Desktop in IE", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 154
               testRunner.And("I enter pluwmanager and pluwmanagerpwd on the PC9 Login page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 155
    testRunner.And("I select Policies from the Search Tab menu of PC9", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 156
    testRunner.And(string.Format("search for account with {0} and select from search results in PC9", accountNumber), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 157
    testRunner.And(string.Format("I verify {0} , {1} , {2} , {3} , {4} , {5} , {6} , {7}, {8}  in Left Account Deta" +
                        "ils page for PC9", gWPrimaryInsured, gWAddress, phoneNumber, emailAddress, gWStatus, gWAddressType, gender, gWOccupation, gWDateofBirth), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 158
    testRunner.And(string.Format("I verify {0} , {1} , {2} , {3} , {4} in Right Account Details page for PC9 for QN" +
                        "A Account", gWDistributionSource, contactPreference, gWApplicationTakenBy, gWPaperlessDelivery, producerCode), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 159
    testRunner.And(string.Format("I verfy   , {0} , REGISTRY in Policy Term  for PC9", gW_PolicyStatus), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 160
    testRunner.And("I logout of the PC9 application", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 161
    testRunner.And("I Kill Web Driver", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 162
    testRunner.And("I access the Guidewire BC on Desktop in IE", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 163
                testRunner.And("I enter bcmanager and bcmanagerpwd on the BC Login page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 164
                testRunner.And("I select Search from the Tab menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 165
                testRunner.And(string.Format("search for account with {0} and select from search results for QNA", accountNumber), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 166
                testRunner.And("I select details from left navigation menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 167
                testRunner.Then(string.Format("I verify {0} , {1} , \" \" , {2} ,  REGISTRY , REGISTRY , {3} in Account Details pa" +
                        "ge", gWPrimaryInsured, gWAddress, gWPaymentPlan, gWPayment_Instrument), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 168
                testRunner.And("I Logout of the Billing Center application", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("03_QAPM_NonSTP_ScheduleTotalGreaterThen2.5k_Virg: QP")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "QuoteAndAPPPartner_JAWS_Flag_OFF_PC9")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("STP")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("QAPMregressionSTAGE")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("QAPMregression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("QAPM3")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "QP")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ApplicationEnvironment", "QP")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:TargetType", "desktop")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Capability", "")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:BrowserType", "Chrome")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:OperatingSystem", "")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:FirstName", "Golden4")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:LastName", "NonSTP")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Address", "48 Jewelers Park Dr")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Apartment", "")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:City", "Neenah")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:State", "Wisconsin")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:AddressZipCode", "54956")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:IsMailingAddress", "Yes")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:PhoneNumber", "9205352871")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:EmailAddress", "adzhoharidze@jminsure.com")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ContactPreference", "Email")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Gender", "Male")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:WearerType", "wearer")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:MinorTrafficViolation", "No")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:LossTheftDamageToJewelry", "No")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:PrivacyPolicy", "Yes")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:AlarmAndSecurity", "No")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:EffectiveDate", "currentdate")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ProducerCode", "TW003")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:GWPaperlessDelivery", "Yes")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:GWApplicationTakenBy", "")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:GWDistributionSource", "Agency Express")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:GWPrimaryInsured", "REGISTRY")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:GWDateofBirth", "07/01/1966")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:GWOccupation", "")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:GWAddressType", "Home")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:GWStatus", "Active")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:GWAddress", "REGISTRY")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:AccountNumber", "REGISTRY")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:GW_UserName", "su")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:GW_Password", "gw")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:GWPaymentPlan", "Annual Pay")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:GWExpireDate", "REGISTRY")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:GWPayment_Instrument", "visa ****1111")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:AutoPay", "Yes")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:GW_PolicyStatus", "In Force")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:TermsAndConditions", "No")]
        public virtual void _03_QAPM_NonSTP_ScheduleTotalGreaterThen2_5K_Virg_QP()
        {
#line 121
this._03_QAPM_NonSTP_ScheduleTotalGreaterThen2_5K_Virg("QP", "desktop", "", "Chrome", "", "Golden4", "NonSTP", "48 Jewelers Park Dr", "", "Neenah", "Wisconsin", "54956", "Yes", "9205352871", "adzhoharidze@jminsure.com", "Email", "Male", "wearer", "No", "No", "Yes", "No", "currentdate", "TW003", "Yes", "", "Agency Express", "REGISTRY", "07/01/1966", "", "Home", "Active", "REGISTRY", "REGISTRY", "su", "gw", "Annual Pay", "REGISTRY", "visa ****1111", "Yes", "In Force", "No", ((string[])(null)));
#line hidden
        }
        
        public virtual void _04_QAPM_NonSTP_SingleItemGreaterThen50K_Virg(
                    string applicationEnvironment, 
                    string targetType, 
                    string capability, 
                    string browserType, 
                    string operatingSystem, 
                    string firstName, 
                    string lastName, 
                    string address, 
                    string apartment, 
                    string city, 
                    string state, 
                    string addressZipCode, 
                    string isMailingAddress, 
                    string phoneNumber, 
                    string emailAddress, 
                    string contactPreference, 
                    string gender, 
                    string wearerType, 
                    string minorTrafficViolation, 
                    string lossTheftDamageToJewelry, 
                    string privacyPolicy, 
                    string alarmAndSecurity, 
                    string effectiveDate, 
                    string producerCode, 
                    string gWPaperlessDelivery, 
                    string gWApplicationTakenBy, 
                    string gWDistributionSource, 
                    string gWPrimaryInsured, 
                    string gWDateofBirth, 
                    string gWOccupation, 
                    string gWAddressType, 
                    string gWStatus, 
                    string gWAddress, 
                    string accountNumber, 
                    string gW_UserName, 
                    string gW_Password, 
                    string policyStatus, 
                    string activities, 
                    string pCActivities, 
                    string userName, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "STP",
                    "QAPMregressionSTAGE",
                    "QAPMregression",
                    "QAPM4"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("04_QAPM_NonSTP_SingleItemGreaterThen50k_Virg", @__tags);
#line 179
this.ScenarioSetup(scenarioInfo);
#line 180
                testRunner.Given(string.Format("I access the QuoteAndApp app in {0} , {1} , {2} , {3} and {4}", applicationEnvironment, targetType, capability, browserType, operatingSystem), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table2368 = new TechTalk.SpecFlow.Table(new string[] {
                        "UserName",
                        "Password"});
            table2368.AddRow(new string[] {
                        "claudiatest03@apptest.jminsure.com",
                        "Pass1234"});
#line 181
                testRunner.When("I login to partner mode", ((string)(null)), table2368, "When ");
#line hidden
            TechTalk.SpecFlow.Table table2369 = new TechTalk.SpecFlow.Table(new string[] {
                        "ZipCode",
                        "JewelryType",
                        "Value"});
            table2369.AddRow(new string[] {
                        "80202",
                        "Pendant",
                        "51000"});
#line 185
       testRunner.And("I Enter the Quote Page Details", ((string)(null)), table2369, "And ");
#line 188
       testRunner.And(string.Format("I Enter the Contact Information {0} , {1} , {2} , {3} , {4} , {5} , {6} , {7} , {" +
                        "8} , {9} , {10} , {11} , {12}", firstName, lastName, address, apartment, city, state, addressZipCode, isMailingAddress, phoneNumber, emailAddress, contactPreference, gWDateofBirth, gender), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table2370 = new TechTalk.SpecFlow.Table(new string[] {
                        "Address",
                        "Apartment",
                        "City",
                        "State",
                        "Zip"});
            table2370.AddRow(new string[] {
                        "900 13th St",
                        "",
                        "Denver",
                        "Colorado",
                        "80204"});
#line 189
                testRunner.And("I Enter Malling Address of Appplicant", ((string)(null)), table2370, "And ");
#line hidden
            TechTalk.SpecFlow.Table table2371 = new TechTalk.SpecFlow.Table(new string[] {
                        "WearerType",
                        "FirstName",
                        "LastName",
                        "AddressAsPriApp",
                        "Address",
                        "AptSuite",
                        "City",
                        "StateProv",
                        "ZipCode",
                        "PhoneNumber",
                        "Email",
                        "DOB",
                        "Relationship",
                        "Gender"});
            table2371.AddRow(new string[] {
                        "Primaryapplicant",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""});
#line 192
                testRunner.And("I Enter the Applicant or Wearers details with respect to wearing items", ((string)(null)), table2371, "And ");
#line 195
                testRunner.And(string.Format("I Enter qualification questions {0} , {1} on Applicant and Wearer page", minorTrafficViolation, lossTheftDamageToJewelry), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 196
                testRunner.And("I Check the No on Applicant and Wearer page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table2372 = new TechTalk.SpecFlow.Table(new string[] {
                        "JewelrySubType",
                        "Gender",
                        "DateOFPurchase",
                        "Appraisal"});
            table2372.AddRow(new string[] {
                        "",
                        "",
                        "",
                        ""});
#line 197
                testRunner.And("I Enter the jewelry information Jewelry Details page", ((string)(null)), table2372, "And ");
#line 200
                testRunner.And(string.Format("I select {0} in Jewelry Details page", effectiveDate), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 201
                testRunner.And(string.Format("I Enetr {0} in Securityoption of  Jewelry Details page", alarmAndSecurity), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table2373 = new TechTalk.SpecFlow.Table(new string[] {
                        "DeniedCov",
                        "DeniedCovreason"});
            table2373.AddRow(new string[] {
                        "no",
                        ""});
#line 202
                testRunner.And("I enter the  Personal  History Details in UW question details", ((string)(null)), table2373, "And ");
#line hidden
            TechTalk.SpecFlow.Table table2374 = new TechTalk.SpecFlow.Table(new string[] {
                        "SafeDepositBox",
                        "SafeDepositlocation",
                        "SafeDepositAddress",
                        "CommunityGated",
                        "FenceSurround",
                        "GuardAtGate",
                        "GuardPresent",
                        "CommunityPatrol",
                        "PatrolFrequency",
                        "HowyouEnterCommunity",
                        "HowGuestEnterCommunity",
                        "DomesticHelp",
                        "DomesticHelpType",
                        "EmployeeLength",
                        "DomesticHelpResideHome",
                        "DomesticHelpFreq",
                        "HomeHasOtherResidents",
                        "ReleationshiptoResident",
                        "JewelryWornFre"});
            table2374.AddRow(new string[] {
                        "Yes",
                        "test12",
                        "Address",
                        "Yes",
                        "Yes",
                        "Yes",
                        "night only",
                        "Yes",
                        "night only",
                        "EnterCommunity",
                        "GuestEnterCommunity",
                        "Yes",
                        "Medical Assistant",
                        "Less than 2 years ago",
                        "No",
                        "1-2 times a month",
                        "Yes",
                        "children",
                        "Never"});
#line 205
                testRunner.And("I enter  for Jewelry Storage Details in UW question details", ((string)(null)), table2374, "And ");
#line hidden
            TechTalk.SpecFlow.Table table2375 = new TechTalk.SpecFlow.Table(new string[] {
                        "TravelOverNightFreq",
                        "TravelAbroad",
                        "TravelSafeGuard",
                        "TravelDescription"});
            table2375.AddRow(new string[] {
                        "1-3 trips",
                        "yes",
                        "I keep it in the hotel safe",
                        ""});
#line 208
                testRunner.And("I enter Travel Details in UW question details", ((string)(null)), table2375, "And ");
#line hidden
            TechTalk.SpecFlow.Table table2376 = new TechTalk.SpecFlow.Table(new string[] {
                        "Submitapplication",
                        "PaperlessDelivery"});
            table2376.AddRow(new string[] {
                        "Yes",
                        "Yes"});
#line 211
                testRunner.And("I Review the application", ((string)(null)), table2376, "And ");
#line hidden
            TechTalk.SpecFlow.Table table2377 = new TechTalk.SpecFlow.Table(new string[] {
                        "ConfirmationContentValidation"});
            table2377.AddRow(new string[] {
                        "Your application will be reviewed and you\'ll hear from us within 2 to 3 business " +
                            "days on next steps. If your application is approved, we will update your policy " +
                            "effective date to the date when payment is taken."});
#line 214
                testRunner.And("I should get the confirmation page with the account number", ((string)(null)), table2377, "And ");
#line 217
                testRunner.And("I access the Guidewire PC on Desktop in IE", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 218
                testRunner.And("I enter pluwmanager and pluwmanagerpwd on the PC9 Login page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 219
    testRunner.And("I select Accounts from the Search Tab menu of PC9", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 220
    testRunner.And(string.Format("search for account with {0} and select from search results in PC9", accountNumber), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 221
    testRunner.And(string.Format("I verify {0} , {1} , {2} , {3} , {4} , {5} , {6} , {7}, {8}  in Left Account Deta" +
                        "ils page for PC9", gWPrimaryInsured, gWAddress, phoneNumber, emailAddress, gWStatus, gWAddressType, gender, gWOccupation, gWDateofBirth), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 222
    testRunner.And(string.Format("I verify {0} , {1} , {2} , {3} , {4} in Right Account Details page for PC9 for QN" +
                        "A Account", gWDistributionSource, contactPreference, gWApplicationTakenBy, gWPaperlessDelivery, producerCode), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 223
    testRunner.And(string.Format("I verify Activity  {0} in PC9", pCActivities), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 224
    testRunner.And(string.Format("I verfy {0} , REGISTRY in Policy Term  for WorkOrders in PC9", policyStatus), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 225
    testRunner.And("I click workorder number of Account detail screen in PC9", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 226
    testRunner.And("I click on PolicyInfoPage on the Left NavMenu Screen in PC9", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 227
    testRunner.And(string.Format("I verify {0} , {1} , {2} , {3} in Left Policy Info Page in partner mode for PC9", firstName, lastName, phoneNumber, userName), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 228
    testRunner.And("I click on RiskAnalysis on Left NavMenu Screen in PC9", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 229
    testRunner.And(string.Format("I verify {0} in the Risk Analysis screen in PC9", activities), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 230
    testRunner.And("I logout of the PC9 application", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("04_QAPM_NonSTP_SingleItemGreaterThen50k_Virg: QP")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "QuoteAndAPPPartner_JAWS_Flag_OFF_PC9")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("STP")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("QAPMregressionSTAGE")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("QAPMregression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("QAPM4")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "QP")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ApplicationEnvironment", "QP")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:TargetType", "desktop")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Capability", "")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:BrowserType", "Chrome")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:OperatingSystem", "")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:FirstName", "claudia")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:LastName", "test03")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Address", "1250 14th St")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Apartment", "")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:City", "Denver")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:State", "Colorado")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:AddressZipCode", "80202")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:IsMailingAddress", "No")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:PhoneNumber", "6546655545")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:EmailAddress", "adzhoharidze@jminsure.com")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ContactPreference", "Email")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Gender", "FeMale")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:WearerType", "wearer")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:MinorTrafficViolation", "No")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:LossTheftDamageToJewelry", "No")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:PrivacyPolicy", "Yes")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:AlarmAndSecurity", "No")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:EffectiveDate", "currentdate")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ProducerCode", "TW003")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:GWPaperlessDelivery", "Yes")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:GWApplicationTakenBy", "")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:GWDistributionSource", "Agency Express")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:GWPrimaryInsured", "REGISTRY")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:GWDateofBirth", "07/01/1966")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:GWOccupation", "")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:GWAddressType", "Home")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:GWStatus", "Active")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:GWAddress", "REGISTRY")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:AccountNumber", "REGISTRY")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:GW_UserName", "su")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:GW_Password", "gw")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:PolicyStatus", "Quoted")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Activities", "Item Value Exceeds Underwriting Guidelines;Total Schedule Exceeds $50,000")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:PCActivities", "Submission with issues")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:UserName", "claudiatest03@apptest.jminsure.com")]
        public virtual void _04_QAPM_NonSTP_SingleItemGreaterThen50K_Virg_QP()
        {
#line 179
this._04_QAPM_NonSTP_SingleItemGreaterThen50K_Virg("QP", "desktop", "", "Chrome", "", "claudia", "test03", "1250 14th St", "", "Denver", "Colorado", "80202", "No", "6546655545", "adzhoharidze@jminsure.com", "Email", "FeMale", "wearer", "No", "No", "Yes", "No", "currentdate", "TW003", "Yes", "", "Agency Express", "REGISTRY", "07/01/1966", "", "Home", "Active", "REGISTRY", "REGISTRY", "su", "gw", "Quoted", "Item Value Exceeds Underwriting Guidelines;Total Schedule Exceeds $50,000", "Submission with issues", "claudiatest03@apptest.jminsure.com", ((string[])(null)));
#line hidden
        }
        
        public virtual void _05_QAPM_NonSTP_Lessthen16KFelonyDUI_Virg(
                    string applicationEnvironment, 
                    string targetType, 
                    string capability, 
                    string browserType, 
                    string operatingSystem, 
                    string firstName, 
                    string lastName, 
                    string address, 
                    string apartment, 
                    string city, 
                    string state, 
                    string addressZipCode, 
                    string isMailingAddress, 
                    string phoneNumber, 
                    string emailAddress, 
                    string contactPreference, 
                    string gender, 
                    string minorTrafficViolation, 
                    string lossTheftDamageToJewelry, 
                    string privacyPolicy, 
                    string alarmAndSecurity, 
                    string effectiveDate, 
                    string producerCode, 
                    string gWPaperlessDelivery, 
                    string gWApplicationTakenBy, 
                    string gWDistributionSource, 
                    string gWPrimaryInsured, 
                    string gWDateofBirth, 
                    string gWOccupation, 
                    string gWAddressType, 
                    string gWStatus, 
                    string gWAddress, 
                    string accountNumber, 
                    string gW_UserName, 
                    string gW_Password, 
                    string policyStatus, 
                    string activities, 
                    string termsAndConditions, 
                    string pCActivities, 
                    string userName, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "STP",
                    "QAPMregressionSTAGE",
                    "QAPMregression",
                    "QAPM5"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("05_QAPM_NonSTP_lessthen16KFelonyDUI_Virg", @__tags);
#line 243
this.ScenarioSetup(scenarioInfo);
#line 244
                testRunner.Given(string.Format("I access the QuoteAndApp app in {0} , {1} , {2} , {3} and {4}", applicationEnvironment, targetType, capability, browserType, operatingSystem), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table2378 = new TechTalk.SpecFlow.Table(new string[] {
                        "UserName",
                        "Password"});
            table2378.AddRow(new string[] {
                        "claudiatest03@apptest.jminsure.com",
                        "Pass1234"});
#line 245
                 testRunner.When("I login to partner mode", ((string)(null)), table2378, "When ");
#line hidden
            TechTalk.SpecFlow.Table table2379 = new TechTalk.SpecFlow.Table(new string[] {
                        "ZipCode",
                        "JewelryType",
                        "Value"});
            table2379.AddRow(new string[] {
                        "53189",
                        "Ring",
                        "6000"});
#line 249
    testRunner.And("I Enter the Quote Page Details", ((string)(null)), table2379, "And ");
#line 253
       testRunner.And(string.Format("I Enter the Contact Information {0} , {1} , {2} , {3} , {4} , {5} , {6} , {7} , {" +
                        "8} , {9} , {10} , {11} , {12}", firstName, lastName, address, apartment, city, state, addressZipCode, isMailingAddress, phoneNumber, emailAddress, contactPreference, gWDateofBirth, gender), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table2380 = new TechTalk.SpecFlow.Table(new string[] {
                        "WearerType",
                        "FirstName",
                        "LastName",
                        "AddressAsPriApp",
                        "Address",
                        "AptSuite",
                        "City",
                        "StateProv",
                        "ZipCode",
                        "PhoneNumber",
                        "Email",
                        "DOB",
                        "Relationship",
                        "Gender"});
            table2380.AddRow(new string[] {
                        "Primaryapplicant",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""});
#line 254
                testRunner.And("I Enter the Applicant or Wearers details with respect to wearing items", ((string)(null)), table2380, "And ");
#line 257
                testRunner.And(string.Format("I Enter qualification questions {0} , {1} on Applicant and Wearer page", minorTrafficViolation, lossTheftDamageToJewelry), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table2381 = new TechTalk.SpecFlow.Table(new string[] {
                        "Date",
                        "Type"});
            table2381.AddRow(new string[] {
                        "08/06/2018",
                        "Drugs"});
#line 258
                testRunner.And("I Enetr Sentence completion details", ((string)(null)), table2381, "And ");
#line 261
                testRunner.And(string.Format("I Check the {0} on Applicant and Wearer page", termsAndConditions), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table2382 = new TechTalk.SpecFlow.Table(new string[] {
                        "JewelrySubType",
                        "Gender",
                        "DateOFPurchase",
                        "Appraisal"});
            table2382.AddRow(new string[] {
                        "Engagement Ring",
                        "Women\'s",
                        "",
                        ""});
#line 262
                testRunner.And("I Enter the jewelry information Jewelry Details page", ((string)(null)), table2382, "And ");
#line 265
                testRunner.And(string.Format("I select {0} in Jewelry Details page", effectiveDate), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 266
                testRunner.And(string.Format("I Enetr {0} in Securityoption of  Jewelry Details page", alarmAndSecurity), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table2383 = new TechTalk.SpecFlow.Table(new string[] {
                        "Submitapplication",
                        "PaperlessDelivery"});
            table2383.AddRow(new string[] {
                        "Yes",
                        "Yes"});
#line 267
                testRunner.And("I Review the application", ((string)(null)), table2383, "And ");
#line hidden
            TechTalk.SpecFlow.Table table2384 = new TechTalk.SpecFlow.Table(new string[] {
                        "ConfirmationContentValidation"});
            table2384.AddRow(new string[] {
                        "Your application will be reviewed and you\'ll hear from us within 2 to 3 business " +
                            "days on next steps. If your application is approved, we will update your policy " +
                            "effective date to the date when payment is taken."});
#line 270
                testRunner.And("I should get the confirmation page with the account number", ((string)(null)), table2384, "And ");
#line 273
                testRunner.And("I access the Guidewire PC on Desktop in IE", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 274
    testRunner.And("I enter pluwmanager and pluwmanagerpwd on the PC9 Login page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 275
    testRunner.And("I select Accounts from the Search Tab menu of PC9", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 276
    testRunner.And(string.Format("search for account with {0} and select from search results in PC9", accountNumber), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 277
    testRunner.And(string.Format("I verify {0} , {1} , {2} , {3} , {4} , {5} , {6} , {7}, {8}  in Left Account Deta" +
                        "ils page for PC9", gWPrimaryInsured, gWAddress, phoneNumber, emailAddress, gWStatus, gWAddressType, gender, gWOccupation, gWDateofBirth), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 278
    testRunner.And(string.Format("I verify {0} , {1} , {2} , {3} , {4} in Right Account Details page for PC9 for QN" +
                        "A Account", gWDistributionSource, contactPreference, gWApplicationTakenBy, gWPaperlessDelivery, producerCode), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 279
    testRunner.And(string.Format("I verify Activity  {0} in PC9", pCActivities), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 280
    testRunner.And(string.Format("I verfy {0} , REGISTRY in Policy Term  for WorkOrders in PC9", policyStatus), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 281
    testRunner.And("I click workorder number of Account detail screen in PC9", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 282
    testRunner.And("I click on PolicyInfoPage on the Left NavMenu Screen in PC9", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 283
    testRunner.And(string.Format("I verify {0} , {1} , {2} , {3} in Left Policy Info Page in partner mode for PC9", firstName, lastName, phoneNumber, userName), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 284
    testRunner.And("I click on RiskAnalysis on Left NavMenu Screen in PC9", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 285
    testRunner.And(string.Format("I verify {0} in the Risk Analysis screen in PC9", activities), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 286
    testRunner.And("I logout of the PC9 application", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("05_QAPM_NonSTP_lessthen16KFelonyDUI_Virg: QP")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "QuoteAndAPPPartner_JAWS_Flag_OFF_PC9")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("STP")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("QAPMregressionSTAGE")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("QAPMregression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("QAPM5")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "QP")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ApplicationEnvironment", "QP")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:TargetType", "desktop")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Capability", "")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:BrowserType", "Chrome")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:OperatingSystem", "")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:FirstName", "claudia")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:LastName", "test03")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Address", "24 Jewelers Park Dr")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Apartment", "")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:City", "Neenah")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:State", "Wisconsin")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:AddressZipCode", "54956")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:IsMailingAddress", "Yes")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:PhoneNumber", "6546655545")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:EmailAddress", "adzhoharidze@jminsure.com")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ContactPreference", "Email")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Gender", "Female")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:MinorTrafficViolation", "felony")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:LossTheftDamageToJewelry", "No")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:PrivacyPolicy", "Yes")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:AlarmAndSecurity", "No")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:EffectiveDate", "currentdate")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ProducerCode", "TW003")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:GWPaperlessDelivery", "Yes")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:GWApplicationTakenBy", "")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:GWDistributionSource", "Agency Express")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:GWPrimaryInsured", "REGISTRY")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:GWDateofBirth", "07/01/1966")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:GWOccupation", "")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:GWAddressType", "Home")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:GWStatus", "Active")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:GWAddress", "REGISTRY")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:AccountNumber", "REGISTRY")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:GW_UserName", "su")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:GW_Password", "gw")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:PolicyStatus", "Quoted")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Activities", "Approval Needed - Applicant convicted of a felony")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:TermsAndConditions", "No")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:PCActivities", "Submission with issues")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:UserName", "claudiatest03@apptest.jminsure.com")]
        public virtual void _05_QAPM_NonSTP_Lessthen16KFelonyDUI_Virg_QP()
        {
#line 243
this._05_QAPM_NonSTP_Lessthen16KFelonyDUI_Virg("QP", "desktop", "", "Chrome", "", "claudia", "test03", "24 Jewelers Park Dr", "", "Neenah", "Wisconsin", "54956", "Yes", "6546655545", "adzhoharidze@jminsure.com", "Email", "Female", "felony", "No", "Yes", "No", "currentdate", "TW003", "Yes", "", "Agency Express", "REGISTRY", "07/01/1966", "", "Home", "Active", "REGISTRY", "REGISTRY", "su", "gw", "Quoted", "Approval Needed - Applicant convicted of a felony", "No", "Submission with issues", "claudiatest03@apptest.jminsure.com", ((string[])(null)));
#line hidden
        }
        
        public virtual void _06_QAPM_NonSTP_Lessthen16KLossGreaterthen25K_Fred(
                    string applicationEnvironment, 
                    string targetType, 
                    string capability, 
                    string browserType, 
                    string operatingSystem, 
                    string firstName, 
                    string lastName, 
                    string address, 
                    string apartment, 
                    string city, 
                    string state, 
                    string addressZipCode, 
                    string isMailingAddress, 
                    string phoneNumber, 
                    string emailAddress, 
                    string contactPreference, 
                    string gender, 
                    string minorTrafficViolation, 
                    string lossTheftDamageToJewelry, 
                    string privacyPolicy, 
                    string alarmAndSecurity, 
                    string effectiveDate, 
                    string producerCode, 
                    string gWPaperlessDelivery, 
                    string gWApplicationTakenBy, 
                    string gWDistributionSource, 
                    string gWPrimaryInsured, 
                    string gWDateofBirth, 
                    string gWOccupation, 
                    string gWAddressType, 
                    string gWStatus, 
                    string gWAddress, 
                    string accountNumber, 
                    string gW_UserName, 
                    string gW_Password, 
                    string policyStatus, 
                    string activities, 
                    string termsAndConditions, 
                    string pCActivities, 
                    string userName, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "STP",
                    "QAPMregressionSTAGE",
                    "QAPMregression",
                    "QAPM6"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("06_QAPM_NonSTP_lessthen16K LossGreaterthen25K_Fred", @__tags);
#line 298
this.ScenarioSetup(scenarioInfo);
#line 299
                testRunner.Given(string.Format("I access the QuoteAndApp app in {0} , {1} , {2} , {3} and {4}", applicationEnvironment, targetType, capability, browserType, operatingSystem), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table2385 = new TechTalk.SpecFlow.Table(new string[] {
                        "UserName",
                        "Password"});
            table2385.AddRow(new string[] {
                        "claudiatest03@apptest.jminsure.com",
                        "Pass1234"});
#line 300
                testRunner.When("I login to partner mode", ((string)(null)), table2385, "When ");
#line hidden
            TechTalk.SpecFlow.Table table2386 = new TechTalk.SpecFlow.Table(new string[] {
                        "ZipCode",
                        "JewelryType",
                        "Value"});
            table2386.AddRow(new string[] {
                        "53189",
                        "Brooch",
                        "1599"});
#line 308
     testRunner.And("I Enter the Quote Page Details", ((string)(null)), table2386, "And ");
#line 312
       testRunner.And(string.Format("I Enter the Contact Information {0} , {1} , {2} , {3} , {4} , {5} , {6} , {7} , {" +
                        "8} , {9} , {10} , {11} , {12}", firstName, lastName, address, apartment, city, state, addressZipCode, isMailingAddress, phoneNumber, emailAddress, contactPreference, gWDateofBirth, gender), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table2387 = new TechTalk.SpecFlow.Table(new string[] {
                        "WearerType",
                        "FirstName",
                        "LastName",
                        "AddressAsPriApp",
                        "Address",
                        "AptSuite",
                        "City",
                        "StateProv",
                        "ZipCode",
                        "PhoneNumber",
                        "Email",
                        "DOB",
                        "Relationship",
                        "Gender"});
            table2387.AddRow(new string[] {
                        "Primaryapplicant",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""});
#line 314
                testRunner.And("I Enter the Applicant or Wearers details with respect to wearing items", ((string)(null)), table2387, "And ");
#line 317
                testRunner.And(string.Format("I Enter qualification questions {0} , {1} on Applicant and Wearer page", minorTrafficViolation, lossTheftDamageToJewelry), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table2388 = new TechTalk.SpecFlow.Table(new string[] {
                        "Loss_Date",
                        "Type",
                        "LossAmount"});
            table2388.AddRow(new string[] {
                        "04/05/2017",
                        "Theft",
                        "3500"});
            table2388.AddRow(new string[] {
                        "12/10/2016",
                        "Theft",
                        "4001"});
#line 318
                testRunner.And("I Enetr loss details", ((string)(null)), table2388, "And ");
#line 323
       testRunner.And(string.Format("I Check the {0} on Applicant and Wearer page", termsAndConditions), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table2389 = new TechTalk.SpecFlow.Table(new string[] {
                        "JewelrySubType",
                        "Gender",
                        "DateOFPurchase",
                        "Appraisal"});
            table2389.AddRow(new string[] {
                        "",
                        "",
                        "",
                        ""});
#line 324
                testRunner.And("I Enter the jewelry information Jewelry Details page", ((string)(null)), table2389, "And ");
#line 327
                testRunner.And(string.Format("I select {0} in Jewelry Details page", effectiveDate), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 328
                testRunner.And(string.Format("I Enetr {0} in Securityoption of  Jewelry Details page", alarmAndSecurity), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table2390 = new TechTalk.SpecFlow.Table(new string[] {
                        "DeniedCov",
                        "DeniedCovreason"});
            table2390.AddRow(new string[] {
                        "no",
                        ""});
#line 329
    testRunner.And("I enter the  Personal  History Details in UW question details", ((string)(null)), table2390, "And ");
#line hidden
            TechTalk.SpecFlow.Table table2391 = new TechTalk.SpecFlow.Table(new string[] {
                        "SafeDepositBox",
                        "SafeDepositlocation",
                        "SafeDepositAddress",
                        "CommunityGated",
                        "FenceSurround",
                        "GuardAtGate",
                        "GuardPresent",
                        "CommunityPatrol",
                        "PatrolFrequency",
                        "HowyouEnterCommunity",
                        "HowGuestEnterCommunity",
                        "DomesticHelp",
                        "DomesticHelpType",
                        "EmployeeLength",
                        "DomesticHelpResideHome",
                        "DomesticHelpFreq",
                        "HomeHasOtherResidents",
                        "ReleationshiptoResident",
                        "JewelryWornFre"});
            table2391.AddRow(new string[] {
                        "No",
                        "test12",
                        "Address",
                        "No",
                        "Yes",
                        "Yes",
                        "night only",
                        "Yes",
                        "night only",
                        "EnterCommunity",
                        "GuestEnterCommunity",
                        "No",
                        "Medical Assistant",
                        "Less than 2 years ago",
                        "No",
                        "1-2 times a month",
                        "No",
                        "children",
                        "Never"});
#line 332
                testRunner.And("I enter  for Jewelry Storage Details in UW question details", ((string)(null)), table2391, "And ");
#line hidden
            TechTalk.SpecFlow.Table table2392 = new TechTalk.SpecFlow.Table(new string[] {
                        "TravelOverNightFreq",
                        "TravelAbroad",
                        "TravelSafeGuard",
                        "TravelDescription"});
            table2392.AddRow(new string[] {
                        "1-3 trips",
                        "yes",
                        "I keep it in the hotel safe",
                        ""});
#line 335
                testRunner.And("I enter Travel Details in UW question details", ((string)(null)), table2392, "And ");
#line hidden
            TechTalk.SpecFlow.Table table2393 = new TechTalk.SpecFlow.Table(new string[] {
                        "Submitapplication",
                        "PaperlessDelivery"});
            table2393.AddRow(new string[] {
                        "Yes",
                        "Yes"});
#line 338
                testRunner.And("I Review the application", ((string)(null)), table2393, "And ");
#line hidden
            TechTalk.SpecFlow.Table table2394 = new TechTalk.SpecFlow.Table(new string[] {
                        "ConfirmationContentValidation"});
            table2394.AddRow(new string[] {
                        "Your application will be reviewed and you\'ll hear from us within 2 to 3 business " +
                            "days on next steps. If your application is approved, we will update your policy " +
                            "effective date to the date when payment is taken."});
#line 341
                testRunner.And("I should get the confirmation page with the account number", ((string)(null)), table2394, "And ");
#line 344
                testRunner.And("I access the Guidewire PC on Desktop in IE", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 345
    testRunner.And("I enter pluwmanager and pluwmanagerpwd on the PC9 Login page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 346
    testRunner.And("I select Accounts from the Search Tab menu of PC9", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 347
    testRunner.And(string.Format("search for account with {0} and select from search results in PC9", accountNumber), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 348
    testRunner.And(string.Format("I verify {0} , {1} , {2} , {3} , {4} , {5} , {6} , {7}, {8}  in Left Account Deta" +
                        "ils page for PC9", gWPrimaryInsured, gWAddress, phoneNumber, emailAddress, gWStatus, gWAddressType, gender, gWOccupation, gWDateofBirth), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 349
    testRunner.And(string.Format("I verify {0} , {1} , {2} , {3} , {4} in Right Account Details page for PC9 for QN" +
                        "A Account", gWDistributionSource, contactPreference, gWApplicationTakenBy, gWPaperlessDelivery, producerCode), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 350
    testRunner.And(string.Format("I verify Activity  {0} in PC9", pCActivities), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 351
    testRunner.And(string.Format("I verfy {0} , REGISTRY in Policy Term  for WorkOrders in PC9", policyStatus), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 352
    testRunner.And("I click workorder number of Account detail screen in PC9", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 353
    testRunner.And("I click on PolicyInfoPage on the Left NavMenu Screen in PC9", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 354
    testRunner.And(string.Format("I verify {0} , {1} , {2} , {3} in Left Policy Info Page in partner mode for PC9", firstName, lastName, phoneNumber, userName), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 355
    testRunner.And("I click on RiskAnalysis on Left NavMenu Screen in PC9", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 356
    testRunner.And(string.Format("I verify {0} in the Risk Analysis screen in PC9", activities), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 357
    testRunner.And("I logout of the PC9 application", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("06_QAPM_NonSTP_lessthen16K LossGreaterthen25K_Fred: QP")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "QuoteAndAPPPartner_JAWS_Flag_OFF_PC9")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("STP")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("QAPMregressionSTAGE")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("QAPMregression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("QAPM6")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "QP")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ApplicationEnvironment", "QP")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:TargetType", "desktop")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Capability", "")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:BrowserType", "Chrome")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:OperatingSystem", "")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:FirstName", "claudia")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:LastName", "test03")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Address", "24 Jewelers Park Dr")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Apartment", "")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:City", "Neenah")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:State", "Wisconsin")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:AddressZipCode", "54956")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:IsMailingAddress", "Yes")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:PhoneNumber", "6546655545")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:EmailAddress", "adzhoharidze@jminsure.com")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ContactPreference", "Email")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Gender", "Female")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:MinorTrafficViolation", "No")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:LossTheftDamageToJewelry", "Yes")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:PrivacyPolicy", "Yes")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:AlarmAndSecurity", "No")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:EffectiveDate", "currentdate")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ProducerCode", "TW003")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:GWPaperlessDelivery", "Yes")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:GWApplicationTakenBy", "")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:GWDistributionSource", "Agency Express")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:GWPrimaryInsured", "REGISTRY")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:GWDateofBirth", "07/01/1966")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:GWOccupation", "")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:GWAddressType", "Home")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:GWStatus", "Active")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:GWAddress", "REGISTRY")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:AccountNumber", "REGISTRY")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:GW_UserName", "su")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:GW_Password", "gw")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:PolicyStatus", "Quoted")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Activities", "loss or claim activity")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:TermsAndConditions", "No")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:PCActivities", "Submission with issues")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:UserName", "claudiatest03@apptest.jminsure.com")]
        public virtual void _06_QAPM_NonSTP_Lessthen16KLossGreaterthen25K_Fred_QP()
        {
#line 298
this._06_QAPM_NonSTP_Lessthen16KLossGreaterthen25K_Fred("QP", "desktop", "", "Chrome", "", "claudia", "test03", "24 Jewelers Park Dr", "", "Neenah", "Wisconsin", "54956", "Yes", "6546655545", "adzhoharidze@jminsure.com", "Email", "Female", "No", "Yes", "Yes", "No", "currentdate", "TW003", "Yes", "", "Agency Express", "REGISTRY", "07/01/1966", "", "Home", "Active", "REGISTRY", "REGISTRY", "su", "gw", "Quoted", "loss or claim activity", "No", "Submission with issues", "claudiatest03@apptest.jminsure.com", ((string[])(null)));
#line hidden
        }
        
        public virtual void _07_QAPMWoodland_STP_LessThan16KWithAppraisals_Donna(
                    string applicationEnvironment, 
                    string targetType, 
                    string capability, 
                    string browserType, 
                    string operatingSystem, 
                    string firstName, 
                    string lastName, 
                    string address, 
                    string apartment, 
                    string city, 
                    string state, 
                    string addressZipCode, 
                    string isMailingAddress, 
                    string phoneNumber, 
                    string emailAddress, 
                    string contactPreference, 
                    string gender, 
                    string wearerType, 
                    string minorTrafficViolation, 
                    string lossTheftDamageToJewelry, 
                    string privacyPolicy, 
                    string alarmAndSecurity, 
                    string effectiveDate, 
                    string producerCode, 
                    string gWPaperlessDelivery, 
                    string gWApplicationTakenBy, 
                    string gWDistributionSource, 
                    string gWPrimaryInsured, 
                    string gWDateofBirth, 
                    string gWOccupation, 
                    string gWAddressType, 
                    string gWStatus, 
                    string gWAddress, 
                    string accountNumber, 
                    string gW_UserName, 
                    string gW_Password, 
                    string gWPaymentPlan, 
                    string gWExpireDate, 
                    string gWPayment_Instrument, 
                    string autoPay, 
                    string gW_PolicyStatus, 
                    string termsAndConditions, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "STP",
                    "QAPMregressionSTAGE",
                    "QAPM7"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("07_QAPMWoodland_STP_LessThan16kWithAppraisals_Donna", @__tags);
#line 368
this.ScenarioSetup(scenarioInfo);
#line 369
                testRunner.Given(string.Format("I access the QuoteAndApp app in {0} , {1} , {2} , {3} and {4}", applicationEnvironment, targetType, capability, browserType, operatingSystem), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table2395 = new TechTalk.SpecFlow.Table(new string[] {
                        "UserName",
                        "Password"});
            table2395.AddRow(new string[] {
                        "claudiatest03@apptest.jminsure.com",
                        "Pass1234"});
#line 370
                testRunner.When("I login to partner mode", ((string)(null)), table2395, "When ");
#line hidden
            TechTalk.SpecFlow.Table table2396 = new TechTalk.SpecFlow.Table(new string[] {
                        "ZipCode",
                        "JewelryType",
                        "Value"});
            table2396.AddRow(new string[] {
                        "53189",
                        "Ring",
                        "15000"});
#line 376
    testRunner.And("I Enter the Quote Page Details", ((string)(null)), table2396, "And ");
#line 380
                testRunner.And(string.Format("I Enter the Contact Information {0} , {1} , {2} , {3} , {4} , {5} , {6} , {7} , {" +
                        "8} , {9} , {10} , {11} , {12}", firstName, lastName, address, apartment, city, state, addressZipCode, isMailingAddress, phoneNumber, emailAddress, contactPreference, gWDateofBirth, gender), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table2397 = new TechTalk.SpecFlow.Table(new string[] {
                        "WearerType",
                        "FirstName",
                        "LastName",
                        "AddressAsPriApp",
                        "Address",
                        "AptSuite",
                        "City",
                        "StateProv",
                        "ZipCode",
                        "PhoneNumber",
                        "Email",
                        "DOB",
                        "Relationship",
                        "Gender"});
            table2397.AddRow(new string[] {
                        "PrimaryApplicant",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""});
#line 381
                testRunner.And("I Enter the Applicant or Wearers details with respect to wearing items", ((string)(null)), table2397, "And ");
#line 384
                testRunner.And(string.Format("I Enter qualification questions {0} , {1} on Applicant and Wearer page", minorTrafficViolation, lossTheftDamageToJewelry), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 385
                testRunner.And(string.Format("I Check the {0} on Applicant and Wearer page", termsAndConditions), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table2398 = new TechTalk.SpecFlow.Table(new string[] {
                        "JewelrySubType",
                        "Gender",
                        "DateOFPurchase",
                        "Appraisal"});
            table2398.AddRow(new string[] {
                        "Engagement Ring",
                        "Women\'s",
                        "01/04/2017",
                        "Yes"});
#line 386
                testRunner.And("I Enter the jewelry information Jewelry Details page", ((string)(null)), table2398, "And ");
#line 389
                testRunner.And(string.Format("I select {0} in Jewelry Details page", effectiveDate), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 390
                testRunner.And(string.Format("I Enetr {0} in Securityoption of  Jewelry Details page", alarmAndSecurity), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table2399 = new TechTalk.SpecFlow.Table(new string[] {
                        "Submitapplication",
                        "PaperlessDelivery"});
            table2399.AddRow(new string[] {
                        "NO",
                        "Yes"});
#line 391
                testRunner.And("I Review the application", ((string)(null)), table2399, "And ");
#line hidden
            TechTalk.SpecFlow.Table table2400 = new TechTalk.SpecFlow.Table(new string[] {
                        "AchType",
                        "Country",
                        "ConfirmationContentValidation"});
            table2400.AddRow(new string[] {
                        "Checking",
                        "USA",
                        "You have successfully completed your application, and your jewelry is now insured" +
                            "."});
#line 394
       testRunner.And(string.Format("I make payment using E-check, Set {0} and Later I verify confirmation message and" +
                        " policy number depending on Environment and {1}", autoPay, gW_PolicyStatus), ((string)(null)), table2400, "And ");
#line 397
       testRunner.And("I access the Guidewire PC on Desktop in IE", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 398
                testRunner.And("I enter pluwmanager and pluwmanagerpwd on the PC9 Login page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 399
    testRunner.And("I select Policies from the Search Tab menu of PC9", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 400
    testRunner.And(string.Format("search for account with {0} and select from search results in PC9", accountNumber), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 401
    testRunner.And(string.Format("I verify {0} , {1} , {2} , {3} , {4} , {5} , {6} , {7}, {8}  in Left Account Deta" +
                        "ils page for PC9", gWPrimaryInsured, gWAddress, phoneNumber, emailAddress, gWStatus, gWAddressType, gender, gWOccupation, gWDateofBirth), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 402
    testRunner.And(string.Format("I verify {0} , {1} , {2} , {3} , {4} in Right Account Details page for PC9 for QN" +
                        "A Account", gWDistributionSource, contactPreference, gWApplicationTakenBy, gWPaperlessDelivery, producerCode), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 403
    testRunner.And(string.Format("I verfy   , {0} , REGISTRY in Policy Term  for PC9", gW_PolicyStatus), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 404
    testRunner.And("I logout of the PC9 application", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 405
    testRunner.And("I Kill Web Driver", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 406
                testRunner.And("I access the Guidewire BC on Desktop in IE", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 407
                testRunner.And("I enter bcmanager and bcmanagerpwd on the BC Login page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 408
                testRunner.And("I select Search from the Tab menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 409
                testRunner.And(string.Format("search for account with {0} and select from search results for QNA", accountNumber), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 410
                testRunner.And("I select details from left navigation menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 411
                testRunner.Then(string.Format("I verify {0} , {1} , \" \" , {2} ,  REGISTRY , REGISTRY , {3} in Account Details pa" +
                        "ge", gWPrimaryInsured, gWAddress, gWPaymentPlan, gWPayment_Instrument), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 412
                testRunner.And("I Logout of the Billing Center application", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("07_QAPMWoodland_STP_LessThan16kWithAppraisals_Donna: QP")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "QuoteAndAPPPartner_JAWS_Flag_OFF_PC9")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("STP")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("QAPMregressionSTAGE")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("QAPM7")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "QP")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ApplicationEnvironment", "QP")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:TargetType", "desktop")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Capability", "")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:BrowserType", "Chrome")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:OperatingSystem", "")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:FirstName", "QAPMGolden")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:LastName", "STP")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Address", "48 Jewelers Park Dr")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Apartment", "")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:City", "Neenah")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:State", "Wisconsin")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:AddressZipCode", "54956")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:IsMailingAddress", "Yes")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:PhoneNumber", "9205352871")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:EmailAddress", "adzhoharidze@jminsure.com")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ContactPreference", "Email")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Gender", "FeMale")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:WearerType", "PrimaryApplicant")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:MinorTrafficViolation", "No")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:LossTheftDamageToJewelry", "No")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:PrivacyPolicy", "Yes")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:AlarmAndSecurity", "No")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:EffectiveDate", "currentdate")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ProducerCode", "TW003")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:GWPaperlessDelivery", "Yes")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:GWApplicationTakenBy", "")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:GWDistributionSource", "Agency Express")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:GWPrimaryInsured", "REGISTRY")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:GWDateofBirth", "05/01/1977")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:GWOccupation", "")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:GWAddressType", "Home")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:GWStatus", "Active")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:GWAddress", "REGISTRY")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:AccountNumber", "REGISTRY")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:GW_UserName", "su")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:GW_Password", "gw")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:GWPaymentPlan", "Annual Pay")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:GWExpireDate", "REGISTRY")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:GWPayment_Instrument", "checking ****3332")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:AutoPay", "Yes")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:GW_PolicyStatus", "In Force")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:TermsAndConditions", "No")]
        public virtual void _07_QAPMWoodland_STP_LessThan16KWithAppraisals_Donna_QP()
        {
#line 368
this._07_QAPMWoodland_STP_LessThan16KWithAppraisals_Donna("QP", "desktop", "", "Chrome", "", "QAPMGolden", "STP", "48 Jewelers Park Dr", "", "Neenah", "Wisconsin", "54956", "Yes", "9205352871", "adzhoharidze@jminsure.com", "Email", "FeMale", "PrimaryApplicant", "No", "No", "Yes", "No", "currentdate", "TW003", "Yes", "", "Agency Express", "REGISTRY", "05/01/1977", "", "Home", "Active", "REGISTRY", "REGISTRY", "su", "gw", "Annual Pay", "REGISTRY", "checking ****3332", "Yes", "In Force", "No", ((string[])(null)));
#line hidden
        }
        
        public virtual void _08_QAPMWoodland_NonSTP_Lessthen16KLossGreaterthen25K_Donna(
                    string applicationEnvironment, 
                    string targetType, 
                    string capability, 
                    string browserType, 
                    string operatingSystem, 
                    string firstName, 
                    string lastName, 
                    string address, 
                    string apartment, 
                    string city, 
                    string state, 
                    string addressZipCode, 
                    string isMailingAddress, 
                    string phoneNumber, 
                    string emailAddress, 
                    string contactPreference, 
                    string gender, 
                    string minorTrafficViolation, 
                    string lossTheftDamageToJewelry, 
                    string privacyPolicy, 
                    string alarmAndSecurity, 
                    string effectiveDate, 
                    string producerCode, 
                    string gWPaperlessDelivery, 
                    string gWApplicationTakenBy, 
                    string gWDistributionSource, 
                    string gWPrimaryInsured, 
                    string gWDateofBirth, 
                    string gWOccupation, 
                    string gWAddressType, 
                    string gWStatus, 
                    string gWAddress, 
                    string accountNumber, 
                    string gW_UserName, 
                    string gW_Password, 
                    string policyStatus, 
                    string activities, 
                    string termsAndConditions, 
                    string pCActivities, 
                    string userName, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "QAPMregressionSTAGE",
                    "QAPM8"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("08_QAPMWoodland_NonSTP_lessthen16KLossGreaterthen25K_Donna", @__tags);
#line 420
this.ScenarioSetup(scenarioInfo);
#line 421
                testRunner.Given(string.Format("I access the QuoteAndApp app in {0} , {1} , {2} , {3} and {4}", applicationEnvironment, targetType, capability, browserType, operatingSystem), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table2401 = new TechTalk.SpecFlow.Table(new string[] {
                        "UserName",
                        "Password"});
            table2401.AddRow(new string[] {
                        "claudiatest03@apptest.jminsure.com",
                        "Pass1234"});
#line 422
               testRunner.When("I login to partner mode", ((string)(null)), table2401, "When ");
#line hidden
            TechTalk.SpecFlow.Table table2402 = new TechTalk.SpecFlow.Table(new string[] {
                        "ZipCode",
                        "JewelryType",
                        "Value"});
            table2402.AddRow(new string[] {
                        "53189",
                        "Brooch",
                        "1599"});
#line 428
    testRunner.And("I Enter the Quote Page Details", ((string)(null)), table2402, "And ");
#line 432
                testRunner.And(string.Format("I Enter the Contact Information {0} , {1} , {2} , {3} , {4} , {5} , {6} , {7} , {" +
                        "8} , {9} , {10} , {11} , {12}", firstName, lastName, address, apartment, city, state, addressZipCode, isMailingAddress, phoneNumber, emailAddress, contactPreference, gWDateofBirth, gender), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table2403 = new TechTalk.SpecFlow.Table(new string[] {
                        "WearerType",
                        "FirstName",
                        "LastName",
                        "AddressAsPriApp",
                        "Address",
                        "AptSuite",
                        "City",
                        "StateProv",
                        "ZipCode",
                        "PhoneNumber",
                        "Email",
                        "DOB",
                        "Relationship",
                        "Gender"});
            table2403.AddRow(new string[] {
                        "Primaryapplicant",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""});
#line 433
                testRunner.And("I Enter the Applicant or Wearers details with respect to wearing items", ((string)(null)), table2403, "And ");
#line 436
                testRunner.And(string.Format("I Enter qualification questions {0} , {1} on Applicant and Wearer page", minorTrafficViolation, lossTheftDamageToJewelry), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table2404 = new TechTalk.SpecFlow.Table(new string[] {
                        "Loss_Date",
                        "Type",
                        "LossAmount"});
            table2404.AddRow(new string[] {
                        "04/05/2017",
                        "Theft",
                        "3500"});
            table2404.AddRow(new string[] {
                        "12/10/2016",
                        "Theft",
                        "4001"});
#line 437
                testRunner.And("I Enetr loss details", ((string)(null)), table2404, "And ");
#line 442
       testRunner.And(string.Format("I Check the {0} on Applicant and Wearer page", termsAndConditions), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table2405 = new TechTalk.SpecFlow.Table(new string[] {
                        "JewelrySubType",
                        "Gender",
                        "DateOFPurchase",
                        "Appraisal"});
            table2405.AddRow(new string[] {
                        "",
                        "",
                        "",
                        ""});
#line 443
                testRunner.And("I Enter the jewelry information Jewelry Details page", ((string)(null)), table2405, "And ");
#line 446
                testRunner.And(string.Format("I select {0} in Jewelry Details page", effectiveDate), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 447
                testRunner.And(string.Format("I Enetr {0} in Securityoption of  Jewelry Details page", alarmAndSecurity), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table2406 = new TechTalk.SpecFlow.Table(new string[] {
                        "DeniedCov",
                        "DeniedCovreason"});
            table2406.AddRow(new string[] {
                        "no",
                        ""});
#line 448
    testRunner.And("I enter the  Personal  History Details in UW question details", ((string)(null)), table2406, "And ");
#line hidden
            TechTalk.SpecFlow.Table table2407 = new TechTalk.SpecFlow.Table(new string[] {
                        "SafeDepositBox",
                        "SafeDepositlocation",
                        "SafeDepositAddress",
                        "CommunityGated",
                        "FenceSurround",
                        "GuardAtGate",
                        "GuardPresent",
                        "CommunityPatrol",
                        "PatrolFrequency",
                        "HowyouEnterCommunity",
                        "HowGuestEnterCommunity",
                        "DomesticHelp",
                        "DomesticHelpType",
                        "EmployeeLength",
                        "DomesticHelpResideHome",
                        "DomesticHelpFreq",
                        "HomeHasOtherResidents",
                        "ReleationshiptoResident",
                        "JewelryWornFre"});
            table2407.AddRow(new string[] {
                        "No",
                        "test12",
                        "Address",
                        "No",
                        "Yes",
                        "Yes",
                        "night only",
                        "Yes",
                        "night only",
                        "EnterCommunity",
                        "GuestEnterCommunity",
                        "No",
                        "Medical Assistant",
                        "Less than 2 years ago",
                        "No",
                        "1-2 times a month",
                        "No",
                        "children",
                        "Never"});
#line 451
                testRunner.And("I enter  for Jewelry Storage Details in UW question details", ((string)(null)), table2407, "And ");
#line hidden
            TechTalk.SpecFlow.Table table2408 = new TechTalk.SpecFlow.Table(new string[] {
                        "TravelOverNightFreq",
                        "TravelAbroad",
                        "TravelSafeGuard",
                        "TravelDescription"});
            table2408.AddRow(new string[] {
                        "1-3 trips",
                        "yes",
                        "I keep it in the hotel safe",
                        ""});
#line 454
                testRunner.And("I enter Travel Details in UW question details", ((string)(null)), table2408, "And ");
#line hidden
            TechTalk.SpecFlow.Table table2409 = new TechTalk.SpecFlow.Table(new string[] {
                        "Submitapplication",
                        "PaperlessDelivery"});
            table2409.AddRow(new string[] {
                        "Yes",
                        "Yes"});
#line 457
                testRunner.And("I Review the application", ((string)(null)), table2409, "And ");
#line hidden
            TechTalk.SpecFlow.Table table2410 = new TechTalk.SpecFlow.Table(new string[] {
                        "ConfirmationContentValidation"});
            table2410.AddRow(new string[] {
                        "Your application will be reviewed and you\'ll hear from us within 2 to 3 business " +
                            "days on next steps. If your application is approved, we will update your policy " +
                            "effective date to the date when payment is taken."});
#line 460
                testRunner.And("I should get the confirmation page with the account number", ((string)(null)), table2410, "And ");
#line 463
       testRunner.And("I access the Guidewire PC on Desktop in IE", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 464
    testRunner.And("I enter pluwmanager and pluwmanagerpwd on the PC9 Login page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 465
    testRunner.And("I select Accounts from the Search Tab menu of PC9", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 466
    testRunner.And(string.Format("search for account with {0} and select from search results in PC9", accountNumber), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 467
    testRunner.And(string.Format("I verify {0} , {1} , {2} , {3} , {4} , {5} , {6} , {7}, {8}  in Left Account Deta" +
                        "ils page for PC9", gWPrimaryInsured, gWAddress, phoneNumber, emailAddress, gWStatus, gWAddressType, gender, gWOccupation, gWDateofBirth), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 468
    testRunner.And(string.Format("I verify {0} , {1} , {2} , {3} , {4} in Right Account Details page for PC9 for QN" +
                        "A Account", gWDistributionSource, contactPreference, gWApplicationTakenBy, gWPaperlessDelivery, producerCode), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 469
    testRunner.And(string.Format("I verify Activity  {0} in PC9", pCActivities), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 470
    testRunner.And(string.Format("I verfy {0} , REGISTRY in Policy Term  for WorkOrders in PC9", policyStatus), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 471
    testRunner.And("I click workorder number of Account detail screen in PC9", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 472
    testRunner.And("I click on PolicyInfoPage on the Left NavMenu Screen in PC9", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 473
    testRunner.And(string.Format("I verify {0} , {1} , {2} , {3} in Left Policy Info Page in partner mode for PC9", firstName, lastName, phoneNumber, userName), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 474
    testRunner.And("I click on RiskAnalysis on Left NavMenu Screen in PC9", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 475
    testRunner.And(string.Format("I verify {0} in the Risk Analysis screen in PC9", activities), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 476
    testRunner.And("I logout of the PC9 application", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("08_QAPMWoodland_NonSTP_lessthen16KLossGreaterthen25K_Donna: QP")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "QuoteAndAPPPartner_JAWS_Flag_OFF_PC9")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("QAPMregressionSTAGE")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("QAPM8")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "QP")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ApplicationEnvironment", "QP")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:TargetType", "desktop")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Capability", "")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:BrowserType", "Chrome")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:OperatingSystem", "")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:FirstName", "claudia")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:LastName", "test03")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Address", "24 Jewelers Park Dr")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Apartment", "")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:City", "Neenah")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:State", "Wisconsin")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:AddressZipCode", "54956")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:IsMailingAddress", "Yes")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:PhoneNumber", "6546655545")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:EmailAddress", "adzhoharidze@jminsure.com")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ContactPreference", "Email")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Gender", "Female")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:MinorTrafficViolation", "No")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:LossTheftDamageToJewelry", "Yes")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:PrivacyPolicy", "Yes")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:AlarmAndSecurity", "No")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:EffectiveDate", "currentdate")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ProducerCode", "TW003")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:GWPaperlessDelivery", "Yes")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:GWApplicationTakenBy", "")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:GWDistributionSource", "Agency Express")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:GWPrimaryInsured", "REGISTRY")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:GWDateofBirth", "07/01/1966")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:GWOccupation", "")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:GWAddressType", "Home")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:GWStatus", "Active")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:GWAddress", "REGISTRY")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:AccountNumber", "REGISTRY")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:GW_UserName", "su")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:GW_Password", "gw")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:PolicyStatus", "Quoted")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Activities", "loss or claim activity")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:TermsAndConditions", "No")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:PCActivities", "")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:UserName", "claudiatest03@apptest.jminsure.com")]
        public virtual void _08_QAPMWoodland_NonSTP_Lessthen16KLossGreaterthen25K_Donna_QP()
        {
#line 420
this._08_QAPMWoodland_NonSTP_Lessthen16KLossGreaterthen25K_Donna("QP", "desktop", "", "Chrome", "", "claudia", "test03", "24 Jewelers Park Dr", "", "Neenah", "Wisconsin", "54956", "Yes", "6546655545", "adzhoharidze@jminsure.com", "Email", "Female", "No", "Yes", "Yes", "No", "currentdate", "TW003", "Yes", "", "Agency Express", "REGISTRY", "07/01/1966", "", "Home", "Active", "REGISTRY", "REGISTRY", "su", "gw", "Quoted", "loss or claim activity", "No", "", "claudiatest03@apptest.jminsure.com", ((string[])(null)));
#line hidden
        }
        
        public virtual void _09_QAPM_STP_100_Items_US_LessThan50KTotal(
                    string applicationEnvironment, 
                    string targetType, 
                    string capability, 
                    string browserType, 
                    string operatingSystem, 
                    string firstName, 
                    string lastName, 
                    string address, 
                    string apartment, 
                    string city, 
                    string state, 
                    string addressZipCode, 
                    string isMailingAddress, 
                    string phoneNumber, 
                    string emailAddress, 
                    string contactPreference, 
                    string gender, 
                    string wearerType, 
                    string minorTrafficViolation, 
                    string lossTheftDamageToJewelry, 
                    string privacyPolicy, 
                    string alarmAndSecurity, 
                    string effectiveDate, 
                    string producerCode, 
                    string gWPaperlessDelivery, 
                    string gWApplicationTakenBy, 
                    string gWDistributionSource, 
                    string gWPrimaryInsured, 
                    string gWDateofBirth, 
                    string gWOccupation, 
                    string gWAddressType, 
                    string gWStatus, 
                    string gWAddress, 
                    string accountNumber, 
                    string gW_UserName, 
                    string gW_Password, 
                    string gWPaymentPlan, 
                    string gWExpireDate, 
                    string gWPayment_Instrument, 
                    string autoPay, 
                    string gW_PolicyStatus, 
                    string termsAndConditions, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "STP",
                    "regression",
                    "QAPMregression",
                    "QAPM9"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("09_QAPM_STP_100_Items_US_LessThan50kTotal", @__tags);
#line 487
this.ScenarioSetup(scenarioInfo);
#line 488
    testRunner.Given(string.Format("I access the QuoteAndApp app in {0} , {1} , {2} , {3} and {4}", applicationEnvironment, targetType, capability, browserType, operatingSystem), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table2411 = new TechTalk.SpecFlow.Table(new string[] {
                        "UserName",
                        "Password"});
            table2411.AddRow(new string[] {
                        "claudiatest03@apptest.jminsure.com",
                        "Pass1234"});
#line 489
    testRunner.When("I login to partner mode", ((string)(null)), table2411, "When ");
#line 492
    testRunner.And("I verify Quote Page error validation messages", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table2412 = new TechTalk.SpecFlow.Table(new string[] {
                        "ZipCode",
                        "JewelryType",
                        "Value"});
            table2412.AddRow(new string[] {
                        "53189",
                        "Ring",
                        "150"});
            table2412.AddRow(new string[] {
                        "",
                        "Earrings",
                        "150"});
            table2412.AddRow(new string[] {
                        "",
                        "Ring",
                        "150"});
            table2412.AddRow(new string[] {
                        "",
                        "Earrings",
                        "150"});
            table2412.AddRow(new string[] {
                        "",
                        "Bracelet",
                        "150"});
            table2412.AddRow(new string[] {
                        "",
                        "Necklace",
                        "150"});
            table2412.AddRow(new string[] {
                        "",
                        "Watch",
                        "150"});
            table2412.AddRow(new string[] {
                        "",
                        "Pendant",
                        "150"});
            table2412.AddRow(new string[] {
                        "",
                        "Chain",
                        "150"});
            table2412.AddRow(new string[] {
                        "",
                        "Brooch",
                        "150"});
            table2412.AddRow(new string[] {
                        "",
                        "Loose stone",
                        "150"});
            table2412.AddRow(new string[] {
                        "",
                        "Earrings",
                        "150"});
            table2412.AddRow(new string[] {
                        "",
                        "Ring",
                        "150"});
            table2412.AddRow(new string[] {
                        "",
                        "Earrings",
                        "150"});
            table2412.AddRow(new string[] {
                        "",
                        "Bracelet",
                        "150"});
            table2412.AddRow(new string[] {
                        "",
                        "Necklace",
                        "150"});
            table2412.AddRow(new string[] {
                        "",
                        "Watch",
                        "150"});
            table2412.AddRow(new string[] {
                        "",
                        "Pendant",
                        "150"});
            table2412.AddRow(new string[] {
                        "",
                        "Chain",
                        "150"});
            table2412.AddRow(new string[] {
                        "",
                        "Brooch",
                        "150"});
            table2412.AddRow(new string[] {
                        "",
                        "Loose stone",
                        "150"});
            table2412.AddRow(new string[] {
                        "",
                        "Earrings",
                        "100"});
            table2412.AddRow(new string[] {
                        "",
                        "Ring",
                        "150"});
            table2412.AddRow(new string[] {
                        "",
                        "Earrings",
                        "500"});
            table2412.AddRow(new string[] {
                        "",
                        "Bracelet",
                        "150"});
            table2412.AddRow(new string[] {
                        "",
                        "Necklace",
                        "150"});
            table2412.AddRow(new string[] {
                        "",
                        "Watch",
                        "150"});
            table2412.AddRow(new string[] {
                        "",
                        "Pendant",
                        "500"});
            table2412.AddRow(new string[] {
                        "",
                        "Chain",
                        "350"});
            table2412.AddRow(new string[] {
                        "",
                        "Brooch",
                        "350"});
            table2412.AddRow(new string[] {
                        "",
                        "Loose stone",
                        "350"});
            table2412.AddRow(new string[] {
                        "",
                        "Earrings",
                        "350"});
            table2412.AddRow(new string[] {
                        "",
                        "Ring",
                        "350"});
            table2412.AddRow(new string[] {
                        "",
                        "Earrings",
                        "350"});
            table2412.AddRow(new string[] {
                        "",
                        "Bracelet",
                        "500"});
            table2412.AddRow(new string[] {
                        "",
                        "Necklace",
                        "500"});
            table2412.AddRow(new string[] {
                        "",
                        "Watch",
                        "350"});
            table2412.AddRow(new string[] {
                        "",
                        "Pendant",
                        "350"});
            table2412.AddRow(new string[] {
                        "",
                        "Chain",
                        "350"});
            table2412.AddRow(new string[] {
                        "",
                        "Brooch",
                        "350"});
            table2412.AddRow(new string[] {
                        "",
                        "Loose stone",
                        "300"});
            table2412.AddRow(new string[] {
                        "",
                        "Earrings",
                        "500"});
            table2412.AddRow(new string[] {
                        "",
                        "Ring",
                        "350"});
            table2412.AddRow(new string[] {
                        "",
                        "Earrings",
                        "350"});
            table2412.AddRow(new string[] {
                        "",
                        "Bracelet",
                        "350"});
            table2412.AddRow(new string[] {
                        "",
                        "Necklace",
                        "350"});
            table2412.AddRow(new string[] {
                        "",
                        "Watch",
                        "300"});
            table2412.AddRow(new string[] {
                        "",
                        "Pendant",
                        "350"});
            table2412.AddRow(new string[] {
                        "",
                        "Chain",
                        "500"});
            table2412.AddRow(new string[] {
                        "",
                        "Brooch",
                        "350"});
            table2412.AddRow(new string[] {
                        "",
                        "Loose stone",
                        "300"});
            table2412.AddRow(new string[] {
                        "",
                        "Earrings",
                        "500"});
            table2412.AddRow(new string[] {
                        "",
                        "Ring",
                        "300"});
            table2412.AddRow(new string[] {
                        "",
                        "Earrings",
                        "300"});
            table2412.AddRow(new string[] {
                        "",
                        "Bracelet",
                        "300"});
            table2412.AddRow(new string[] {
                        "",
                        "Necklace",
                        "300"});
            table2412.AddRow(new string[] {
                        "",
                        "Watch",
                        "300"});
            table2412.AddRow(new string[] {
                        "",
                        "Pendant",
                        "300"});
            table2412.AddRow(new string[] {
                        "",
                        "Chain",
                        "300"});
            table2412.AddRow(new string[] {
                        "",
                        "Brooch",
                        "250"});
            table2412.AddRow(new string[] {
                        "",
                        "Loose stone",
                        "300"});
            table2412.AddRow(new string[] {
                        "",
                        "Earrings",
                        "300"});
            table2412.AddRow(new string[] {
                        "",
                        "Ring",
                        "300"});
            table2412.AddRow(new string[] {
                        "",
                        "Earrings",
                        "300"});
            table2412.AddRow(new string[] {
                        "",
                        "Bracelet",
                        "300"});
            table2412.AddRow(new string[] {
                        "",
                        "Necklace",
                        "300"});
            table2412.AddRow(new string[] {
                        "",
                        "Watch",
                        "500"});
            table2412.AddRow(new string[] {
                        "",
                        "Pendant",
                        "500"});
            table2412.AddRow(new string[] {
                        "",
                        "Chain",
                        "500"});
            table2412.AddRow(new string[] {
                        "",
                        "Brooch",
                        "500"});
            table2412.AddRow(new string[] {
                        "",
                        "Loose stone",
                        "500"});
            table2412.AddRow(new string[] {
                        "",
                        "Earrings",
                        "500"});
            table2412.AddRow(new string[] {
                        "",
                        "Ring",
                        "500"});
            table2412.AddRow(new string[] {
                        "",
                        "Earrings",
                        "200"});
            table2412.AddRow(new string[] {
                        "",
                        "Bracelet",
                        "500"});
            table2412.AddRow(new string[] {
                        "",
                        "Necklace",
                        "500"});
            table2412.AddRow(new string[] {
                        "",
                        "Watch",
                        "500"});
            table2412.AddRow(new string[] {
                        "",
                        "Pendant",
                        "500"});
            table2412.AddRow(new string[] {
                        "",
                        "Chain",
                        "500"});
            table2412.AddRow(new string[] {
                        "",
                        "Brooch",
                        "500"});
            table2412.AddRow(new string[] {
                        "",
                        "Loose stone",
                        "500"});
            table2412.AddRow(new string[] {
                        "",
                        "Earrings",
                        "500"});
            table2412.AddRow(new string[] {
                        "",
                        "Ring",
                        "300"});
            table2412.AddRow(new string[] {
                        "",
                        "Earrings",
                        "500"});
            table2412.AddRow(new string[] {
                        "",
                        "Bracelet",
                        "500"});
            table2412.AddRow(new string[] {
                        "",
                        "Necklace",
                        "200"});
            table2412.AddRow(new string[] {
                        "",
                        "Watch",
                        "500"});
            table2412.AddRow(new string[] {
                        "",
                        "Pendant",
                        "500"});
            table2412.AddRow(new string[] {
                        "",
                        "Chain",
                        "300"});
            table2412.AddRow(new string[] {
                        "",
                        "Brooch",
                        "300"});
            table2412.AddRow(new string[] {
                        "",
                        "Loose stone",
                        "300"});
            table2412.AddRow(new string[] {
                        "",
                        "Earrings",
                        "300"});
            table2412.AddRow(new string[] {
                        "",
                        "Ring",
                        "300"});
            table2412.AddRow(new string[] {
                        "",
                        "Earrings",
                        "300"});
            table2412.AddRow(new string[] {
                        "",
                        "Bracelet",
                        "300"});
            table2412.AddRow(new string[] {
                        "",
                        "Necklace",
                        "300"});
            table2412.AddRow(new string[] {
                        "",
                        "Watch",
                        "300"});
            table2412.AddRow(new string[] {
                        "",
                        "Pendant",
                        "300"});
            table2412.AddRow(new string[] {
                        "",
                        "Chain",
                        "300"});
#line 493
    testRunner.And("I Enter the Quote Page Details", ((string)(null)), table2412, "And ");
#line 595
    testRunner.And(string.Format("I Enter the Contact Information {0} , {1} , {2} , {3} , {4} , {5} , {6} , {7} , {" +
                        "8} , {9} , {10} , {11} , {12}", firstName, lastName, address, apartment, city, state, addressZipCode, isMailingAddress, phoneNumber, emailAddress, contactPreference, gWDateofBirth, gender), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table2413 = new TechTalk.SpecFlow.Table(new string[] {
                        "WearerType",
                        "FirstName",
                        "LastName",
                        "AddressAsPriApp",
                        "Address",
                        "AptSuite",
                        "City",
                        "StateProv",
                        "ZipCode",
                        "PhoneNumber",
                        "Email",
                        "DOB",
                        "Relationship",
                        "Gender"});
            table2413.AddRow(new string[] {
                        "Primaryapplicant",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""});
            table2413.AddRow(new string[] {
                        "Primaryapplicant",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""});
            table2413.AddRow(new string[] {
                        "Primaryapplicant",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""});
            table2413.AddRow(new string[] {
                        "Primaryapplicant",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""});
            table2413.AddRow(new string[] {
                        "Primaryapplicant",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""});
            table2413.AddRow(new string[] {
                        "Primaryapplicant",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""});
            table2413.AddRow(new string[] {
                        "Primaryapplicant",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""});
            table2413.AddRow(new string[] {
                        "Primaryapplicant",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""});
            table2413.AddRow(new string[] {
                        "Primaryapplicant",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""});
            table2413.AddRow(new string[] {
                        "Primaryapplicant",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""});
            table2413.AddRow(new string[] {
                        "Primaryapplicant",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""});
            table2413.AddRow(new string[] {
                        "Primaryapplicant",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""});
            table2413.AddRow(new string[] {
                        "Primaryapplicant",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""});
            table2413.AddRow(new string[] {
                        "Primaryapplicant",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""});
            table2413.AddRow(new string[] {
                        "Primaryapplicant",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""});
            table2413.AddRow(new string[] {
                        "Primaryapplicant",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""});
            table2413.AddRow(new string[] {
                        "Primaryapplicant",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""});
            table2413.AddRow(new string[] {
                        "Primaryapplicant",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""});
            table2413.AddRow(new string[] {
                        "Primaryapplicant",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""});
            table2413.AddRow(new string[] {
                        "Primaryapplicant",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""});
            table2413.AddRow(new string[] {
                        "Primaryapplicant",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""});
            table2413.AddRow(new string[] {
                        "Primaryapplicant",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""});
            table2413.AddRow(new string[] {
                        "Primaryapplicant",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""});
            table2413.AddRow(new string[] {
                        "Primaryapplicant",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""});
            table2413.AddRow(new string[] {
                        "Primaryapplicant",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""});
            table2413.AddRow(new string[] {
                        "Primaryapplicant",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""});
            table2413.AddRow(new string[] {
                        "Primaryapplicant",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""});
            table2413.AddRow(new string[] {
                        "Primaryapplicant",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""});
            table2413.AddRow(new string[] {
                        "Primaryapplicant",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""});
            table2413.AddRow(new string[] {
                        "Primaryapplicant",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""});
            table2413.AddRow(new string[] {
                        "Primaryapplicant",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""});
            table2413.AddRow(new string[] {
                        "Primaryapplicant",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""});
            table2413.AddRow(new string[] {
                        "Primaryapplicant",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""});
            table2413.AddRow(new string[] {
                        "Primaryapplicant",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""});
            table2413.AddRow(new string[] {
                        "Primaryapplicant",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""});
            table2413.AddRow(new string[] {
                        "Primaryapplicant",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""});
            table2413.AddRow(new string[] {
                        "Primaryapplicant",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""});
            table2413.AddRow(new string[] {
                        "Primaryapplicant",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""});
            table2413.AddRow(new string[] {
                        "Primaryapplicant",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""});
            table2413.AddRow(new string[] {
                        "Primaryapplicant",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""});
            table2413.AddRow(new string[] {
                        "Primaryapplicant",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""});
            table2413.AddRow(new string[] {
                        "Primaryapplicant",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""});
            table2413.AddRow(new string[] {
                        "Primaryapplicant",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""});
            table2413.AddRow(new string[] {
                        "Primaryapplicant",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""});
            table2413.AddRow(new string[] {
                        "Primaryapplicant",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""});
            table2413.AddRow(new string[] {
                        "Primaryapplicant",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""});
            table2413.AddRow(new string[] {
                        "Primaryapplicant",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""});
            table2413.AddRow(new string[] {
                        "Primaryapplicant",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""});
            table2413.AddRow(new string[] {
                        "Primaryapplicant",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""});
            table2413.AddRow(new string[] {
                        "Primaryapplicant",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""});
            table2413.AddRow(new string[] {
                        "Primaryapplicant",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""});
            table2413.AddRow(new string[] {
                        "Primaryapplicant",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""});
            table2413.AddRow(new string[] {
                        "Primaryapplicant",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""});
            table2413.AddRow(new string[] {
                        "Primaryapplicant",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""});
            table2413.AddRow(new string[] {
                        "Primaryapplicant",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""});
            table2413.AddRow(new string[] {
                        "Primaryapplicant",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""});
            table2413.AddRow(new string[] {
                        "Primaryapplicant",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""});
            table2413.AddRow(new string[] {
                        "Primaryapplicant",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""});
            table2413.AddRow(new string[] {
                        "Primaryapplicant",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""});
            table2413.AddRow(new string[] {
                        "Primaryapplicant",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""});
            table2413.AddRow(new string[] {
                        "Primaryapplicant",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""});
            table2413.AddRow(new string[] {
                        "Primaryapplicant",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""});
            table2413.AddRow(new string[] {
                        "Primaryapplicant",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""});
            table2413.AddRow(new string[] {
                        "Primaryapplicant",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""});
            table2413.AddRow(new string[] {
                        "Primaryapplicant",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""});
            table2413.AddRow(new string[] {
                        "Primaryapplicant",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""});
            table2413.AddRow(new string[] {
                        "Primaryapplicant",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""});
            table2413.AddRow(new string[] {
                        "Primaryapplicant",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""});
            table2413.AddRow(new string[] {
                        "Primaryapplicant",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""});
            table2413.AddRow(new string[] {
                        "Primaryapplicant",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""});
            table2413.AddRow(new string[] {
                        "Primaryapplicant",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""});
            table2413.AddRow(new string[] {
                        "Primaryapplicant",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""});
            table2413.AddRow(new string[] {
                        "Primaryapplicant",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""});
            table2413.AddRow(new string[] {
                        "Primaryapplicant",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""});
            table2413.AddRow(new string[] {
                        "Primaryapplicant",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""});
            table2413.AddRow(new string[] {
                        "Primaryapplicant",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""});
            table2413.AddRow(new string[] {
                        "Primaryapplicant",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""});
            table2413.AddRow(new string[] {
                        "Primaryapplicant",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""});
            table2413.AddRow(new string[] {
                        "Primaryapplicant",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""});
            table2413.AddRow(new string[] {
                        "Primaryapplicant",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""});
            table2413.AddRow(new string[] {
                        "Primaryapplicant",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""});
            table2413.AddRow(new string[] {
                        "Primaryapplicant",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""});
            table2413.AddRow(new string[] {
                        "Primaryapplicant",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""});
            table2413.AddRow(new string[] {
                        "Primaryapplicant",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""});
            table2413.AddRow(new string[] {
                        "Primaryapplicant",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""});
            table2413.AddRow(new string[] {
                        "Primaryapplicant",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""});
            table2413.AddRow(new string[] {
                        "Primaryapplicant",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""});
            table2413.AddRow(new string[] {
                        "Primaryapplicant",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""});
            table2413.AddRow(new string[] {
                        "Primaryapplicant",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""});
            table2413.AddRow(new string[] {
                        "Primaryapplicant",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""});
            table2413.AddRow(new string[] {
                        "Primaryapplicant",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""});
            table2413.AddRow(new string[] {
                        "Primaryapplicant",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""});
            table2413.AddRow(new string[] {
                        "Primaryapplicant",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""});
            table2413.AddRow(new string[] {
                        "Primaryapplicant",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""});
            table2413.AddRow(new string[] {
                        "Primaryapplicant",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""});
            table2413.AddRow(new string[] {
                        "Primaryapplicant",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""});
            table2413.AddRow(new string[] {
                        "Primaryapplicant",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""});
            table2413.AddRow(new string[] {
                        "Primaryapplicant",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""});
            table2413.AddRow(new string[] {
                        "Primaryapplicant",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""});
#line 596
    testRunner.And("I Enter the Applicant or Wearers details with respect to wearing items", ((string)(null)), table2413, "And ");
#line 697
    testRunner.And(string.Format("I Enter qualification questions {0} , {1} on Applicant and Wearer page", minorTrafficViolation, lossTheftDamageToJewelry), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 698
    testRunner.And(string.Format("I Check the {0} on Applicant and Wearer page", termsAndConditions), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table2414 = new TechTalk.SpecFlow.Table(new string[] {
                        "JewelrySubType",
                        "Gender",
                        "DateOFPurchase",
                        "Appraisal"});
            table2414.AddRow(new string[] {
                        "Engagement Ring",
                        "Women\'s",
                        "",
                        ""});
            table2414.AddRow(new string[] {
                        "Pair of Earrings",
                        "",
                        "",
                        ""});
            table2414.AddRow(new string[] {
                        "Engagement Ring",
                        "Women\'s",
                        "",
                        ""});
            table2414.AddRow(new string[] {
                        "Pair of Earrings",
                        "",
                        "",
                        ""});
            table2414.AddRow(new string[] {
                        "",
                        "Women\'s",
                        "",
                        ""});
            table2414.AddRow(new string[] {
                        "",
                        "",
                        "",
                        ""});
            table2414.AddRow(new string[] {
                        "Rolex",
                        "Women\'s",
                        "",
                        ""});
            table2414.AddRow(new string[] {
                        "",
                        "",
                        "",
                        ""});
            table2414.AddRow(new string[] {
                        "",
                        "Women\'s",
                        "",
                        ""});
            table2414.AddRow(new string[] {
                        "",
                        "",
                        "",
                        ""});
            table2414.AddRow(new string[] {
                        "",
                        "",
                        "",
                        ""});
            table2414.AddRow(new string[] {
                        "Pair of Earrings",
                        "",
                        "",
                        ""});
            table2414.AddRow(new string[] {
                        "Engagement Ring",
                        "Women\'s",
                        "",
                        ""});
            table2414.AddRow(new string[] {
                        "Pair of Earrings",
                        "",
                        "",
                        ""});
            table2414.AddRow(new string[] {
                        "",
                        "Women\'s",
                        "",
                        ""});
            table2414.AddRow(new string[] {
                        "",
                        "",
                        "",
                        ""});
            table2414.AddRow(new string[] {
                        "Rolex",
                        "Women\'s",
                        "",
                        ""});
            table2414.AddRow(new string[] {
                        "",
                        "",
                        "",
                        ""});
            table2414.AddRow(new string[] {
                        "",
                        "Women\'s",
                        "",
                        ""});
            table2414.AddRow(new string[] {
                        "",
                        "",
                        "",
                        ""});
            table2414.AddRow(new string[] {
                        "",
                        "",
                        "",
                        ""});
            table2414.AddRow(new string[] {
                        "Pair of Earrings",
                        "",
                        "",
                        ""});
            table2414.AddRow(new string[] {
                        "Engagement Ring",
                        "Women\'s",
                        "",
                        ""});
            table2414.AddRow(new string[] {
                        "Pair of Earrings",
                        "",
                        "",
                        ""});
            table2414.AddRow(new string[] {
                        "",
                        "Women\'s",
                        "",
                        ""});
            table2414.AddRow(new string[] {
                        "",
                        "",
                        "",
                        ""});
            table2414.AddRow(new string[] {
                        "Rolex",
                        "Women\'s",
                        "",
                        ""});
            table2414.AddRow(new string[] {
                        "",
                        "",
                        "",
                        ""});
            table2414.AddRow(new string[] {
                        "",
                        "Women\'s",
                        "",
                        ""});
            table2414.AddRow(new string[] {
                        "",
                        "",
                        "",
                        ""});
            table2414.AddRow(new string[] {
                        "",
                        "",
                        "",
                        ""});
            table2414.AddRow(new string[] {
                        "Pair of Earrings",
                        "",
                        "",
                        ""});
            table2414.AddRow(new string[] {
                        "Engagement Ring",
                        "Women\'s",
                        "",
                        ""});
            table2414.AddRow(new string[] {
                        "Pair of Earrings",
                        "",
                        "",
                        ""});
            table2414.AddRow(new string[] {
                        "",
                        "Women\'s",
                        "",
                        ""});
            table2414.AddRow(new string[] {
                        "",
                        "",
                        "",
                        ""});
            table2414.AddRow(new string[] {
                        "Rolex",
                        "Women\'s",
                        "",
                        ""});
            table2414.AddRow(new string[] {
                        "",
                        "",
                        "",
                        ""});
            table2414.AddRow(new string[] {
                        "",
                        "Women\'s",
                        "",
                        ""});
            table2414.AddRow(new string[] {
                        "",
                        "",
                        "",
                        ""});
            table2414.AddRow(new string[] {
                        "",
                        "",
                        "",
                        ""});
            table2414.AddRow(new string[] {
                        "Pair of Earrings",
                        "",
                        "",
                        ""});
            table2414.AddRow(new string[] {
                        "Engagement Ring",
                        "Women\'s",
                        "",
                        ""});
            table2414.AddRow(new string[] {
                        "Pair of Earrings",
                        "",
                        "",
                        ""});
            table2414.AddRow(new string[] {
                        "",
                        "Women\'s",
                        "",
                        ""});
            table2414.AddRow(new string[] {
                        "",
                        "",
                        "",
                        ""});
            table2414.AddRow(new string[] {
                        "Rolex",
                        "Women\'s",
                        "",
                        ""});
            table2414.AddRow(new string[] {
                        "",
                        "",
                        "",
                        ""});
            table2414.AddRow(new string[] {
                        "",
                        "Women\'s",
                        "",
                        ""});
            table2414.AddRow(new string[] {
                        "",
                        "",
                        "",
                        ""});
            table2414.AddRow(new string[] {
                        "",
                        "",
                        "",
                        ""});
            table2414.AddRow(new string[] {
                        "Pair of Earrings",
                        "",
                        "",
                        ""});
            table2414.AddRow(new string[] {
                        "Engagement Ring",
                        "Women\'s",
                        "",
                        ""});
            table2414.AddRow(new string[] {
                        "Pair of Earrings",
                        "",
                        "",
                        ""});
            table2414.AddRow(new string[] {
                        "",
                        "Women\'s",
                        "",
                        ""});
            table2414.AddRow(new string[] {
                        "",
                        "",
                        "",
                        ""});
            table2414.AddRow(new string[] {
                        "Rolex",
                        "Women\'s",
                        "",
                        ""});
            table2414.AddRow(new string[] {
                        "",
                        "",
                        "",
                        ""});
            table2414.AddRow(new string[] {
                        "",
                        "Women\'s",
                        "",
                        ""});
            table2414.AddRow(new string[] {
                        "",
                        "",
                        "",
                        ""});
            table2414.AddRow(new string[] {
                        "",
                        "",
                        "",
                        ""});
            table2414.AddRow(new string[] {
                        "Pair of Earrings",
                        "",
                        "",
                        ""});
            table2414.AddRow(new string[] {
                        "Engagement Ring",
                        "Women\'s",
                        "",
                        ""});
            table2414.AddRow(new string[] {
                        "Pair of Earrings",
                        "",
                        "",
                        ""});
            table2414.AddRow(new string[] {
                        "",
                        "Women\'s",
                        "",
                        ""});
            table2414.AddRow(new string[] {
                        "",
                        "",
                        "",
                        ""});
            table2414.AddRow(new string[] {
                        "Rolex",
                        "Women\'s",
                        "",
                        ""});
            table2414.AddRow(new string[] {
                        "",
                        "",
                        "",
                        ""});
            table2414.AddRow(new string[] {
                        "",
                        "Women\'s",
                        "",
                        ""});
            table2414.AddRow(new string[] {
                        "",
                        "",
                        "",
                        ""});
            table2414.AddRow(new string[] {
                        "",
                        "",
                        "",
                        ""});
            table2414.AddRow(new string[] {
                        "Pair of Earrings",
                        "",
                        "",
                        ""});
            table2414.AddRow(new string[] {
                        "Engagement Ring",
                        "Women\'s",
                        "",
                        ""});
            table2414.AddRow(new string[] {
                        "Pair of Earrings",
                        "",
                        "",
                        ""});
            table2414.AddRow(new string[] {
                        "",
                        "Women\'s",
                        "",
                        ""});
            table2414.AddRow(new string[] {
                        "",
                        "",
                        "",
                        ""});
            table2414.AddRow(new string[] {
                        "Rolex",
                        "Women\'s",
                        "",
                        ""});
            table2414.AddRow(new string[] {
                        "",
                        "",
                        "",
                        ""});
            table2414.AddRow(new string[] {
                        "",
                        "Women\'s",
                        "",
                        ""});
            table2414.AddRow(new string[] {
                        "",
                        "",
                        "",
                        ""});
            table2414.AddRow(new string[] {
                        "",
                        "",
                        "",
                        ""});
            table2414.AddRow(new string[] {
                        "Pair of Earrings",
                        "",
                        "",
                        ""});
            table2414.AddRow(new string[] {
                        "Engagement Ring",
                        "Women\'s",
                        "",
                        ""});
            table2414.AddRow(new string[] {
                        "Pair of Earrings",
                        "",
                        "",
                        ""});
            table2414.AddRow(new string[] {
                        "",
                        "Women\'s",
                        "",
                        ""});
            table2414.AddRow(new string[] {
                        "",
                        "",
                        "",
                        ""});
            table2414.AddRow(new string[] {
                        "Rolex",
                        "Women\'s",
                        "",
                        ""});
            table2414.AddRow(new string[] {
                        "",
                        "",
                        "",
                        ""});
            table2414.AddRow(new string[] {
                        "",
                        "Women\'s",
                        "",
                        ""});
            table2414.AddRow(new string[] {
                        "",
                        "",
                        "",
                        ""});
            table2414.AddRow(new string[] {
                        "",
                        "",
                        "",
                        ""});
            table2414.AddRow(new string[] {
                        "Pair of Earrings",
                        "",
                        "",
                        ""});
            table2414.AddRow(new string[] {
                        "Engagement Ring",
                        "Women\'s",
                        "",
                        ""});
            table2414.AddRow(new string[] {
                        "Pair of Earrings",
                        "",
                        "",
                        ""});
            table2414.AddRow(new string[] {
                        "",
                        "Women\'s",
                        "",
                        ""});
            table2414.AddRow(new string[] {
                        "",
                        "",
                        "",
                        ""});
            table2414.AddRow(new string[] {
                        "Rolex",
                        "Women\'s",
                        "",
                        ""});
            table2414.AddRow(new string[] {
                        "",
                        "",
                        "",
                        ""});
            table2414.AddRow(new string[] {
                        "",
                        "Women\'s",
                        "",
                        ""});
#line 699
    testRunner.And("I Enter the jewelry information Jewelry Details page", ((string)(null)), table2414, "And ");
#line 800
    testRunner.And(string.Format("I select {0} in Jewelry Details page", effectiveDate), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 801
    testRunner.And(string.Format("I Enetr {0} in Securityoption of  Jewelry Details page", alarmAndSecurity), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table2415 = new TechTalk.SpecFlow.Table(new string[] {
                        "Submitapplication",
                        "PaperlessDelivery"});
            table2415.AddRow(new string[] {
                        "NO",
                        "Yes"});
#line 802
    testRunner.And("I Review the application", ((string)(null)), table2415, "And ");
#line hidden
            TechTalk.SpecFlow.Table table2416 = new TechTalk.SpecFlow.Table(new string[] {
                        "cardType",
                        "Country",
                        "ConfirmationContentValidation"});
            table2416.AddRow(new string[] {
                        "VISA",
                        "USA",
                        "You have successfully completed your application, and your jewelry is now insured" +
                            "."});
#line 805
    testRunner.And(string.Format("I make payment using Card, Set {0} and Later I verify confirmation message and po" +
                        "licy number depending on Environment and {1}", autoPay, gW_PolicyStatus), ((string)(null)), table2416, "And ");
#line 808
    testRunner.And("I access the Guidewire PC on Desktop in IE", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 809
    testRunner.And("I enter pluwmanager and pluwmanagerpwd on the PC9 Login page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 810
    testRunner.And("I select Policies from the Search Tab menu of PC9", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 811
    testRunner.And(string.Format("search for account with {0} and select from search results in PC9", accountNumber), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 812
    testRunner.And(string.Format("I verify {0} , {1} , {2} , {3} , {4} , {5} , {6} , {7}, {8}  in Left Account Deta" +
                        "ils page for PC9", gWPrimaryInsured, gWAddress, phoneNumber, emailAddress, gWStatus, gWAddressType, gender, gWOccupation, gWDateofBirth), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 813
    testRunner.And(string.Format("I verify {0} , {1} , {2} , {3} , {4} in Right Account Details page for PC9 for QN" +
                        "A Account", gWDistributionSource, contactPreference, gWApplicationTakenBy, gWPaperlessDelivery, producerCode), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 814
    testRunner.And(string.Format("I verfy   , {0} , REGISTRY in Policy Term  for PC9", gW_PolicyStatus), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 815
    testRunner.And("I logout of the PC9 application", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 816
    testRunner.And("I Kill Web Driver", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 817
    testRunner.And("I access the Guidewire BC on Desktop in IE", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 818
    testRunner.And("I enter bcmanager and bcmanagerpwd on the BC Login page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 819
    testRunner.And("I select Search from the Tab menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 820
    testRunner.And(string.Format("search for account with {0} and select from search results for QNA", accountNumber), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 821
    testRunner.And("I select details from left navigation menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 822
    testRunner.Then(string.Format("I verify {0} , {1} , \" \" , {2} ,  REGISTRY , REGISTRY , {3} in Account Details pa" +
                        "ge", gWPrimaryInsured, gWAddress, gWPaymentPlan, gWPayment_Instrument), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 823
    testRunner.And("I Logout of the Billing Center application", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("09_QAPM_STP_100_Items_US_LessThan50kTotal: QP")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "QuoteAndAPPPartner_JAWS_Flag_OFF_PC9")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("STP")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("QAPMregression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("QAPM9")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "QP")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ApplicationEnvironment", "QP")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:TargetType", "desktop")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Capability", "")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:BrowserType", "Chrome")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:OperatingSystem", "")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:FirstName", "QAPMGolden")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:LastName", "STP")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Address", "48 Jewelers Park Dr")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Apartment", "")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:City", "Neenah")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:State", "Wisconsin")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:AddressZipCode", "54956")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:IsMailingAddress", "Yes")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:PhoneNumber", "9205352871")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:EmailAddress", "adzhoharidze@jminsure.com")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ContactPreference", "Email")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Gender", "FeMale")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:WearerType", "PrimaryApplicant")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:MinorTrafficViolation", "No")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:LossTheftDamageToJewelry", "No")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:PrivacyPolicy", "Yes")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:AlarmAndSecurity", "No")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:EffectiveDate", "currentdate")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ProducerCode", "TW003")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:GWPaperlessDelivery", "Yes")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:GWApplicationTakenBy", "")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:GWDistributionSource", "Agency Express")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:GWPrimaryInsured", "REGISTRY")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:GWDateofBirth", "05/01/1977")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:GWOccupation", "")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:GWAddressType", "Home")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:GWStatus", "Active")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:GWAddress", "REGISTRY")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:AccountNumber", "REGISTRY")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:GW_UserName", "su")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:GW_Password", "gw")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:GWPaymentPlan", "Annual Pay")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:GWExpireDate", "REGISTRY")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:GWPayment_Instrument", "visa ****1111")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:AutoPay", "Yes")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:GW_PolicyStatus", "In Force")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:TermsAndConditions", "No")]
        public virtual void _09_QAPM_STP_100_Items_US_LessThan50KTotal_QP()
        {
#line 487
this._09_QAPM_STP_100_Items_US_LessThan50KTotal("QP", "desktop", "", "Chrome", "", "QAPMGolden", "STP", "48 Jewelers Park Dr", "", "Neenah", "Wisconsin", "54956", "Yes", "9205352871", "adzhoharidze@jminsure.com", "Email", "FeMale", "PrimaryApplicant", "No", "No", "Yes", "No", "currentdate", "TW003", "Yes", "", "Agency Express", "REGISTRY", "05/01/1977", "", "Home", "Active", "REGISTRY", "REGISTRY", "su", "gw", "Annual Pay", "REGISTRY", "visa ****1111", "Yes", "In Force", "No", ((string[])(null)));
#line hidden
        }
    }
}
#pragma warning restore
#endregion
