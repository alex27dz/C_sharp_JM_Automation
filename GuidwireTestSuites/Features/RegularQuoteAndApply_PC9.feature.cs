// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:2.3.0.0
//      SpecFlow Generator Version:2.3.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace GuidewireTestSuites.Features
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.3.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [Microsoft.VisualStudio.TestTools.UnitTesting.TestClassAttribute()]
    public partial class RegularQuoteAndApply_PC9Feature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
        private Microsoft.VisualStudio.TestTools.UnitTesting.TestContext _testContext;
        
#line 1 "RegularQuoteAndApply_PC9.feature"
#line hidden
        
        public virtual Microsoft.VisualStudio.TestTools.UnitTesting.TestContext TestContext
        {
            get
            {
                return this._testContext;
            }
            set
            {
                this._testContext = value;
            }
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassInitializeAttribute()]
        public static void FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext testContext)
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner(null, 0);
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "RegularQuoteAndApply_PC9", null, ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassCleanupAttribute()]
        public static void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestInitializeAttribute()]
        public virtual void TestInitialize()
        {
            if (((testRunner.FeatureContext != null) 
                        && (testRunner.FeatureContext.FeatureInfo.Title != "RegularQuoteAndApply_PC9")))
            {
                global::GuidewireTestSuites.Features.RegularQuoteAndApply_PC9Feature.FeatureSetup(null);
            }
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCleanupAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
            testRunner.ScenarioContext.ScenarioContainer.RegisterInstanceAs<Microsoft.VisualStudio.TestTools.UnitTesting.TestContext>(TestContext);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        public virtual void QNA_Reg01_STP_Duplicate_Misdem_Felony(
                    string applicationEnvironment, 
                    string targetType, 
                    string capability, 
                    string browserType, 
                    string operatingSystem, 
                    string firstName, 
                    string lastName, 
                    string address, 
                    string apartment, 
                    string city, 
                    string state, 
                    string addressZipCode, 
                    string isMailingAddress, 
                    string phoneNumber, 
                    string emailAddress, 
                    string contactPreference, 
                    string gender, 
                    string wearerType, 
                    string minorTrafficViolation, 
                    string lossTheftDamageToJewelry, 
                    string privacyPolicy, 
                    string alarmAndSecurity, 
                    string emailOrPhoneJMIS, 
                    string effectiveDate, 
                    string producerCode, 
                    string gWPaperlessDelivery, 
                    string gWApplicationTakenBy, 
                    string gWDistributionSource, 
                    string gWPrimaryInsured, 
                    string gWDateofBirth, 
                    string gWOccupation, 
                    string gWAddressType, 
                    string gWStatus, 
                    string gWAddress, 
                    string accountNumber, 
                    string gW_UserName, 
                    string gW_Password, 
                    string policyStatus, 
                    string activities, 
                    string autoPay, 
                    string pCActivities, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "NonSTP",
                    "regression",
                    "Rqna1",
                    "Rqna"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("QNA_Reg01_STP_Duplicate_Misdem_Felony", @__tags);
#line 8
this.ScenarioSetup(scenarioInfo);
#line 9
                testRunner.Given(string.Format("I access the QuoteAndApp app in {0} , {1} , {2} , {3} and {4}", applicationEnvironment, targetType, capability, browserType, operatingSystem), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table2479 = new TechTalk.SpecFlow.Table(new string[] {
                        "ZipCode",
                        "JewelryType",
                        "Value"});
            table2479.AddRow(new string[] {
                        "53189",
                        "Ring",
                        "13001"});
            table2479.AddRow(new string[] {
                        "",
                        "Earrings",
                        "1501"});
#line 10
                testRunner.When("I Enter the Quote Page Details", ((string)(null)), table2479, "When ");
#line 14
    testRunner.And("I click on NewExisting Customer Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 15
                testRunner.And(string.Format("I Enter the Contact Information {0} , {1} , {2} , {3} , {4} , {5} , {6} , {7} , {" +
                        "8} , {9} , {10} , {11} , {12}", firstName, lastName, address, apartment, city, state, addressZipCode, isMailingAddress, phoneNumber, emailAddress, contactPreference, gWDateofBirth, gender), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table2480 = new TechTalk.SpecFlow.Table(new string[] {
                        "WearerType",
                        "FirstName",
                        "LastName",
                        "AddressAsPriApp",
                        "Address",
                        "AptSuite",
                        "City",
                        "StateProv",
                        "ZipCode",
                        "PhoneNumber",
                        "Email",
                        "DOB",
                        "Relationship",
                        "Gender"});
            table2480.AddRow(new string[] {
                        "Primaryapplicant",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""});
            table2480.AddRow(new string[] {
                        "Primaryapplicant",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""});
#line 16
                testRunner.And("I Enter the Applicant or Wearers details with respect to wearing items", ((string)(null)), table2480, "And ");
#line 20
                testRunner.And(string.Format("I Enter qualification questions {0} , {1} on Applicant and Wearer page", minorTrafficViolation, lossTheftDamageToJewelry), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 21
                testRunner.And("I Check the <TermsAndConditions> on Applicant and Wearer page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table2481 = new TechTalk.SpecFlow.Table(new string[] {
                        "JewelrySubType",
                        "Gender",
                        "DateOFPurchase",
                        "Appraisal"});
            table2481.AddRow(new string[] {
                        "Engagement Ring",
                        "Women\'s",
                        "",
                        ""});
            table2481.AddRow(new string[] {
                        "Pair of Earrings",
                        "",
                        "",
                        ""});
#line 22
                testRunner.And("I Enter the jewelry information Jewelry Details page", ((string)(null)), table2481, "And ");
#line 26
                testRunner.And(string.Format("I select {0} in Jewelry Details page", effectiveDate), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 27
                testRunner.And(string.Format("I Enetr {0} in Securityoption of  Jewelry Details page", alarmAndSecurity), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table2482 = new TechTalk.SpecFlow.Table(new string[] {
                        "Submitapplication",
                        "PaperlessDelivery"});
            table2482.AddRow(new string[] {
                        "NO",
                        "Yes"});
#line 28
                testRunner.And("I Review the application", ((string)(null)), table2482, "And ");
#line hidden
            TechTalk.SpecFlow.Table table2483 = new TechTalk.SpecFlow.Table(new string[] {
                        "cardType",
                        "Country",
                        "ConfirmationContentValidation"});
            table2483.AddRow(new string[] {
                        "VISA",
                        "USA",
                        "You have successfully completed your application, and your jewelry is now insured" +
                            "."});
#line 31
                testRunner.And(string.Format("I make payment using Card, set {0}  and Verify Contact JMIS Page {1}, {2}, {3}, C" +
                        "onfirmation page and policy number depending on Environment and <GW_PolicyStatus" +
                        ">", autoPay, phoneNumber, emailAddress, emailOrPhoneJMIS), ((string)(null)), table2483, "And ");
#line 34
                testRunner.And("I access the Guidewire PC on Desktop in IE", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 35
                 testRunner.And("I enter pluwmanager and pluwmanagerpwd on the PC9 Login page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 36
    testRunner.And("I select Policies from the Search Tab menu of PC9", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 37
    testRunner.And(string.Format("search for account with {0} and select from search results in PC9", accountNumber), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 38
                testRunner.And(string.Format("I verify {0} , {1} , {2} , {3} , {4} , {5} , {6} , {7}, {8}  in Left Account Deta" +
                        "ils page for PC9", gWPrimaryInsured, gWAddress, phoneNumber, emailAddress, gWStatus, gWAddressType, gender, gWOccupation, gWDateofBirth), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 39
                testRunner.And(string.Format("I verify {0} , {1} , {2} , {3} , {4} in Right Account Details page for PC9 for QN" +
                        "A Account", gWDistributionSource, contactPreference, gWApplicationTakenBy, gWPaperlessDelivery, producerCode), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 40
                testRunner.And("I verfy    , In Force , REGISTRY in Policy Term  for PC9", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 41
                testRunner.And("I logout of the PC9 application", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 42
    testRunner.And("I Kill Web Driver", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 43
    testRunner.And(string.Format("I access the QuoteAndApp app in {0} , {1} , {2} , {3} and {4}", applicationEnvironment, targetType, capability, browserType, operatingSystem), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table2484 = new TechTalk.SpecFlow.Table(new string[] {
                        "ZipCode",
                        "JewelryType",
                        "Value"});
            table2484.AddRow(new string[] {
                        "53189",
                        "Ring",
                        "13001"});
            table2484.AddRow(new string[] {
                        "",
                        "Earrings",
                        "1501"});
#line 44
                testRunner.When("I Enter the Quote Page Details", ((string)(null)), table2484, "When ");
#line 48
    testRunner.And("I click on NewExisting Customer Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 49
                testRunner.And(string.Format("I Enter the Contact Information REGISTRY , REGISTRY , {0} , {1} , {2} , {3} , {4}" +
                        " , {5} , {6} , {7} , {8} , {9} , {10}", address, apartment, city, state, addressZipCode, isMailingAddress, phoneNumber, emailAddress, contactPreference, gWDateofBirth, gender), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table2485 = new TechTalk.SpecFlow.Table(new string[] {
                        "WearerType",
                        "FirstName",
                        "LastName",
                        "AddressAsPriApp",
                        "Address",
                        "AptSuite",
                        "City",
                        "StateProv",
                        "ZipCode",
                        "PhoneNumber",
                        "Email",
                        "DOB",
                        "Relationship",
                        "Gender"});
            table2485.AddRow(new string[] {
                        "Primaryapplicant",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""});
            table2485.AddRow(new string[] {
                        "Primaryapplicant",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""});
#line 50
                testRunner.And("I Enter the Applicant or Wearers details with respect to wearing items", ((string)(null)), table2485, "And ");
#line 54
                testRunner.And(string.Format("I Enter qualification questions {0} , {1} on Applicant and Wearer page", minorTrafficViolation, lossTheftDamageToJewelry), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 55
                testRunner.And("I Check the <TermsAndConditions> on Applicant and Wearer page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table2486 = new TechTalk.SpecFlow.Table(new string[] {
                        "JewelrySubType",
                        "Gender",
                        "DateOFPurchase",
                        "Appraisal"});
            table2486.AddRow(new string[] {
                        "Engagement Ring",
                        "Women\'s",
                        "",
                        ""});
            table2486.AddRow(new string[] {
                        "Pair of Earrings",
                        "",
                        "",
                        ""});
#line 56
                testRunner.And("I Enter the jewelry information Jewelry Details page", ((string)(null)), table2486, "And ");
#line 60
                testRunner.And(string.Format("I select {0} in Jewelry Details page", effectiveDate), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 61
                testRunner.And(string.Format("I Enetr {0} in Securityoption of  Jewelry Details page", alarmAndSecurity), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table2487 = new TechTalk.SpecFlow.Table(new string[] {
                        "Submitapplication",
                        "PaperlessDelivery"});
            table2487.AddRow(new string[] {
                        "NO",
                        "Yes"});
#line 62
                testRunner.And("I Review the application", ((string)(null)), table2487, "And ");
#line hidden
            TechTalk.SpecFlow.Table table2488 = new TechTalk.SpecFlow.Table(new string[] {
                        "cardType",
                        "Country",
                        "ConfirmationContentValidation"});
            table2488.AddRow(new string[] {
                        "VISA",
                        "USA",
                        "You have successfully completed your application, and your jewelry is now insured" +
                            "."});
#line 65
                testRunner.And(string.Format("I make payment using Card, set {0}  and Verify Contact JMIS Page {1}, {2}, {3}, C" +
                        "onfirmation page and policy number depending on Environment and <GW_PolicyStatus" +
                        ">", autoPay, phoneNumber, emailAddress, emailOrPhoneJMIS), ((string)(null)), table2488, "And ");
#line 68
                testRunner.And("I access the Guidewire PC on Desktop in IE", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 69
                 testRunner.And("I enter pluwmanager and pluwmanagerpwd on the PC9 Login page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 70
    testRunner.And("I select Accounts from the Search Tab menu of PC9", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 71
       testRunner.And(string.Format("search for account with {0} and select from search results in PC9", accountNumber), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 72
                testRunner.And(string.Format("I verify {0} , {1} , {2} , {3} , {4} , {5} , {6} , {7}, {8}  in Left Account Deta" +
                        "ils page for PC9", gWPrimaryInsured, gWAddress, phoneNumber, emailAddress, gWStatus, gWAddressType, gender, gWOccupation, gWDateofBirth), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 73
               testRunner.And(string.Format("I verfy {0} , REGISTRY in Policy Term  for WorkOrders in PC9", policyStatus), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 74
               testRunner.And(string.Format("I verify Activity  {0} in PC9", pCActivities), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 75
      testRunner.And("I click workorder number of Account detail screen in PC9", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 76
      testRunner.And("I click on RiskAnalysis on Left NavMenu Screen in PC9", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 77
      testRunner.And(string.Format("I verify {0} in the Risk Analysis screen in PC9", activities), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 78
      testRunner.Then("I logout of the PC9 application", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("QNA_Reg01_STP_Duplicate_Misdem_Felony: QNA")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "RegularQuoteAndApply_PC9")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("NonSTP")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Rqna1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Rqna")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "QNA")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ApplicationEnvironment", "QNA")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:TargetType", "desktop")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Capability", "")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:BrowserType", "Chrome")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:OperatingSystem", "")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:FirstName", "Account")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:LastName", "Duplicate")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Address", "48 Jewelers Park Dr")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Apartment", "")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:City", "Neenah")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:State", "Wisconsin")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:AddressZipCode", "54956")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:IsMailingAddress", "Yes")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:PhoneNumber", "9999999999")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:EmailAddress", "adzhoharidze@jminsure.com")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ContactPreference", "Email")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Gender", "FeMale")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:WearerType", "PrimaryApplicant")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:MinorTrafficViolation", "No")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:LossTheftDamageToJewelry", "No")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:PrivacyPolicy", "Yes")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:AlarmAndSecurity", "No")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:EmailOrPhoneJMIS", "Phone")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:EffectiveDate", "currentdate")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ProducerCode", "DIRD")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:GWPaperlessDelivery", "Yes")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:GWApplicationTakenBy", "")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:GWDistributionSource", "Web")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:GWPrimaryInsured", "REGISTRY")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:GWDateofBirth", "05/01/1977")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:GWOccupation", "")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:GWAddressType", "Home")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:GWStatus", "Active")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:GWAddress", "REGISTRY")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:AccountNumber", "REGISTRY")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:GW_UserName", "su")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:GW_Password", "gw")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:PolicyStatus", "Quoted")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Activities", "Approval Needed-Possible Duplicate Account")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:AutoPay", "No")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:PCActivities", "Submission with issues")]
        public virtual void QNA_Reg01_STP_Duplicate_Misdem_Felony_QNA()
        {
#line 8
this.QNA_Reg01_STP_Duplicate_Misdem_Felony("QNA", "desktop", "", "Chrome", "", "Account", "Duplicate", "48 Jewelers Park Dr", "", "Neenah", "Wisconsin", "54956", "Yes", "9999999999", "adzhoharidze@jminsure.com", "Email", "FeMale", "PrimaryApplicant", "No", "No", "Yes", "No", "Phone", "currentdate", "DIRD", "Yes", "", "Web", "REGISTRY", "05/01/1977", "", "Home", "Active", "REGISTRY", "REGISTRY", "su", "gw", "Quoted", "Approval Needed-Possible Duplicate Account", "No", "Submission with issues", ((string[])(null)));
#line hidden
        }
        
        public virtual void QNA_Reg02_STP_CAN_LessThan16KItemTypeOther(
                    string applicationEnvironment, 
                    string targetType, 
                    string capability, 
                    string browserType, 
                    string operatingSystem, 
                    string firstName, 
                    string lastName, 
                    string address, 
                    string apartment, 
                    string city, 
                    string state, 
                    string addressZipCode, 
                    string isMailingAddress, 
                    string phoneNumber, 
                    string emailAddress, 
                    string contactPreference, 
                    string gender, 
                    string wearerType, 
                    string minorTrafficViolation, 
                    string lossTheftDamageToJewelry, 
                    string privacyPolicy, 
                    string alarmAndSecurity, 
                    string effectiveDate, 
                    string producerCode, 
                    string gWPaperlessDelivery, 
                    string gWApplicationTakenBy, 
                    string gWDistributionSource, 
                    string gWPrimaryInsured, 
                    string gWDateofBirth, 
                    string gWOccupation, 
                    string gWAddressType, 
                    string gWStatus, 
                    string gWAddress, 
                    string accountNumber, 
                    string gW_UserName, 
                    string gW_Password, 
                    string policyStatus, 
                    string activities, 
                    string autoPay, 
                    string creditConsent, 
                    string pCActivities, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "STP",
                    "regression",
                    "Rqna2",
                    "Rqna"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("QNA_Reg02_STP_CAN_Less Than 16k Item Type Other", @__tags);
#line 91
this.ScenarioSetup(scenarioInfo);
#line 92
                testRunner.Given(string.Format("I access the QuoteAndApp app in {0} , {1} , {2} , {3} and {4}", applicationEnvironment, targetType, capability, browserType, operatingSystem), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table2489 = new TechTalk.SpecFlow.Table(new string[] {
                        "ZipCode",
                        "JewelryType",
                        "Value"});
            table2489.AddRow(new string[] {
                        "R3G 3P8",
                        "Bracelet",
                        "2000"});
            table2489.AddRow(new string[] {
                        "",
                        "Necklace",
                        "1100"});
            table2489.AddRow(new string[] {
                        "",
                        "Other",
                        "1000"});
#line 93
                testRunner.When("I Enter the Quote Page Details", ((string)(null)), table2489, "When ");
#line 98
                testRunner.And("I click on NewExisting Customer Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 99
                testRunner.And(string.Format("I Enter the Contact Information {0} , {1} , {2} , {3} , {4} , {5} , {6} , {7} , {" +
                        "8} , {9} , {10} , {11} , {12}", firstName, lastName, address, apartment, city, state, addressZipCode, isMailingAddress, phoneNumber, emailAddress, contactPreference, gWDateofBirth, gender), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table2490 = new TechTalk.SpecFlow.Table(new string[] {
                        "WearerType",
                        "FirstName",
                        "LastName",
                        "AddressAsPriApp",
                        "Address",
                        "AptSuite",
                        "City",
                        "StateProv",
                        "ZipCode",
                        "PhoneNumber",
                        "Email",
                        "DOB",
                        "Relationship",
                        "Gender"});
            table2490.AddRow(new string[] {
                        "Primaryapplicant",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""});
            table2490.AddRow(new string[] {
                        "Primaryapplicant",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""});
            table2490.AddRow(new string[] {
                        "Primaryapplicant",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""});
#line 100
                testRunner.And("I Enter the Applicant or Wearers details with respect to wearing items", ((string)(null)), table2490, "And ");
#line 105
                testRunner.And(string.Format("I Enter qualification questions {0} , {1} on Applicant and Wearer page", minorTrafficViolation, lossTheftDamageToJewelry), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 106
                testRunner.And("I Check the <TermsAndConditions> on Applicant and Wearer page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table2491 = new TechTalk.SpecFlow.Table(new string[] {
                        "JewelrySubType",
                        "Gender",
                        "DateOFPurchase",
                        "Appraisal"});
            table2491.AddRow(new string[] {
                        "",
                        "Women\'s",
                        "",
                        "Yes"});
            table2491.AddRow(new string[] {
                        "",
                        "",
                        "",
                        "Yes"});
            table2491.AddRow(new string[] {
                        "Other",
                        "",
                        "",
                        "Yes"});
#line 107
                testRunner.And("I Enter the jewelry information Jewelry Details page", ((string)(null)), table2491, "And ");
#line 112
               testRunner.And(string.Format("I select {0} in Jewelry Details page", effectiveDate), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 113
                testRunner.And(string.Format("I Enetr {0} in Securityoption of  Jewelry Details page", alarmAndSecurity), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 114
                testRunner.And(string.Format("I set Credit Consent {0} for CA", creditConsent), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table2492 = new TechTalk.SpecFlow.Table(new string[] {
                        "Submitapplication",
                        "PaperlessDelivery"});
            table2492.AddRow(new string[] {
                        "NO",
                        "Yes"});
#line 115
    testRunner.And("I Review the application", ((string)(null)), table2492, "And ");
#line hidden
            TechTalk.SpecFlow.Table table2493 = new TechTalk.SpecFlow.Table(new string[] {
                        "cardType",
                        "Country",
                        "ConfirmationContentValidation"});
            table2493.AddRow(new string[] {
                        "VISA",
                        "CA",
                        "You have successfully completed your application, and your jewelry is now insured" +
                            "."});
#line 118
    testRunner.And(string.Format("I make payment using Card, Set {0} and Later I verify confirmation message and po" +
                        "licy number depending on Environment and <GW_PolicyStatus>", autoPay), ((string)(null)), table2493, "And ");
#line 121
                testRunner.And("I access the Guidewire PC on Desktop in IE", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 122
                 testRunner.And("I enter pluwmanager and pluwmanagerpwd on the PC9 Login page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 123
                testRunner.And("I select Accounts from the Search Tab menu of PC9", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 124
                testRunner.And(string.Format("search for account with {0} and select from search results in PC9", accountNumber), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 125
    testRunner.And(string.Format("I verify {0} , {1} , {2} , {3} , {4} , {5} , {6} , {7}, {8}  in Left Account Deta" +
                        "ils page for PC9", gWPrimaryInsured, gWAddress, phoneNumber, emailAddress, gWStatus, gWAddressType, gender, gWOccupation, gWDateofBirth), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 126
    testRunner.And(string.Format("I verify {0} , {1} , {2} , {3} , {4} in Right Account Details page for PC9 for QN" +
                        "A Account", gWDistributionSource, contactPreference, gWApplicationTakenBy, gWPaperlessDelivery, producerCode), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 127
    testRunner.And(string.Format("I verfy {0} , REGISTRY in Policy Term  for WorkOrders in PC9", policyStatus), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 128
          testRunner.And(string.Format("I verify Activity  {0} in PC9", pCActivities), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 129
    testRunner.And("I click on contacts on Left NavMenu Screen in PC9", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 130
       testRunner.And(string.Format("I verify  {0} in GW policy Center in Pc9", creditConsent), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 131
    testRunner.And("I click on summary on Left NavMenu Screen in PC9", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 132
       testRunner.And("I click workorder number of Account detail screen in PC9", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 133
       testRunner.And("I click on RiskAnalysis on Left NavMenu Screen in PC9", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 134
       testRunner.And(string.Format("I verify {0} in the Risk Analysis screen in PC9", activities), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 135
          testRunner.Then("I logout of the PC9 application", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("QNA_Reg02_STP_CAN_Less Than 16k Item Type Other: QNA")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "RegularQuoteAndApply_PC9")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("STP")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Rqna2")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Rqna")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "QNA")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ApplicationEnvironment", "QNA")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:TargetType", "desktop")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Capability", "")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:BrowserType", "Chrome")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:OperatingSystem", "")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:FirstName", "Regular")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:LastName", "CAN16k")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Address", "1001 Empress St")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Apartment", "")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:City", "Winnipeg")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:State", "Manitoba")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:AddressZipCode", "R3G 3P8")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:IsMailingAddress", "Yes")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:PhoneNumber", "2025352871")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:EmailAddress", "adzhoharidze@jminsure.com")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ContactPreference", "Email")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Gender", "FeMale")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:WearerType", "PrimaryApplicant")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:MinorTrafficViolation", "No")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:LossTheftDamageToJewelry", "No")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:PrivacyPolicy", "Yes")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:AlarmAndSecurity", "No")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:EffectiveDate", "currentdate")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ProducerCode", "DIRD")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:GWPaperlessDelivery", "Yes")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:GWApplicationTakenBy", "")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:GWDistributionSource", "Web")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:GWPrimaryInsured", "REGISTRY")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:GWDateofBirth", "05/01/1977")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:GWOccupation", "")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:GWAddressType", "Home")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:GWStatus", "Active")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:GWAddress", "REGISTRY")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:AccountNumber", "REGISTRY")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:GW_UserName", "su")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:GW_Password", "gw")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:PolicyStatus", "Quoted")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Activities", "Item Type = Other - Item #3")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:AutoPay", "Yes")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:creditConsent", "Yes")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:PCActivities", "Submission with issues")]
        public virtual void QNA_Reg02_STP_CAN_LessThan16KItemTypeOther_QNA()
        {
#line 91
this.QNA_Reg02_STP_CAN_LessThan16KItemTypeOther("QNA", "desktop", "", "Chrome", "", "Regular", "CAN16k", "1001 Empress St", "", "Winnipeg", "Manitoba", "R3G 3P8", "Yes", "2025352871", "adzhoharidze@jminsure.com", "Email", "FeMale", "PrimaryApplicant", "No", "No", "Yes", "No", "currentdate", "DIRD", "Yes", "", "Web", "REGISTRY", "05/01/1977", "", "Home", "Active", "REGISTRY", "REGISTRY", "su", "gw", "Quoted", "Item Type = Other - Item #3", "Yes", "Yes", "Submission with issues", ((string[])(null)));
#line hidden
        }
        
        public virtual void QNA_Reg04_CAN_NonSTP_Over_20K_Diff_Mailing_Surcharge(
                    string applicationEnvironment, 
                    string targetType, 
                    string capability, 
                    string browserType, 
                    string operatingSystem, 
                    string firstName, 
                    string lastName, 
                    string address, 
                    string apartment, 
                    string city, 
                    string state, 
                    string addressZipCode, 
                    string isMailingAddress, 
                    string phoneNumber, 
                    string emailAddress, 
                    string contactPreference, 
                    string gender, 
                    string wearerType, 
                    string minorTrafficViolation, 
                    string lossTheftDamageToJewelry, 
                    string privacyPolicy, 
                    string alarmAndSecurity, 
                    string effectiveDate, 
                    string producerCode, 
                    string gWPaperlessDelivery, 
                    string gWApplicationTakenBy, 
                    string gWDistributionSource, 
                    string gWPrimaryInsured, 
                    string gWDateofBirth, 
                    string gWOccupation, 
                    string gWAddressType, 
                    string gWStatus, 
                    string gWAddress, 
                    string accountNumber, 
                    string gW_UserName, 
                    string gW_Password, 
                    string policyStatus, 
                    string activities, 
                    string creditConsent, 
                    string pCActivities, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "AddressIssue",
                    "NonSTP",
                    "regression",
                    "Rqna4",
                    "Rqna"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("QNA_Reg04_CAN_NonSTP_Over_20k_Diff_Mailing_Surcharge", @__tags);
#line 211
this.ScenarioSetup(scenarioInfo);
#line 212
                testRunner.Given(string.Format("I access the QuoteAndApp app in {0} , {1} , {2} , {3} and {4}", applicationEnvironment, targetType, capability, browserType, operatingSystem), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table2494 = new TechTalk.SpecFlow.Table(new string[] {
                        "ZipCode",
                        "JewelryType",
                        "Value"});
            table2494.AddRow(new string[] {
                        "R3G 3P8",
                        "Necklace",
                        "10001"});
            table2494.AddRow(new string[] {
                        "",
                        "Chain",
                        "11001"});
#line 213
                testRunner.When("I Enter the Quote Page Details", ((string)(null)), table2494, "When ");
#line 217
    testRunner.And("I click on NewExisting Customer Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 218
                testRunner.And(string.Format("I Enter the Contact Information {0} , {1} , {2} , {3} , {4} , {5} , {6} , {7} , {" +
                        "8} , {9} , {10} , {11} , {12}", firstName, lastName, address, apartment, city, state, addressZipCode, isMailingAddress, phoneNumber, emailAddress, contactPreference, gWDateofBirth, gender), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table2495 = new TechTalk.SpecFlow.Table(new string[] {
                        "WearerType",
                        "FirstName",
                        "LastName",
                        "AddressAsPriApp",
                        "Address",
                        "AptSuite",
                        "City",
                        "StateProv",
                        "ZipCode",
                        "PhoneNumber",
                        "Email",
                        "DOB",
                        "Relationship",
                        "Gender"});
            table2495.AddRow(new string[] {
                        "Primaryapplicant",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""});
            table2495.AddRow(new string[] {
                        "Wearer",
                        "WearerFName1",
                        "WearerLName",
                        "No",
                        "127 Church Street",
                        "21",
                        "Toronto",
                        "Ontario",
                        "M5C 2G5",
                        "",
                        "",
                        "07/07/1979",
                        "Child",
                        "Female"});
#line 219
                testRunner.And("I Enter the Applicant or Wearers details with respect to wearing items", ((string)(null)), table2495, "And ");
#line 223
    testRunner.And(string.Format("I Enter qualification questions {0} , {1} on Applicant and Wearer page", minorTrafficViolation, lossTheftDamageToJewelry), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 224
                testRunner.And("I Check the <TermsAndConditions> on Applicant and Wearer page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table2496 = new TechTalk.SpecFlow.Table(new string[] {
                        "JewelrySubType",
                        "Gender",
                        "DateOFPurchase",
                        "Appraisal"});
            table2496.AddRow(new string[] {
                        "",
                        "",
                        "",
                        "No"});
            table2496.AddRow(new string[] {
                        "",
                        "Women\'s",
                        "",
                        "No"});
#line 225
                testRunner.And("I Enter the jewelry information Jewelry Details page", ((string)(null)), table2496, "And ");
#line 229
                testRunner.And(string.Format("I select {0} in Jewelry Details page", effectiveDate), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 230
                testRunner.And(string.Format("I Enetr {0} in Securityoption of  Jewelry Details page", alarmAndSecurity), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table2497 = new TechTalk.SpecFlow.Table(new string[] {
                        "DeniedCov",
                        "DeniedCovreason"});
            table2497.AddRow(new string[] {
                        "no",
                        ""});
#line 231
       testRunner.And("I enter the  Personal  History Details in UW question details", ((string)(null)), table2497, "And ");
#line hidden
            TechTalk.SpecFlow.Table table2498 = new TechTalk.SpecFlow.Table(new string[] {
                        "SafeDepositBox",
                        "SafeDepositlocation",
                        "SafeDepositAddress",
                        "CommunityGated",
                        "FenceSurround",
                        "GuardAtGate",
                        "GuardPresent",
                        "CommunityPatrol",
                        "PatrolFrequency",
                        "HowyouEnterCommunity",
                        "HowGuestEnterCommunity",
                        "DomesticHelp",
                        "DomesticHelpType",
                        "EmployeeLength",
                        "DomesticHelpResideHome",
                        "DomesticHelpFreq",
                        "HomeHasOtherResidents",
                        "ReleationshiptoResident",
                        "JewelryWornFre"});
            table2498.AddRow(new string[] {
                        "No",
                        "test12",
                        "Address",
                        "No",
                        "Yes",
                        "Yes",
                        "night only",
                        "Yes",
                        "night only",
                        "EnterCommunity",
                        "GuestEnterCommunity",
                        "No",
                        "Medical Assistant",
                        "Less than 2 years ago",
                        "No",
                        "1-2 times a month",
                        "No",
                        "children",
                        "Never"});
#line 234
                testRunner.And("I enter  for Jewelry Storage Details in UW question details", ((string)(null)), table2498, "And ");
#line hidden
            TechTalk.SpecFlow.Table table2499 = new TechTalk.SpecFlow.Table(new string[] {
                        "TravelOverNightFreq",
                        "TravelAbroad",
                        "TravelSafeGuard",
                        "TravelDescription"});
            table2499.AddRow(new string[] {
                        "1-3 trips",
                        "yes",
                        "I keep it in the hotel safe",
                        ""});
#line 237
                testRunner.And("I enter Travel Details in UW question details", ((string)(null)), table2499, "And ");
#line 240
                testRunner.And(string.Format("I set Credit Consent {0} for CA", creditConsent), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table2500 = new TechTalk.SpecFlow.Table(new string[] {
                        "Submitapplication",
                        "PaperlessDelivery"});
            table2500.AddRow(new string[] {
                        "Yes",
                        "Yes"});
#line 241
       testRunner.And("I Review the application", ((string)(null)), table2500, "And ");
#line hidden
            TechTalk.SpecFlow.Table table2501 = new TechTalk.SpecFlow.Table(new string[] {
                        "ConfirmationContentValidation"});
            table2501.AddRow(new string[] {
                        "Your application will be reviewed and you\'ll hear from us within 2 to 3 business " +
                            "days on next steps. If your application is approved, we will update your policy " +
                            "effective date to the date when payment is taken."});
#line 244
                testRunner.And("I should get the confirmation page with the account number", ((string)(null)), table2501, "And ");
#line 247
    testRunner.And("I access the Guidewire PC on Desktop in IE", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 248
                 testRunner.And("I enter pluwmanager and pluwmanagerpwd on the PC9 Login page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 249
                testRunner.And("I select Accounts from the Search Tab menu of PC9", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 250
                testRunner.And(string.Format("search for account with {0} and select from search results in PC9", accountNumber), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 251
    testRunner.And(string.Format("I verify {0} , {1} , {2} , {3} , {4} , {5} , {6} , {7}, {8}  in Left Account Deta" +
                        "ils page for PC9", gWPrimaryInsured, gWAddress, phoneNumber, emailAddress, gWStatus, gWAddressType, gender, gWOccupation, gWDateofBirth), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 252
    testRunner.And(string.Format("I verify {0} , {1} , {2} , {3} , {4} in Right Account Details page for PC9 for QN" +
                        "A Account", gWDistributionSource, contactPreference, gWApplicationTakenBy, gWPaperlessDelivery, producerCode), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 253
    testRunner.And(string.Format("I verfy {0} , REGISTRY in Policy Term  for WorkOrders in PC9", policyStatus), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 254
          testRunner.And(string.Format("I verify Activity  {0} in PC9", pCActivities), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 255
    testRunner.And("I click on contacts on Left NavMenu Screen in PC9", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 256
       testRunner.And(string.Format("I verify  {0} in GW policy Center in Pc9", creditConsent), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 257
    testRunner.And("I click on summary on Left NavMenu Screen in PC9", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 258
       testRunner.And("I click workorder number of Account detail screen in PC9", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 259
       testRunner.And("I click on RiskAnalysis on Left NavMenu Screen in PC9", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 260
       testRunner.And(string.Format("I verify {0} in the Risk Analysis screen in PC9", activities), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 261
          testRunner.Then("I logout of the PC9 application", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("QNA_Reg04_CAN_NonSTP_Over_20k_Diff_Mailing_Surcharge: QNA")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "RegularQuoteAndApply_PC9")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("AddressIssue")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("NonSTP")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Rqna4")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Rqna")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "QNA")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ApplicationEnvironment", "QNA")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:TargetType", "desktop")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Capability", "")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:BrowserType", "Chrome")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:OperatingSystem", "")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:FirstName", "RegularQnA")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:LastName", "STP")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Address", "1001 Empress St")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Apartment", "")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:City", "Winnipeg")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:State", "Manitoba")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:AddressZipCode", "R3G 3P8")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:IsMailingAddress", "Yes")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:PhoneNumber", "2025352871")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:EmailAddress", "adzhoharidze@jminsure.com")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ContactPreference", "Email")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Gender", "FeMale")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:WearerType", "PrimaryApplicant")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:MinorTrafficViolation", "No")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:LossTheftDamageToJewelry", "No")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:PrivacyPolicy", "Yes")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:AlarmAndSecurity", "No")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:EffectiveDate", "currentdate")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ProducerCode", "DIRD")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:GWPaperlessDelivery", "Yes")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:GWApplicationTakenBy", "")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:GWDistributionSource", "Web")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:GWPrimaryInsured", "REGISTRY")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:GWDateofBirth", "05/01/1977")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:GWOccupation", "")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:GWAddressType", "Home")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:GWStatus", "Active")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:GWAddress", "REGISTRY")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:AccountNumber", "REGISTRY")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:GW_UserName", "su")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:GW_Password", "gw")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:PolicyStatus", "Quoted")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Activities", "Approval Needed - Canada Schedule Exceeds UW Guidelines")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:creditConsent", "No")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:PCActivities", "Submission with issues")]
        public virtual void QNA_Reg04_CAN_NonSTP_Over_20K_Diff_Mailing_Surcharge_QNA()
        {
#line 211
this.QNA_Reg04_CAN_NonSTP_Over_20K_Diff_Mailing_Surcharge("QNA", "desktop", "", "Chrome", "", "RegularQnA", "STP", "1001 Empress St", "", "Winnipeg", "Manitoba", "R3G 3P8", "Yes", "2025352871", "adzhoharidze@jminsure.com", "Email", "FeMale", "PrimaryApplicant", "No", "No", "Yes", "No", "currentdate", "DIRD", "Yes", "", "Web", "REGISTRY", "05/01/1977", "", "Home", "Active", "REGISTRY", "REGISTRY", "su", "gw", "Quoted", "Approval Needed - Canada Schedule Exceeds UW Guidelines", "No", "Submission with issues", ((string[])(null)));
#line hidden
        }
        
        public virtual void QNA_Reg05_CAN_NonSTP_Over_20K_Diff_Mailing_LossGreaterThen25K_Homicide(
                    string applicationEnvironment, 
                    string targetType, 
                    string capability, 
                    string browserType, 
                    string operatingSystem, 
                    string firstName, 
                    string lastName, 
                    string address, 
                    string apartment, 
                    string city, 
                    string state, 
                    string addressZipCode, 
                    string isMailingAddress, 
                    string phoneNumber, 
                    string emailAddress, 
                    string contactPreference, 
                    string gender, 
                    string minorTrafficViolation, 
                    string lossTheftDamageToJewelry, 
                    string privacyPolicy, 
                    string alarmAndSecurity, 
                    string effectiveDate, 
                    string producerCode, 
                    string gWPaperlessDelivery, 
                    string gWApplicationTakenBy, 
                    string gWDistributionSource, 
                    string gWPrimaryInsured, 
                    string gWDateofBirth, 
                    string gWOccupation, 
                    string gWAddressType, 
                    string gWStatus, 
                    string gWAddress, 
                    string accountNumber, 
                    string gW_UserName, 
                    string gW_Password, 
                    string policyStatus, 
                    string activities, 
                    string creditConsent, 
                    string pCActivities, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "NonSTP",
                    "regression",
                    "Rqna5",
                    "Rqna"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("QNA_Reg05_CAN_NonSTP_Over_20k_Diff_Mailing_LossGreaterThen25K_Homicide", @__tags);
#line 272
this.ScenarioSetup(scenarioInfo);
#line 273
                testRunner.Given(string.Format("I access the QuoteAndApp app in {0} , {1} , {2} , {3} and {4}", applicationEnvironment, targetType, capability, browserType, operatingSystem), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table2502 = new TechTalk.SpecFlow.Table(new string[] {
                        "ZipCode",
                        "JewelryType",
                        "Value"});
            table2502.AddRow(new string[] {
                        "R3G 3P8",
                        "Necklace",
                        "21001"});
            table2502.AddRow(new string[] {
                        "",
                        "Loose stone",
                        "22001"});
#line 274
                testRunner.When("I Enter the Quote Page Details", ((string)(null)), table2502, "When ");
#line 278
    testRunner.And("I click on NewExisting Customer Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 279
                testRunner.And(string.Format("I Enter the Contact Information {0} , {1} , {2} , {3} , {4} , {5} , {6} , {7} , {" +
                        "8} , {9} , {10} , {11} , {12}", firstName, lastName, address, apartment, city, state, addressZipCode, isMailingAddress, phoneNumber, emailAddress, contactPreference, gWDateofBirth, gender), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table2503 = new TechTalk.SpecFlow.Table(new string[] {
                        "WearerType",
                        "FirstName",
                        "LastName",
                        "AddressAsPriApp",
                        "Address",
                        "AptSuite",
                        "City",
                        "StateProv",
                        "ZipCode",
                        "PhoneNumber",
                        "Email",
                        "DOB",
                        "Relationship",
                        "Gender"});
            table2503.AddRow(new string[] {
                        "Primaryapplicant",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""});
            table2503.AddRow(new string[] {
                        "Wearer",
                        "WearerFName1",
                        "WearerLName",
                        "No",
                        "127 Church Street",
                        "21",
                        "Toronto",
                        "Ontario",
                        "M5C 2G5",
                        "",
                        "",
                        "07/07/1979",
                        "Child",
                        "Female"});
#line 280
                testRunner.And("I Enter the Applicant or Wearers details with respect to wearing items", ((string)(null)), table2503, "And ");
#line 284
    testRunner.And(string.Format("I Enter qualification questions {0} , {1} on Applicant and Wearer page", minorTrafficViolation, lossTheftDamageToJewelry), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table2504 = new TechTalk.SpecFlow.Table(new string[] {
                        "Date",
                        "Type"});
            table2504.AddRow(new string[] {
                        "05/03/2016",
                        "Homicide"});
#line 285
                testRunner.And("I Enetr Sentence completion details", ((string)(null)), table2504, "And ");
#line hidden
            TechTalk.SpecFlow.Table table2505 = new TechTalk.SpecFlow.Table(new string[] {
                        "Loss_Date",
                        "Type",
                        "LossAmount"});
            table2505.AddRow(new string[] {
                        "04/05/2016",
                        "Lost",
                        "30000"});
#line 288
    testRunner.And("I Enetr loss details", ((string)(null)), table2505, "And ");
#line 291
           testRunner.And("I Check the <TermsAndConditions> on Applicant and Wearer page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table2506 = new TechTalk.SpecFlow.Table(new string[] {
                        "JewelrySubType",
                        "Gender",
                        "DateOFPurchase",
                        "Appraisal"});
            table2506.AddRow(new string[] {
                        "",
                        "",
                        "",
                        "No"});
            table2506.AddRow(new string[] {
                        "",
                        "",
                        "",
                        "No"});
#line 292
                testRunner.And("I Enter the jewelry information Jewelry Details page", ((string)(null)), table2506, "And ");
#line 296
                testRunner.And(string.Format("I select {0} in Jewelry Details page", effectiveDate), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 297
                testRunner.And(string.Format("I Enetr {0} in Securityoption of  Jewelry Details page", alarmAndSecurity), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table2507 = new TechTalk.SpecFlow.Table(new string[] {
                        "DeniedCov",
                        "DeniedCovreason"});
            table2507.AddRow(new string[] {
                        "no",
                        ""});
#line 298
       testRunner.And("I enter the  Personal  History Details in UW question details", ((string)(null)), table2507, "And ");
#line hidden
            TechTalk.SpecFlow.Table table2508 = new TechTalk.SpecFlow.Table(new string[] {
                        "SafeDepositBox",
                        "SafeDepositlocation",
                        "SafeDepositAddress",
                        "CommunityGated",
                        "FenceSurround",
                        "GuardAtGate",
                        "GuardPresent",
                        "CommunityPatrol",
                        "PatrolFrequency",
                        "HowyouEnterCommunity",
                        "HowGuestEnterCommunity",
                        "DomesticHelp",
                        "DomesticHelpType",
                        "EmployeeLength",
                        "DomesticHelpResideHome",
                        "DomesticHelpFreq",
                        "HomeHasOtherResidents",
                        "ReleationshiptoResident",
                        "JewelryWornFre"});
            table2508.AddRow(new string[] {
                        "No",
                        "test12",
                        "Address",
                        "No",
                        "Yes",
                        "Yes",
                        "night only",
                        "Yes",
                        "night only",
                        "EnterCommunity",
                        "GuestEnterCommunity",
                        "No",
                        "Medical Assistant",
                        "Less than 2 years ago",
                        "No",
                        "1-2 times a month",
                        "No",
                        "children",
                        "Never"});
#line 301
                testRunner.And("I enter  for Jewelry Storage Details in UW question details", ((string)(null)), table2508, "And ");
#line hidden
            TechTalk.SpecFlow.Table table2509 = new TechTalk.SpecFlow.Table(new string[] {
                        "TravelOverNightFreq",
                        "TravelAbroad",
                        "TravelSafeGuard",
                        "TravelDescription"});
            table2509.AddRow(new string[] {
                        "1-3 trips",
                        "yes",
                        "I keep it in the hotel safe",
                        ""});
#line 304
                testRunner.And("I enter Travel Details in UW question details", ((string)(null)), table2509, "And ");
#line 307
                testRunner.And(string.Format("I set Credit Consent {0} for CA", creditConsent), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table2510 = new TechTalk.SpecFlow.Table(new string[] {
                        "Submitapplication",
                        "PaperlessDelivery"});
            table2510.AddRow(new string[] {
                        "Yes",
                        "Yes"});
#line 308
       testRunner.And("I Review the application", ((string)(null)), table2510, "And ");
#line hidden
            TechTalk.SpecFlow.Table table2511 = new TechTalk.SpecFlow.Table(new string[] {
                        "ConfirmationContentValidation"});
            table2511.AddRow(new string[] {
                        "Your application will be reviewed and you\'ll hear from us within 2 to 3 business " +
                            "days on next steps. If your application is approved, we will update your policy " +
                            "effective date to the date when payment is taken."});
#line 311
                testRunner.And("I should get the confirmation page with the account number", ((string)(null)), table2511, "And ");
#line 314
    testRunner.And("I access the Guidewire PC on Desktop in IE", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 315
                 testRunner.And("I enter pluwmanager and pluwmanagerpwd on the PC9 Login page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 316
                testRunner.And("I select Accounts from the Search Tab menu of PC9", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 317
                testRunner.And(string.Format("search for account with {0} and select from search results in PC9", accountNumber), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 318
    testRunner.And(string.Format("I verify {0} , {1} , {2} , {3} , {4} , {5} , {6} , {7}, {8}  in Left Account Deta" +
                        "ils page for PC9", gWPrimaryInsured, gWAddress, phoneNumber, emailAddress, gWStatus, gWAddressType, gender, gWOccupation, gWDateofBirth), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 319
    testRunner.And(string.Format("I verify {0} , {1} , {2} , {3} , {4} in Right Account Details page for PC9 for QN" +
                        "A Account", gWDistributionSource, contactPreference, gWApplicationTakenBy, gWPaperlessDelivery, producerCode), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 320
    testRunner.And(string.Format("I verfy {0} , REGISTRY in Policy Term  for WorkOrders in PC9", policyStatus), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 321
          testRunner.And(string.Format("I verify Activity  {0} in PC9", pCActivities), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 322
    testRunner.And("I click on contacts on Left NavMenu Screen in PC9", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 323
       testRunner.And(string.Format("I verify  {0} in GW policy Center in Pc9", creditConsent), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 324
    testRunner.And("I click on summary on Left NavMenu Screen in PC9", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 325
       testRunner.And("I click workorder number of Account detail screen in PC9", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 326
       testRunner.And("I click on RiskAnalysis on Left NavMenu Screen in PC9", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 327
       testRunner.And(string.Format("I verify {0} in the Risk Analysis screen in PC9", activities), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 328
          testRunner.Then("I logout of the PC9 application", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("QNA_Reg05_CAN_NonSTP_Over_20k_Diff_Mailing_LossGreaterThen25K_Homicide: QNA")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "RegularQuoteAndApply_PC9")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("NonSTP")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Rqna5")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Rqna")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "QNA")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ApplicationEnvironment", "QNA")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:TargetType", "desktop")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Capability", "")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:BrowserType", "Chrome")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:OperatingSystem", "")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:FirstName", "RegularQnA")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:LastName", "STP")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Address", "1001 Empress St")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Apartment", "")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:City", "Winnipeg")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:State", "Manitoba")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:AddressZipCode", "R3G 3P8")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:IsMailingAddress", "Yes")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:PhoneNumber", "2025352871")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:EmailAddress", "adzhoharidze@jminsure.com")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ContactPreference", "Email")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Gender", "FeMale")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:MinorTrafficViolation", "felony")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:LossTheftDamageToJewelry", "Yes")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:PrivacyPolicy", "Yes")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:AlarmAndSecurity", "No")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:EffectiveDate", "currentdate")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ProducerCode", "DIRD")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:GWPaperlessDelivery", "Yes")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:GWApplicationTakenBy", "")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:GWDistributionSource", "Web")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:GWPrimaryInsured", "REGISTRY")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:GWDateofBirth", "05/01/1977")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:GWOccupation", "")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:GWAddressType", "Home")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:GWStatus", "Active")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:GWAddress", "REGISTRY")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:AccountNumber", "REGISTRY")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:GW_UserName", "su")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:GW_Password", "gw")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:PolicyStatus", "Quoted")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Activities", "Approval Needed - Canada Schedule Exceeds UW Guidelines;Approval Needed - Applica" +
            "nt convicted of a felony;Loss or Claim Activity")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:creditConsent", "Yes")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:PCActivities", "Submission with issues")]
        public virtual void QNA_Reg05_CAN_NonSTP_Over_20K_Diff_Mailing_LossGreaterThen25K_Homicide_QNA()
        {
#line 272
this.QNA_Reg05_CAN_NonSTP_Over_20K_Diff_Mailing_LossGreaterThen25K_Homicide("QNA", "desktop", "", "Chrome", "", "RegularQnA", "STP", "1001 Empress St", "", "Winnipeg", "Manitoba", "R3G 3P8", "Yes", "2025352871", "adzhoharidze@jminsure.com", "Email", "FeMale", "felony", "Yes", "Yes", "No", "currentdate", "DIRD", "Yes", "", "Web", "REGISTRY", "05/01/1977", "", "Home", "Active", "REGISTRY", "REGISTRY", "su", "gw", "Quoted", "Approval Needed - Canada Schedule Exceeds UW Guidelines;Approval Needed - Applica" +
                    "nt convicted of a felony;Loss or Claim Activity", "Yes", "Submission with issues", ((string[])(null)));
#line hidden
        }
        
        public virtual void QNA_Reg07_GEICO_STP_MinimumPremeium(
                    string applicationEnvironment, 
                    string targetType, 
                    string capability, 
                    string browserType, 
                    string operatingSystem, 
                    string firstName, 
                    string lastName, 
                    string address, 
                    string apartment, 
                    string city, 
                    string state, 
                    string addressZipCode, 
                    string isMailingAddress, 
                    string phoneNumber, 
                    string emailAddress, 
                    string contactPreference, 
                    string gender, 
                    string wearerType, 
                    string minorTrafficViolation, 
                    string lossTheftDamageToJewelry, 
                    string privacyPolicy, 
                    string alarmAndSecurity, 
                    string effectiveDate, 
                    string producerCode, 
                    string gWPaperlessDelivery, 
                    string gWApplicationTakenBy, 
                    string gWDistributionSource, 
                    string gWPrimaryInsured, 
                    string gWDateofBirth, 
                    string gWOccupation, 
                    string gWAddressType, 
                    string gWStatus, 
                    string gWAddress, 
                    string accountNumber, 
                    string gW_UserName, 
                    string gW_Password, 
                    string gWPaymentPlan, 
                    string gWExpireDate, 
                    string gWPayment_Instrument, 
                    string autoPay, 
                    string gW_PolicyStatus, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "STP",
                    "regression",
                    "Rqna7",
                    "Rqna"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("QNA_Reg07_GEICO_STP_MinimumPremeium", @__tags);
#line 395
 this.ScenarioSetup(scenarioInfo);
#line 396
                testRunner.Given(string.Format("I access the QuoteAndApp app in {0} , {1} , {2} , {3} and {4}", applicationEnvironment, targetType, capability, browserType, operatingSystem), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table2512 = new TechTalk.SpecFlow.Table(new string[] {
                        "ZipCode",
                        "JewelryType",
                        "Value"});
            table2512.AddRow(new string[] {
                        "53189",
                        "Earrings",
                        "24"});
#line 397
                testRunner.When("I Enter the Quote Page Details", ((string)(null)), table2512, "When ");
#line 400
    testRunner.And("I click on NewExisting Customer Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 401
                testRunner.And("I verify Applicant Wearer Page error validation messages", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 402
                testRunner.And(string.Format("I Enter the Contact Information {0} , {1} , {2} , {3} , {4} , {5} , {6} , {7} , {" +
                        "8} , {9} , {10} , {11} , {12}", firstName, lastName, address, apartment, city, state, addressZipCode, isMailingAddress, phoneNumber, emailAddress, contactPreference, gWDateofBirth, gender), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table2513 = new TechTalk.SpecFlow.Table(new string[] {
                        "WearerType",
                        "FirstName",
                        "LastName",
                        "AddressAsPriApp",
                        "Address",
                        "AptSuite",
                        "City",
                        "StateProv",
                        "ZipCode",
                        "PhoneNumber",
                        "Email",
                        "DOB",
                        "Relationship",
                        "Gender"});
            table2513.AddRow(new string[] {
                        "PrimaryApplicant",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""});
#line 403
                testRunner.And("I Enter the Applicant or Wearers details with respect to wearing items", ((string)(null)), table2513, "And ");
#line 406
                testRunner.And(string.Format("I Enter qualification questions {0} , {1} on Applicant and Wearer page", minorTrafficViolation, lossTheftDamageToJewelry), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 407
                testRunner.And("I Check the <TermsAndConditions> on Applicant and Wearer page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table2514 = new TechTalk.SpecFlow.Table(new string[] {
                        "JewelrySubType",
                        "Gender",
                        "DateOFPurchase",
                        "Appraisal"});
            table2514.AddRow(new string[] {
                        "Pair of Earrings",
                        "",
                        "",
                        ""});
#line 408
                testRunner.And("I Enter the jewelry information Jewelry Details page", ((string)(null)), table2514, "And ");
#line 411
                testRunner.And(string.Format("I select {0} in Jewelry Details page", effectiveDate), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 412
                testRunner.And(string.Format("I Enetr {0} in Securityoption of  Jewelry Details page", alarmAndSecurity), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table2515 = new TechTalk.SpecFlow.Table(new string[] {
                        "Submitapplication",
                        "PaperlessDelivery"});
            table2515.AddRow(new string[] {
                        "NO",
                        "Yes"});
#line 413
                testRunner.And("I Review the application", ((string)(null)), table2515, "And ");
#line hidden
            TechTalk.SpecFlow.Table table2516 = new TechTalk.SpecFlow.Table(new string[] {
                        "AchType",
                        "Country",
                        "ConfirmationContentValidation"});
            table2516.AddRow(new string[] {
                        "Checking",
                        "USA",
                        "You have successfully completed your application, and your jewelry is now insured" +
                            "."});
#line 416
                testRunner.And(string.Format("I make payment using E-check, Set {0} and Later I verify confirmation message and" +
                        " policy number depending on Environment and {1}", autoPay, gW_PolicyStatus), ((string)(null)), table2516, "And ");
#line 419
                testRunner.And("I access the Guidewire PC on Desktop in IE", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 420
     testRunner.And("I enter pluwmanager and pluwmanagerpwd on the PC9 Login page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 421
    testRunner.And("I select Policies from the Search Tab menu of PC9", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 422
    testRunner.And(string.Format("search for account with {0} and select from search results in PC9", accountNumber), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 423
    testRunner.And(string.Format("I verify {0} , {1} , {2} , {3} , {4} , {5} , {6} , {7}, {8}  in Left Account Deta" +
                        "ils page for PC9", gWPrimaryInsured, gWAddress, phoneNumber, emailAddress, gWStatus, gWAddressType, gender, gWOccupation, gWDateofBirth), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 424
    testRunner.And(string.Format("I verify {0} , {1} , {2} , {3} , {4} in Right Account Details page for PC9 for QN" +
                        "A Account", gWDistributionSource, contactPreference, gWApplicationTakenBy, gWPaperlessDelivery, producerCode), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 425
                testRunner.And(string.Format("I verfy   , {0} , REGISTRY in Policy Term  for PC9", gW_PolicyStatus), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 426
    testRunner.And("I logout of the PC9 application", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 427
    testRunner.And("I Kill Web Driver", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 428
                testRunner.And("I access the Guidewire BC on Desktop in IE", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 429
              testRunner.And("I enter bcmanager and bcmanagerpwd on the BC Login page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 430
                testRunner.And("I select Search from the Tab menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 431
                testRunner.And(string.Format("search for account with {0} and select from search results for QNA", accountNumber), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 432
                testRunner.And("I select details from left navigation menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 433
                testRunner.Then(string.Format("I verify {0} , {1} , \" \" , {2} ,  REGISTRY , REGISTRY , {3} in Account Details pa" +
                        "ge", gWPrimaryInsured, gWAddress, gWPaymentPlan, gWPayment_Instrument), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 434
                testRunner.And("I Logout of the Billing Center application", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("QNA_Reg07_GEICO_STP_MinimumPremeium: QG")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "RegularQuoteAndApply_PC9")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("STP")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Rqna7")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Rqna")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "QG")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ApplicationEnvironment", "QG")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:TargetType", "desktop")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Capability", "")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:BrowserType", "Chrome")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:OperatingSystem", "")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:FirstName", "QNAGEICOGolden")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:LastName", "STP")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Address", "48 Jewelers Park Dr")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Apartment", "")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:City", "Neenah")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:State", "Wisconsin")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:AddressZipCode", "54956")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:IsMailingAddress", "Yes")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:PhoneNumber", "9205352871")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:EmailAddress", "adzhoharidze@jminsure.com")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ContactPreference", "Email")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Gender", "Male")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:WearerType", "PrimaryApplicant")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:MinorTrafficViolation", "No")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:LossTheftDamageToJewelry", "No")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:PrivacyPolicy", "Yes")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:AlarmAndSecurity", "No")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:EffectiveDate", "currentdate")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ProducerCode", "Z100D00")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:GWPaperlessDelivery", "Yes")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:GWApplicationTakenBy", "")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:GWDistributionSource", "Agency Express")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:GWPrimaryInsured", "REGISTRY")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:GWDateofBirth", "05/01/1977")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:GWOccupation", "")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:GWAddressType", "Home")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:GWStatus", "Active")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:GWAddress", "REGISTRY")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:AccountNumber", "REGISTRY")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:GW_UserName", "su")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:GW_Password", "gw")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:GWPaymentPlan", "Annual Pay")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:GWExpireDate", "REGISTRY")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:GWPayment_Instrument", "Checking ****3332")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:AutoPay", "Yes")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:GW_PolicyStatus", "In Force")]
        public virtual void QNA_Reg07_GEICO_STP_MinimumPremeium_QG()
        {
#line 395
 this.QNA_Reg07_GEICO_STP_MinimumPremeium("QG", "desktop", "", "Chrome", "", "QNAGEICOGolden", "STP", "48 Jewelers Park Dr", "", "Neenah", "Wisconsin", "54956", "Yes", "9205352871", "adzhoharidze@jminsure.com", "Email", "Male", "PrimaryApplicant", "No", "No", "Yes", "No", "currentdate", "Z100D00", "Yes", "", "Agency Express", "REGISTRY", "05/01/1977", "", "Home", "Active", "REGISTRY", "REGISTRY", "su", "gw", "Annual Pay", "REGISTRY", "Checking ****3332", "Yes", "In Force", ((string[])(null)));
#line hidden
        }
        
        public virtual void QNA_Reg08_CAN_STP_MinimumPremium(
                    string applicationEnvironment, 
                    string targetType, 
                    string capability, 
                    string browserType, 
                    string operatingSystem, 
                    string firstName, 
                    string lastName, 
                    string address, 
                    string apartment, 
                    string city, 
                    string state, 
                    string addressZipCode, 
                    string isMailingAddress, 
                    string phoneNumber, 
                    string emailAddress, 
                    string contactPreference, 
                    string gender, 
                    string minorTrafficViolation, 
                    string lossTheftDamageToJewelry, 
                    string privacyPolicy, 
                    string alarmAndSecurity, 
                    string effectiveDate, 
                    string producerCode, 
                    string gWPaperlessDelivery, 
                    string gWApplicationTakenBy, 
                    string gWDistributionSource, 
                    string gWPrimaryInsured, 
                    string gWDateofBirth, 
                    string gWOccupation, 
                    string gWAddressType, 
                    string gWStatus, 
                    string gWAddress, 
                    string accountNumber, 
                    string gW_UserName, 
                    string gW_Password, 
                    string gWPaymentPlan, 
                    string gWExpireDate, 
                    string gWPayment_Instrument, 
                    string autoPay, 
                    string gW_PolicyStatus, 
                    string creditConsent, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "STP",
                    "regression",
                    "Rqna8",
                    "Rqna"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("QNA_Reg08_CAN_STP_MinimumPremium", @__tags);
#line 444
 this.ScenarioSetup(scenarioInfo);
#line 445
                testRunner.Given(string.Format("I access the QuoteAndApp app in {0} , {1} , {2} , {3} and {4}", applicationEnvironment, targetType, capability, browserType, operatingSystem), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table2517 = new TechTalk.SpecFlow.Table(new string[] {
                        "ZipCode",
                        "JewelryType",
                        "Value"});
            table2517.AddRow(new string[] {
                        "R3G 3P8",
                        "Bracelet",
                        "49"});
#line 446
                testRunner.When("I Enter the Quote Page Details", ((string)(null)), table2517, "When ");
#line 449
    testRunner.And("I click on NewExisting Customer Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 450
                testRunner.And(string.Format("I Enter the Contact Information {0} , {1} , {2} , {3} , {4} , {5} , {6} , {7} , {" +
                        "8} , {9} , {10} , {11} , {12}", firstName, lastName, address, apartment, city, state, addressZipCode, isMailingAddress, phoneNumber, emailAddress, contactPreference, gWDateofBirth, gender), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table2518 = new TechTalk.SpecFlow.Table(new string[] {
                        "WearerType",
                        "FirstName",
                        "LastName",
                        "AddressAsPriApp",
                        "Address",
                        "AptSuite",
                        "City",
                        "StateProv",
                        "ZipCode",
                        "PhoneNumber",
                        "Email",
                        "DOB",
                        "Relationship",
                        "Gender"});
            table2518.AddRow(new string[] {
                        "Wearer",
                        "WearerFName1",
                        "WearerLName",
                        "No",
                        "127 Church Street",
                        "21",
                        "Toronto",
                        "Ontario",
                        "M5C 2G5",
                        "",
                        "",
                        "07/07/1979",
                        "Child",
                        "Female"});
#line 451
                testRunner.And("I Enter the Applicant or Wearers details with respect to wearing items", ((string)(null)), table2518, "And ");
#line 454
                testRunner.And(string.Format("I Enter qualification questions {0} , {1} on Applicant and Wearer page", minorTrafficViolation, lossTheftDamageToJewelry), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 455
                testRunner.And("I Check the <TermsAndConditions> on Applicant and Wearer page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table2519 = new TechTalk.SpecFlow.Table(new string[] {
                        "JewelrySubType",
                        "Gender",
                        "DateOFPurchase",
                        "Appraisal"});
            table2519.AddRow(new string[] {
                        "",
                        "Men\'s",
                        "",
                        ""});
#line 456
                testRunner.And("I Enter the jewelry information Jewelry Details page", ((string)(null)), table2519, "And ");
#line 459
                testRunner.And(string.Format("I select {0} in Jewelry Details page", effectiveDate), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 460
                testRunner.And(string.Format("I Enetr {0} in Securityoption of  Jewelry Details page", alarmAndSecurity), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 461
                testRunner.And(string.Format("I set Credit Consent {0} for CA", creditConsent), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table2520 = new TechTalk.SpecFlow.Table(new string[] {
                        "Submitapplication",
                        "PaperlessDelivery"});
            table2520.AddRow(new string[] {
                        "NO",
                        "Yes"});
#line 462
       testRunner.And("I Review the application", ((string)(null)), table2520, "And ");
#line hidden
            TechTalk.SpecFlow.Table table2521 = new TechTalk.SpecFlow.Table(new string[] {
                        "AchType",
                        "Country",
                        "ConfirmationContentValidation"});
            table2521.AddRow(new string[] {
                        "Saving",
                        "CA",
                        "You have successfully completed your application, and your jewelry is now insured" +
                            "."});
#line 465
      testRunner.And(string.Format("I make payment using E-check, Set {0} and Later I verify confirmation message and" +
                        " policy number depending on Environment and {1}", autoPay, gW_PolicyStatus), ((string)(null)), table2521, "And ");
#line 468
    testRunner.And("I access the Guidewire PC on Desktop in IE", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 469
     testRunner.And("I enter pluwmanager and pluwmanagerpwd on the PC9 Login page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 470
    testRunner.And("I select Policies from the Search Tab menu of PC9", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 471
    testRunner.And(string.Format("search for account with {0} and select from search results in PC9", accountNumber), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 472
    testRunner.And(string.Format("I verify {0} , {1} , {2} , {3} , {4} , {5} , {6} , {7}, {8}  in Left Account Deta" +
                        "ils page for PC9", gWPrimaryInsured, gWAddress, phoneNumber, emailAddress, gWStatus, gWAddressType, gender, gWOccupation, gWDateofBirth), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 473
    testRunner.And(string.Format("I verify {0} , {1} , {2} , {3} , {4} in Right Account Details page for PC9 for QN" +
                        "A Account", gWDistributionSource, contactPreference, gWApplicationTakenBy, gWPaperlessDelivery, producerCode), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 474
                testRunner.And(string.Format("I verfy   , {0} , REGISTRY in Policy Term  for PC9", gW_PolicyStatus), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 475
    testRunner.And("I click on contacts on Left NavMenu Screen in PC9", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 476
       testRunner.And(string.Format("I verify  {0} in GW policy Center in Pc9", creditConsent), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 477
    testRunner.And("I logout of the PC9 application", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 478
    testRunner.And("I Kill Web Driver", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 479
                testRunner.And("I access the Guidewire BC on Desktop in IE", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 480
              testRunner.And("I enter bcmanager and bcmanagerpwd on the BC Login page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 481
                testRunner.And("I select Search from the Tab menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 482
                testRunner.And(string.Format("search for account with {0} and select from search results for QNA", accountNumber), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 483
                testRunner.And("I select details from left navigation menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 484
                testRunner.Then(string.Format("I verify {0} , {1} , \" \" , {2} ,  REGISTRY , REGISTRY , {3} in Account Details pa" +
                        "ge", gWPrimaryInsured, gWAddress, gWPaymentPlan, gWPayment_Instrument), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 485
                testRunner.And("I Logout of the Billing Center application", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("QNA_Reg08_CAN_STP_MinimumPremium: QNA")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "RegularQuoteAndApply_PC9")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("STP")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Rqna8")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Rqna")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "QNA")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ApplicationEnvironment", "QNA")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:TargetType", "desktop")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Capability", "")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:BrowserType", "Chrome")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:OperatingSystem", "")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:FirstName", "Golden6")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:LastName", "NonSTP")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Address", "1001 Empress St")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Apartment", "")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:City", "Winnipeg")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:State", "Manitoba")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:AddressZipCode", "R3G 3P8")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:IsMailingAddress", "Yes")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:PhoneNumber", "9205352871")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:EmailAddress", "adzhoharidze@jminsure.com")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ContactPreference", "Email")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Gender", "Male")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:MinorTrafficViolation", "No")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:LossTheftDamageToJewelry", "No")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:PrivacyPolicy", "Yes")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:AlarmAndSecurity", "Monitored Alarm System")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:EffectiveDate", "currentdate")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ProducerCode", "DIRD")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:GWPaperlessDelivery", "Yes")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:GWApplicationTakenBy", "")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:GWDistributionSource", "Web")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:GWPrimaryInsured", "REGISTRY")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:GWDateofBirth", "07/01/1966")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:GWOccupation", "")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:GWAddressType", "Home")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:GWStatus", "Active")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:GWAddress", "REGISTRY")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:AccountNumber", "REGISTRY")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:GW_UserName", "su")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:GW_Password", "gw")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:GWPaymentPlan", "Annual Pay")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:GWExpireDate", "REGISTRY")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:GWPayment_Instrument", "Savings ****3332")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:AutoPay", "Yes")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:GW_PolicyStatus", "In Force")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:creditConsent", "Yes")]
        public virtual void QNA_Reg08_CAN_STP_MinimumPremium_QNA()
        {
#line 444
 this.QNA_Reg08_CAN_STP_MinimumPremium("QNA", "desktop", "", "Chrome", "", "Golden6", "NonSTP", "1001 Empress St", "", "Winnipeg", "Manitoba", "R3G 3P8", "Yes", "9205352871", "adzhoharidze@jminsure.com", "Email", "Male", "No", "No", "Yes", "Monitored Alarm System", "currentdate", "DIRD", "Yes", "", "Web", "REGISTRY", "07/01/1966", "", "Home", "Active", "REGISTRY", "REGISTRY", "su", "gw", "Annual Pay", "REGISTRY", "Savings ****3332", "Yes", "In Force", "Yes", ((string[])(null)));
#line hidden
        }
        
        public virtual void QNA_Reg09_GEICO_NonSTP_ApplicantFemale_WearerGents_ValueGreater5K(
                    string applicationEnvironment, 
                    string targetType, 
                    string capability, 
                    string browserType, 
                    string operatingSystem, 
                    string firstName, 
                    string lastName, 
                    string address, 
                    string apartment, 
                    string city, 
                    string state, 
                    string addressZipCode, 
                    string isMailingAddress, 
                    string phoneNumber, 
                    string emailAddress, 
                    string contactPreference, 
                    string gender, 
                    string minorTrafficViolation, 
                    string lossTheftDamageToJewelry, 
                    string privacyPolicy, 
                    string alarmAndSecurity, 
                    string effectiveDate, 
                    string producerCode, 
                    string gWPaperlessDelivery, 
                    string gWApplicationTakenBy, 
                    string gWDistributionSource, 
                    string gWPrimaryInsured, 
                    string gWDateofBirth, 
                    string gWOccupation, 
                    string gWAddressType, 
                    string gWStatus, 
                    string gWAddress, 
                    string accountNumber, 
                    string gW_UserName, 
                    string gW_Password, 
                    string policyStatus, 
                    string activities, 
                    string pCActivities, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "NonSTP",
                    "regression",
                    "Rqna9",
                    "Rqna"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("QNA_Reg09_GEICO_NonSTP_ApplicantFemale_WearerGents_value greater5k", @__tags);
#line 498
this.ScenarioSetup(scenarioInfo);
#line 499
                testRunner.Given(string.Format("I access the QuoteAndApp app in {0} , {1} , {2} , {3} and {4}", applicationEnvironment, targetType, capability, browserType, operatingSystem), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table2522 = new TechTalk.SpecFlow.Table(new string[] {
                        "ZipCode",
                        "JewelryType",
                        "Value"});
            table2522.AddRow(new string[] {
                        "53189",
                        "Watch",
                        "22000"});
#line 500
                testRunner.When("I Enter the Quote Page Details", ((string)(null)), table2522, "When ");
#line 503
    testRunner.And("I click on NewExisting Customer Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 504
                testRunner.And("I verify Applicant Wearer Page error validation messages", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 505
                testRunner.And(string.Format("I Enter the Contact Information {0} , {1} , {2} , {3} , {4} , {5} , {6} , {7} , {" +
                        "8} , {9} , {10} , {11} , {12}", firstName, lastName, address, apartment, city, state, addressZipCode, isMailingAddress, phoneNumber, emailAddress, contactPreference, gWDateofBirth, gender), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table2523 = new TechTalk.SpecFlow.Table(new string[] {
                        "WearerType",
                        "FirstName",
                        "LastName",
                        "AddressAsPriApp",
                        "Address",
                        "AptSuite",
                        "City",
                        "StateProv",
                        "ZipCode",
                        "PhoneNumber",
                        "Email",
                        "DOB",
                        "Relationship",
                        "Gender"});
            table2523.AddRow(new string[] {
                        "Wearer",
                        "WearerFName1",
                        "WearerLName",
                        "Yes",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "920-221-1279",
                        "vbadvel@jminsure.com",
                        "07/07/1985",
                        "Husband",
                        "Male"});
#line 506
                testRunner.And("I Enter the Applicant or Wearers details with respect to wearing items", ((string)(null)), table2523, "And ");
#line 509
                testRunner.And(string.Format("I Enter qualification questions {0} , {1} on Applicant and Wearer page", minorTrafficViolation, lossTheftDamageToJewelry), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 510
                testRunner.And("I Check the <TermsAndConditions> on Applicant and Wearer page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table2524 = new TechTalk.SpecFlow.Table(new string[] {
                        "JewelrySubType",
                        "Gender",
                        "DateOFPurchase",
                        "Appraisal"});
            table2524.AddRow(new string[] {
                        "Rolex",
                        "Men\'s",
                        "",
                        ""});
#line 511
                testRunner.And("I Enter the jewelry information Jewelry Details page", ((string)(null)), table2524, "And ");
#line 514
                testRunner.And(string.Format("I select {0} in Jewelry Details page", effectiveDate), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 515
                testRunner.And(string.Format("I Enetr {0} in Securityoption of  Jewelry Details page", alarmAndSecurity), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table2525 = new TechTalk.SpecFlow.Table(new string[] {
                        "DeniedCov",
                        "DeniedCovreason"});
            table2525.AddRow(new string[] {
                        "no",
                        ""});
#line 516
                testRunner.And("I enter the  Personal  History Details in UW question details", ((string)(null)), table2525, "And ");
#line hidden
            TechTalk.SpecFlow.Table table2526 = new TechTalk.SpecFlow.Table(new string[] {
                        "SafeDepositBox",
                        "SafeDepositlocation",
                        "SafeDepositAddress",
                        "CommunityGated",
                        "FenceSurround",
                        "GuardAtGate",
                        "GuardPresent",
                        "CommunityPatrol",
                        "PatrolFrequency",
                        "HowyouEnterCommunity",
                        "HowGuestEnterCommunity",
                        "DomesticHelp",
                        "DomesticHelpType",
                        "EmployeeLength",
                        "DomesticHelpResideHome",
                        "DomesticHelpFreq",
                        "HomeHasOtherResidents",
                        "ReleationshiptoResident",
                        "JewelryWornFre"});
            table2526.AddRow(new string[] {
                        "No",
                        "test12",
                        "Address",
                        "No",
                        "Yes",
                        "Yes",
                        "night only",
                        "Yes",
                        "night only",
                        "EnterCommunity",
                        "GuestEnterCommunity",
                        "No",
                        "Medical Assistant",
                        "Less than 2 years ago",
                        "No",
                        "1-2 times a month",
                        "No",
                        "children",
                        "Never"});
#line 519
                testRunner.And("I enter  for Jewelry Storage Details in UW question details", ((string)(null)), table2526, "And ");
#line hidden
            TechTalk.SpecFlow.Table table2527 = new TechTalk.SpecFlow.Table(new string[] {
                        "TravelOverNightFreq",
                        "TravelAbroad",
                        "TravelSafeGuard",
                        "TravelDescription"});
            table2527.AddRow(new string[] {
                        "1-3 trips",
                        "yes",
                        "I keep it in the hotel safe",
                        ""});
#line 522
                testRunner.And("I enter Travel Details in UW question details", ((string)(null)), table2527, "And ");
#line hidden
            TechTalk.SpecFlow.Table table2528 = new TechTalk.SpecFlow.Table(new string[] {
                        "Submitapplication",
                        "PaperlessDelivery"});
            table2528.AddRow(new string[] {
                        "Yes",
                        "Yes"});
#line 525
                testRunner.And("I Review the application", ((string)(null)), table2528, "And ");
#line hidden
            TechTalk.SpecFlow.Table table2529 = new TechTalk.SpecFlow.Table(new string[] {
                        "ConfirmationContentValidation"});
            table2529.AddRow(new string[] {
                        "Your application will be reviewed and you\'ll hear from us within 2 to 3 business " +
                            "days on next steps. If your application is approved, we will update your policy " +
                            "effective date to the date when payment is taken."});
#line 528
                testRunner.And("I should get the confirmation page with the account number", ((string)(null)), table2529, "And ");
#line 531
                testRunner.And("I access the Guidewire PC on Desktop in IE", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 532
                 testRunner.And("I enter pluwmanager and pluwmanagerpwd on the PC9 Login page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 533
                testRunner.And("I select Accounts from the Search Tab menu of PC9", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 534
                testRunner.And(string.Format("search for account with {0} and select from search results in PC9", accountNumber), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 535
    testRunner.And(string.Format("I verify {0} , {1} , {2} , {3} , {4} , {5} , {6} , {7}, {8}  in Left Account Deta" +
                        "ils page for PC9", gWPrimaryInsured, gWAddress, phoneNumber, emailAddress, gWStatus, gWAddressType, gender, gWOccupation, gWDateofBirth), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 536
    testRunner.And(string.Format("I verify {0} , {1} , {2} , {3} , {4} in Right Account Details page for PC9 for QN" +
                        "A Account", gWDistributionSource, contactPreference, gWApplicationTakenBy, gWPaperlessDelivery, producerCode), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 537
    testRunner.And(string.Format("I verify Activity  {0} in PC9", pCActivities), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 538
    testRunner.And(string.Format("I verfy {0} , REGISTRY in Policy Term  for WorkOrders in PC9", policyStatus), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 539
    testRunner.And("I click workorder number of Account detail screen in PC9", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 540
       testRunner.And("I click on RiskAnalysis on Left NavMenu Screen in PC9", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 541
       testRunner.And(string.Format("I verify {0} in the Risk Analysis screen in PC9", activities), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 542
          testRunner.Then("I logout of the PC9 application", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("QNA_Reg09_GEICO_NonSTP_ApplicantFemale_WearerGents_value greater5k: QG")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "RegularQuoteAndApply_PC9")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("NonSTP")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Rqna9")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Rqna")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "QG")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ApplicationEnvironment", "QG")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:TargetType", "desktop")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Capability", "")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:BrowserType", "Chrome")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:OperatingSystem", "")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:FirstName", "QNAScn9")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:LastName", "NonSTP")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Address", "48 Jewelers Park Dr")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Apartment", "")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:City", "Neenah")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:State", "Wisconsin")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:AddressZipCode", "54956")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:IsMailingAddress", "Yes")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:PhoneNumber", "8888888888")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:EmailAddress", "adzhoharidze@jminsure.com")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ContactPreference", "Email")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Gender", "FeMale")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:MinorTrafficViolation", "No")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:LossTheftDamageToJewelry", "No")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:PrivacyPolicy", "Yes")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:AlarmAndSecurity", "Local Alarm")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:EffectiveDate", "currentdate")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ProducerCode", "Z100D00")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:GWPaperlessDelivery", "Yes")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:GWApplicationTakenBy", "")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:GWDistributionSource", "Agency Express")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:GWPrimaryInsured", "REGISTRY")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:GWDateofBirth", "05/01/1977")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:GWOccupation", "")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:GWAddressType", "Home")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:GWStatus", "Active")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:GWAddress", "REGISTRY")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:AccountNumber", "REGISTRY")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:GW_UserName", "su")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:GW_Password", "gw")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:PolicyStatus", "Quoted")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Activities", "Applicant is less than or equal to 40 years old and item type is watch.;Total Gen" +
            "ts/Non-Gender Value is over the value threshold")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:PCActivities", "Submission with issues")]
        public virtual void QNA_Reg09_GEICO_NonSTP_ApplicantFemale_WearerGents_ValueGreater5K_QG()
        {
#line 498
this.QNA_Reg09_GEICO_NonSTP_ApplicantFemale_WearerGents_ValueGreater5K("QG", "desktop", "", "Chrome", "", "QNAScn9", "NonSTP", "48 Jewelers Park Dr", "", "Neenah", "Wisconsin", "54956", "Yes", "8888888888", "adzhoharidze@jminsure.com", "Email", "FeMale", "No", "No", "Yes", "Local Alarm", "currentdate", "Z100D00", "Yes", "", "Agency Express", "REGISTRY", "05/01/1977", "", "Home", "Active", "REGISTRY", "REGISTRY", "su", "gw", "Quoted", "Applicant is less than or equal to 40 years old and item type is watch.;Total Gen" +
                    "ts/Non-Gender Value is over the value threshold", "Submission with issues", ((string[])(null)));
#line hidden
        }
        
        public virtual void QNA_Reg10_GEICO_NonSTP_MulitiItem_ScheduleValueGreater_38_Less_50(
                    string applicationEnvironment, 
                    string targetType, 
                    string capability, 
                    string browserType, 
                    string operatingSystem, 
                    string firstName, 
                    string lastName, 
                    string address, 
                    string apartment, 
                    string city, 
                    string state, 
                    string addressZipCode, 
                    string isMailingAddress, 
                    string phoneNumber, 
                    string emailAddress, 
                    string contactPreference, 
                    string gender, 
                    string minorTrafficViolation, 
                    string lossTheftDamageToJewelry, 
                    string privacyPolicy, 
                    string alarmAndSecurity, 
                    string effectiveDate, 
                    string producerCode, 
                    string gWPaperlessDelivery, 
                    string gWApplicationTakenBy, 
                    string gWDistributionSource, 
                    string gWPrimaryInsured, 
                    string gWDateofBirth, 
                    string gWOccupation, 
                    string gWAddressType, 
                    string gWStatus, 
                    string gWAddress, 
                    string accountNumber, 
                    string gW_UserName, 
                    string gW_Password, 
                    string policyStatus, 
                    string activities, 
                    string pCActivities, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "NonSTP",
                    "regression",
                    "Rqna10",
                    "Rqna"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("QNA_Reg10_GEICO_NonSTP_MulitiItem_Schedule value Greater_38_less_50", @__tags);
#line 554
this.ScenarioSetup(scenarioInfo);
#line 555
                testRunner.Given(string.Format("I access the QuoteAndApp app in {0} , {1} , {2} , {3} and {4}", applicationEnvironment, targetType, capability, browserType, operatingSystem), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table2530 = new TechTalk.SpecFlow.Table(new string[] {
                        "ZipCode",
                        "JewelryType",
                        "Value"});
            table2530.AddRow(new string[] {
                        "53189",
                        "Earrings",
                        "26000"});
            table2530.AddRow(new string[] {
                        "",
                        "Bracelet",
                        "22500"});
#line 556
                testRunner.When("I Enter the Quote Page Details", ((string)(null)), table2530, "When ");
#line 560
    testRunner.And("I click on NewExisting Customer Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 561
                testRunner.And(string.Format("I Enter the Contact Information {0} , {1} , {2} , {3} , {4} , {5} , {6} , {7} , {" +
                        "8} , {9} , {10} , {11} , {12}", firstName, lastName, address, apartment, city, state, addressZipCode, isMailingAddress, phoneNumber, emailAddress, contactPreference, gWDateofBirth, gender), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table2531 = new TechTalk.SpecFlow.Table(new string[] {
                        "WearerType",
                        "FirstName",
                        "LastName",
                        "AddressAsPriApp",
                        "Address",
                        "AptSuite",
                        "City",
                        "StateProv",
                        "ZipCode",
                        "PhoneNumber",
                        "Email",
                        "DOB",
                        "Relationship",
                        "Gender"});
            table2531.AddRow(new string[] {
                        "PrimaryApplicant",
                        "",
                        "",
                        "Yes",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""});
            table2531.AddRow(new string[] {
                        "PrimaryApplicant",
                        "",
                        "",
                        "Yes",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""});
#line 562
                testRunner.And("I Enter the Applicant or Wearers details with respect to wearing items", ((string)(null)), table2531, "And ");
#line 566
       testRunner.And(string.Format("I Enter qualification questions {0} , {1} on Applicant and Wearer page", minorTrafficViolation, lossTheftDamageToJewelry), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 567
                testRunner.And("I Check the <TermsAndConditions> on Applicant and Wearer page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table2532 = new TechTalk.SpecFlow.Table(new string[] {
                        "JewelrySubType",
                        "Gender",
                        "DateOFPurchase",
                        "Appraisal"});
            table2532.AddRow(new string[] {
                        "Pair of Earrings",
                        "",
                        "01/04/2017",
                        "yes"});
            table2532.AddRow(new string[] {
                        "",
                        "Women\'s",
                        "",
                        ""});
#line 568
                testRunner.And("I Enter the jewelry information Jewelry Details page", ((string)(null)), table2532, "And ");
#line 572
                testRunner.And(string.Format("I select {0} in Jewelry Details page", effectiveDate), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 573
                testRunner.And(string.Format("I Enetr {0} in Securityoption of  Jewelry Details page", alarmAndSecurity), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table2533 = new TechTalk.SpecFlow.Table(new string[] {
                        "DeniedCov",
                        "DeniedCovreason"});
            table2533.AddRow(new string[] {
                        "no",
                        ""});
#line 574
               testRunner.And("I enter the  Personal  History Details in UW question details", ((string)(null)), table2533, "And ");
#line hidden
            TechTalk.SpecFlow.Table table2534 = new TechTalk.SpecFlow.Table(new string[] {
                        "SafeDepositBox",
                        "SafeDepositlocation",
                        "SafeDepositAddress",
                        "CommunityGated",
                        "FenceSurround",
                        "GuardAtGate",
                        "GuardPresent",
                        "CommunityPatrol",
                        "PatrolFrequency",
                        "HowyouEnterCommunity",
                        "HowGuestEnterCommunity",
                        "DomesticHelp",
                        "DomesticHelpType",
                        "EmployeeLength",
                        "DomesticHelpResideHome",
                        "DomesticHelpFreq",
                        "HomeHasOtherResidents",
                        "ReleationshiptoResident",
                        "JewelryWornFre"});
            table2534.AddRow(new string[] {
                        "No",
                        "test12",
                        "Address",
                        "No",
                        "Yes",
                        "Yes",
                        "night only",
                        "Yes",
                        "night only",
                        "EnterCommunity",
                        "GuestEnterCommunity",
                        "No",
                        "Medical Assistant",
                        "Less than 2 years ago",
                        "No",
                        "1-2 times a month",
                        "No",
                        "children",
                        "Never"});
#line 577
                testRunner.And("I enter  for Jewelry Storage Details in UW question details", ((string)(null)), table2534, "And ");
#line hidden
            TechTalk.SpecFlow.Table table2535 = new TechTalk.SpecFlow.Table(new string[] {
                        "TravelOverNightFreq",
                        "TravelAbroad",
                        "TravelSafeGuard",
                        "TravelDescription"});
            table2535.AddRow(new string[] {
                        "1-3 trips",
                        "yes",
                        "I keep it in the hotel safe",
                        ""});
#line 580
                testRunner.And("I enter Travel Details in UW question details", ((string)(null)), table2535, "And ");
#line hidden
            TechTalk.SpecFlow.Table table2536 = new TechTalk.SpecFlow.Table(new string[] {
                        "Submitapplication",
                        "PaperlessDelivery"});
            table2536.AddRow(new string[] {
                        "Yes",
                        "Yes"});
#line 583
                testRunner.And("I Review the application", ((string)(null)), table2536, "And ");
#line hidden
            TechTalk.SpecFlow.Table table2537 = new TechTalk.SpecFlow.Table(new string[] {
                        "ConfirmationContentValidation"});
            table2537.AddRow(new string[] {
                        "Your application will be reviewed and you\'ll hear from us within 2 to 3 business " +
                            "days on next steps. If your application is approved, we will update your policy " +
                            "effective date to the date when payment is taken."});
#line 586
                testRunner.And("I should get the confirmation page with the account number", ((string)(null)), table2537, "And ");
#line 589
                testRunner.And("I access the Guidewire PC on Desktop in IE", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 590
                 testRunner.And("I enter pluwmanager and pluwmanagerpwd on the PC9 Login page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 591
                testRunner.And("I select Accounts from the Search Tab menu of PC9", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 592
                testRunner.And(string.Format("search for account with {0} and select from search results in PC9", accountNumber), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 593
    testRunner.And(string.Format("I verify {0} , {1} , {2} , {3} , {4} , {5} , {6} , {7}, {8}  in Left Account Deta" +
                        "ils page for PC9", gWPrimaryInsured, gWAddress, phoneNumber, emailAddress, gWStatus, gWAddressType, gender, gWOccupation, gWDateofBirth), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 594
    testRunner.And(string.Format("I verify {0} , {1} , {2} , {3} , {4} in Right Account Details page for PC9 for QN" +
                        "A Account", gWDistributionSource, contactPreference, gWApplicationTakenBy, gWPaperlessDelivery, producerCode), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 595
    testRunner.And(string.Format("I verify Activity  {0} in PC9", pCActivities), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 596
    testRunner.And(string.Format("I verfy {0} , REGISTRY in Policy Term  for WorkOrders in PC9", policyStatus), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 597
    testRunner.And("I click workorder number of Account detail screen in PC9", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 598
       testRunner.And("I click on RiskAnalysis on Left NavMenu Screen in PC9", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 599
       testRunner.And(string.Format("I verify {0} in the Risk Analysis screen in PC9", activities), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 600
          testRunner.Then("I logout of the PC9 application", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("QNA_Reg10_GEICO_NonSTP_MulitiItem_Schedule value Greater_38_less_50: QG")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "RegularQuoteAndApply_PC9")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("NonSTP")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Rqna10")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Rqna")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "QG")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ApplicationEnvironment", "QG")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:TargetType", "desktop")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Capability", "")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:BrowserType", "Chrome")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:OperatingSystem", "")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:FirstName", "QNAScn9")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:LastName", "NonSTP")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Address", "48 Jewelers Park Dr")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Apartment", "")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:City", "Neenah")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:State", "Wisconsin")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:AddressZipCode", "54956")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:IsMailingAddress", "Yes")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:PhoneNumber", "8888888888")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:EmailAddress", "adzhoharidze@jminsure.com")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ContactPreference", "Email")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Gender", "FeMale")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:MinorTrafficViolation", "No")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:LossTheftDamageToJewelry", "No")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:PrivacyPolicy", "Yes")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:AlarmAndSecurity", "Local Alarm")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:EffectiveDate", "currentdate")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ProducerCode", "Z100D00")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:GWPaperlessDelivery", "Yes")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:GWApplicationTakenBy", "")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:GWDistributionSource", "Agency Express")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:GWPrimaryInsured", "REGISTRY")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:GWDateofBirth", "05/01/1977")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:GWOccupation", "")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:GWAddressType", "Home")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:GWStatus", "Active")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:GWAddress", "REGISTRY")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:AccountNumber", "REGISTRY")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:GW_UserName", "su")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:GW_Password", "gw")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:PolicyStatus", "Quoted")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Activities", "Item Value Exceeds Underwriting Guidelines")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:PCActivities", "Submission with issues")]
        public virtual void QNA_Reg10_GEICO_NonSTP_MulitiItem_ScheduleValueGreater_38_Less_50_QG()
        {
#line 554
this.QNA_Reg10_GEICO_NonSTP_MulitiItem_ScheduleValueGreater_38_Less_50("QG", "desktop", "", "Chrome", "", "QNAScn9", "NonSTP", "48 Jewelers Park Dr", "", "Neenah", "Wisconsin", "54956", "Yes", "8888888888", "adzhoharidze@jminsure.com", "Email", "FeMale", "No", "No", "Yes", "Local Alarm", "currentdate", "Z100D00", "Yes", "", "Agency Express", "REGISTRY", "05/01/1977", "", "Home", "Active", "REGISTRY", "REGISTRY", "su", "gw", "Quoted", "Item Value Exceeds Underwriting Guidelines", "Submission with issues", ((string[])(null)));
#line hidden
        }
        
        public virtual void QNA_Reg13_NonSTP_Felony_LossesGreater25K_Lessthen10Years(
                    string applicationEnvironment, 
                    string targetType, 
                    string capability, 
                    string browserType, 
                    string operatingSystem, 
                    string firstName, 
                    string lastName, 
                    string address, 
                    string apartment, 
                    string city, 
                    string state, 
                    string addressZipCode, 
                    string isMailingAddress, 
                    string phoneNumber, 
                    string emailAddress, 
                    string contactPreference, 
                    string gender, 
                    string wearerType, 
                    string minorTrafficViolation, 
                    string lossTheftDamageToJewelry, 
                    string privacyPolicy, 
                    string alarmAndSecurity, 
                    string effectiveDate, 
                    string producerCode, 
                    string gWPaperlessDelivery, 
                    string gWApplicationTakenBy, 
                    string gWDistributionSource, 
                    string gWPrimaryInsured, 
                    string gWDateofBirth, 
                    string gWOccupation, 
                    string gWAddressType, 
                    string gWStatus, 
                    string gWAddress, 
                    string accountNumber, 
                    string gW_UserName, 
                    string gW_Password, 
                    string policyStatus, 
                    string activities, 
                    string pCActivities, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "NonSTP",
                    "regression",
                    "Rqna13",
                    "Rqna"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("QNA_Reg13_NonSTP_Felony_lossesGreater25K_lessthen10years", @__tags);
#line 613
this.ScenarioSetup(scenarioInfo);
#line 614
                testRunner.Given(string.Format("I access the QuoteAndApp app in {0} , {1} , {2} , {3} and {4}", applicationEnvironment, targetType, capability, browserType, operatingSystem), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table2538 = new TechTalk.SpecFlow.Table(new string[] {
                        "ZipCode",
                        "JewelryType",
                        "Value"});
            table2538.AddRow(new string[] {
                        "53189",
                        "Necklace",
                        "15000"});
#line 615
                testRunner.When("I Enter the Quote Page Details", ((string)(null)), table2538, "When ");
#line 618
    testRunner.And("I click on NewExisting Customer Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 619
                testRunner.And(string.Format("I Enter the Contact Information {0} , {1} , {2} , {3} , {4} , {5} , {6} , {7} , {" +
                        "8} , {9} , {10} , {11} , {12}", firstName, lastName, address, apartment, city, state, addressZipCode, isMailingAddress, phoneNumber, emailAddress, contactPreference, gWDateofBirth, gender), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table2539 = new TechTalk.SpecFlow.Table(new string[] {
                        "WearerType",
                        "FirstName",
                        "LastName",
                        "AddressAsPriApp",
                        "Address",
                        "AptSuite",
                        "City",
                        "StateProv",
                        "ZipCode",
                        "PhoneNumber",
                        "Email",
                        "DOB",
                        "Relationship",
                        "Gender"});
            table2539.AddRow(new string[] {
                        "PrimaryApplicant",
                        "",
                        "",
                        "Yes",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""});
#line 620
                testRunner.And("I Enter the Applicant or Wearers details with respect to wearing items", ((string)(null)), table2539, "And ");
#line 623
            testRunner.And(string.Format("I Enter qualification questions {0} , {1} on Applicant and Wearer page", minorTrafficViolation, lossTheftDamageToJewelry), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table2540 = new TechTalk.SpecFlow.Table(new string[] {
                        "Date",
                        "Type"});
            table2540.AddRow(new string[] {
                        "03/03/2011",
                        "Drugs"});
#line 624
                testRunner.And("I Enetr Sentence completion details", ((string)(null)), table2540, "And ");
#line hidden
            TechTalk.SpecFlow.Table table2541 = new TechTalk.SpecFlow.Table(new string[] {
                        "Loss_Date",
                        "Type",
                        "LossAmount"});
            table2541.AddRow(new string[] {
                        "04/05/2017",
                        "Theft",
                        "7501"});
#line 627
      testRunner.And("I Enetr loss details", ((string)(null)), table2541, "And ");
#line 631
            testRunner.And("I Check the <TermsAndConditions> on Applicant and Wearer page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table2542 = new TechTalk.SpecFlow.Table(new string[] {
                        "JewelrySubType",
                        "Gender",
                        "DateOFPurchase",
                        "Appraisal"});
            table2542.AddRow(new string[] {
                        "",
                        "",
                        "",
                        ""});
#line 632
                testRunner.And("I Enter the jewelry information Jewelry Details page", ((string)(null)), table2542, "And ");
#line 635
                testRunner.And(string.Format("I select {0} in Jewelry Details page", effectiveDate), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 636
                testRunner.And(string.Format("I Enetr {0} in Securityoption of  Jewelry Details page", alarmAndSecurity), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table2543 = new TechTalk.SpecFlow.Table(new string[] {
                        "DeniedCov",
                        "DeniedCovreason"});
            table2543.AddRow(new string[] {
                        "no",
                        ""});
#line 637
                testRunner.And("I enter the  Personal  History Details in UW question details", ((string)(null)), table2543, "And ");
#line hidden
            TechTalk.SpecFlow.Table table2544 = new TechTalk.SpecFlow.Table(new string[] {
                        "SafeDepositBox",
                        "SafeDepositlocation",
                        "SafeDepositAddress",
                        "CommunityGated",
                        "FenceSurround",
                        "GuardAtGate",
                        "GuardPresent",
                        "CommunityPatrol",
                        "PatrolFrequency",
                        "HowyouEnterCommunity",
                        "HowGuestEnterCommunity",
                        "DomesticHelp",
                        "DomesticHelpType",
                        "EmployeeLength",
                        "DomesticHelpResideHome",
                        "DomesticHelpFreq",
                        "HomeHasOtherResidents",
                        "ReleationshiptoResident",
                        "JewelryWornFre"});
            table2544.AddRow(new string[] {
                        "No",
                        "test12",
                        "Address",
                        "No",
                        "Yes",
                        "Yes",
                        "night only",
                        "Yes",
                        "night only",
                        "EnterCommunity",
                        "GuestEnterCommunity",
                        "No",
                        "Medical Assistant",
                        "Less than 2 years ago",
                        "No",
                        "1-2 times a month",
                        "No",
                        "children",
                        "Never"});
#line 640
                testRunner.And("I enter  for Jewelry Storage Details in UW question details", ((string)(null)), table2544, "And ");
#line hidden
            TechTalk.SpecFlow.Table table2545 = new TechTalk.SpecFlow.Table(new string[] {
                        "TravelOverNightFreq",
                        "TravelAbroad",
                        "TravelSafeGuard",
                        "TravelDescription"});
            table2545.AddRow(new string[] {
                        "1-3 trips",
                        "yes",
                        "I keep it in the hotel safe",
                        ""});
#line 643
                testRunner.And("I enter Travel Details in UW question details", ((string)(null)), table2545, "And ");
#line hidden
            TechTalk.SpecFlow.Table table2546 = new TechTalk.SpecFlow.Table(new string[] {
                        "Submitapplication",
                        "PaperlessDelivery"});
            table2546.AddRow(new string[] {
                        "Yes",
                        "Yes"});
#line 646
                testRunner.And("I Review the application", ((string)(null)), table2546, "And ");
#line hidden
            TechTalk.SpecFlow.Table table2547 = new TechTalk.SpecFlow.Table(new string[] {
                        "ConfirmationContentValidation"});
            table2547.AddRow(new string[] {
                        "Your application will be reviewed and you\'ll hear from us within 2 to 3 business " +
                            "days on next steps. If your application is approved, we will update your policy " +
                            "effective date to the date when payment is taken."});
#line 649
                testRunner.And("I should get the confirmation page with the account number", ((string)(null)), table2547, "And ");
#line 652
               testRunner.And("I access the Guidewire PC on Desktop in IE", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 653
                 testRunner.And("I enter pluwmanager and pluwmanagerpwd on the PC9 Login page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 654
                testRunner.And("I select Accounts from the Search Tab menu of PC9", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 655
                testRunner.And(string.Format("search for account with {0} and select from search results in PC9", accountNumber), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 656
    testRunner.And(string.Format("I verify {0} , {1} , {2} , {3} , {4} , {5} , {6} , {7}, {8}  in Left Account Deta" +
                        "ils page for PC9", gWPrimaryInsured, gWAddress, phoneNumber, emailAddress, gWStatus, gWAddressType, gender, gWOccupation, gWDateofBirth), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 657
    testRunner.And(string.Format("I verify {0} , {1} , {2} , {3} , {4} in Right Account Details page for PC9 for QN" +
                        "A Account", gWDistributionSource, contactPreference, gWApplicationTakenBy, gWPaperlessDelivery, producerCode), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 658
    testRunner.And(string.Format("I verify Activity  {0} in PC9", pCActivities), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 659
    testRunner.And(string.Format("I verfy {0} , REGISTRY in Policy Term  for WorkOrders in PC9", policyStatus), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 660
    testRunner.And("I click workorder number of Account detail screen in PC9", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 661
       testRunner.And("I click on RiskAnalysis on Left NavMenu Screen in PC9", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 662
       testRunner.And(string.Format("I verify {0} in the Risk Analysis screen in PC9", activities), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 663
          testRunner.Then("I logout of the PC9 application", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("QNA_Reg13_NonSTP_Felony_lossesGreater25K_lessthen10years: QNA")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "RegularQuoteAndApply_PC9")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("NonSTP")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Rqna13")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Rqna")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "QNA")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ApplicationEnvironment", "QNA")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:TargetType", "desktop")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Capability", "")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:BrowserType", "Chrome")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:OperatingSystem", "")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:FirstName", "QNAGEICO")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:LastName", "STP")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Address", "48 Jewelers Park Dr")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Apartment", "")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:City", "Neenah")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:State", "Wisconsin")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:AddressZipCode", "54956")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:IsMailingAddress", "Yes")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:PhoneNumber", "8888888888")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:EmailAddress", "adzhoharidze@jminsure.com")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ContactPreference", "Email")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Gender", "FeMale")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:WearerType", "PrimaryApplicant")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:MinorTrafficViolation", "Felony")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:LossTheftDamageToJewelry", "Yes")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:PrivacyPolicy", "Yes")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:AlarmAndSecurity", "No")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:EffectiveDate", "currentdate")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ProducerCode", "DIRD")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:GWPaperlessDelivery", "Yes")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:GWApplicationTakenBy", "")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:GWDistributionSource", "Web")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:GWPrimaryInsured", "REGISTRY")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:GWDateofBirth", "05/01/1977")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:GWOccupation", "")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:GWAddressType", "Home")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:GWStatus", "Active")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:GWAddress", "REGISTRY")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:AccountNumber", "REGISTRY")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:GW_UserName", "su")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:GW_Password", "gw")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:PolicyStatus", "Quoted")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Activities", "Loss or Claim Activity")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:PCActivities", "Submission with issues")]
        public virtual void QNA_Reg13_NonSTP_Felony_LossesGreater25K_Lessthen10Years_QNA()
        {
#line 613
this.QNA_Reg13_NonSTP_Felony_LossesGreater25K_Lessthen10Years("QNA", "desktop", "", "Chrome", "", "QNAGEICO", "STP", "48 Jewelers Park Dr", "", "Neenah", "Wisconsin", "54956", "Yes", "8888888888", "adzhoharidze@jminsure.com", "Email", "FeMale", "PrimaryApplicant", "Felony", "Yes", "Yes", "No", "currentdate", "DIRD", "Yes", "", "Web", "REGISTRY", "05/01/1977", "", "Home", "Active", "REGISTRY", "REGISTRY", "su", "gw", "Quoted", "Loss or Claim Activity", "Submission with issues", ((string[])(null)));
#line hidden
        }
        
        public virtual void QNA_Reg14_STP_Misdemeanor_Lessthen16K(
                    string applicationEnvironment, 
                    string targetType, 
                    string capability, 
                    string browserType, 
                    string operatingSystem, 
                    string firstName, 
                    string lastName, 
                    string address, 
                    string apartment, 
                    string city, 
                    string state, 
                    string addressZipCode, 
                    string isMailingAddress, 
                    string phoneNumber, 
                    string emailAddress, 
                    string contactPreference, 
                    string gender, 
                    string wearerType, 
                    string minorTrafficViolation, 
                    string lossTheftDamageToJewelry, 
                    string privacyPolicy, 
                    string alarmAndSecurity, 
                    string effectiveDate, 
                    string producerCode, 
                    string gWPaperlessDelivery, 
                    string gWApplicationTakenBy, 
                    string gWDistributionSource, 
                    string gWPrimaryInsured, 
                    string gWDateofBirth, 
                    string gWOccupation, 
                    string gWAddressType, 
                    string gWStatus, 
                    string gWAddress, 
                    string accountNumber, 
                    string gW_UserName, 
                    string gW_Password, 
                    string gWPaymentPlan, 
                    string gWExpireDate, 
                    string gWPayment_Instrument, 
                    string autoPay, 
                    string gW_PolicyStatus, 
                    string termsAndConditions, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "STP",
                    "regression",
                    "Rqna14",
                    "Rqna"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("QNA_Reg14_STP_Misdemeanor_lessthen16K", @__tags);
#line 674
this.ScenarioSetup(scenarioInfo);
#line 675
                testRunner.Given(string.Format("I access the QuoteAndApp app in {0} , {1} , {2} , {3} and {4}", applicationEnvironment, targetType, capability, browserType, operatingSystem), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table2548 = new TechTalk.SpecFlow.Table(new string[] {
                        "ZipCode",
                        "JewelryType",
                        "Value"});
            table2548.AddRow(new string[] {
                        "53189",
                        "Watch",
                        "15000"});
#line 676
                testRunner.When("I Enter the Quote Page Details", ((string)(null)), table2548, "When ");
#line 679
                 testRunner.And("I click on NewExisting Customer Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 680
                testRunner.And(string.Format("I Enter the Contact Information {0} , {1} , {2} , {3} , {4} , {5} , {6} , {7} , {" +
                        "8} , {9} , {10} , {11} , {12}", firstName, lastName, address, apartment, city, state, addressZipCode, isMailingAddress, phoneNumber, emailAddress, contactPreference, gWDateofBirth, gender), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table2549 = new TechTalk.SpecFlow.Table(new string[] {
                        "WearerType",
                        "FirstName",
                        "LastName",
                        "AddressAsPriApp",
                        "Address",
                        "AptSuite",
                        "City",
                        "StateProv",
                        "ZipCode",
                        "PhoneNumber",
                        "Email",
                        "DOB",
                        "Relationship",
                        "Gender"});
            table2549.AddRow(new string[] {
                        "PrimaryApplicant",
                        "",
                        "",
                        "Yes",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""});
#line 681
                testRunner.And("I Enter the Applicant or Wearers details with respect to wearing items", ((string)(null)), table2549, "And ");
#line 684
            testRunner.And(string.Format("I Enter qualification questions {0} , {1} on Applicant and Wearer page", minorTrafficViolation, lossTheftDamageToJewelry), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table2550 = new TechTalk.SpecFlow.Table(new string[] {
                        "Date",
                        "Type"});
            table2550.AddRow(new string[] {
                        "03/03/2011",
                        "DUI/OWI"});
#line 685
                testRunner.And("I Enetr Sentence completion details", ((string)(null)), table2550, "And ");
#line 688
    testRunner.And(string.Format("I Check the {0} on Applicant and Wearer page", termsAndConditions), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table2551 = new TechTalk.SpecFlow.Table(new string[] {
                        "JewelrySubType",
                        "Gender",
                        "DateOFPurchase",
                        "Appraisal"});
            table2551.AddRow(new string[] {
                        "Rolex",
                        "Men\'s",
                        "",
                        ""});
#line 689
                testRunner.And("I Enter the jewelry information Jewelry Details page", ((string)(null)), table2551, "And ");
#line 692
                testRunner.And(string.Format("I select {0} in Jewelry Details page", effectiveDate), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 693
                testRunner.And(string.Format("I Enetr {0} in Securityoption of  Jewelry Details page", alarmAndSecurity), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table2552 = new TechTalk.SpecFlow.Table(new string[] {
                        "Submitapplication",
                        "PaperlessDelivery"});
            table2552.AddRow(new string[] {
                        "No",
                        "Yes"});
#line 694
                testRunner.And("I Review the application", ((string)(null)), table2552, "And ");
#line hidden
            TechTalk.SpecFlow.Table table2553 = new TechTalk.SpecFlow.Table(new string[] {
                        "cardType",
                        "Country",
                        "ConfirmationContentValidation"});
            table2553.AddRow(new string[] {
                        "master",
                        "USA",
                        "You have successfully completed your application, and your jewelry is now insured" +
                            "."});
#line 697
                testRunner.And(string.Format("I make payment using Card, Set {0} and Later I verify confirmation message and po" +
                        "licy number depending on Environment and {1}", autoPay, gW_PolicyStatus), ((string)(null)), table2553, "And ");
#line 700
               testRunner.And("I access the Guidewire PC on Desktop in IE", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 701
     testRunner.And("I enter pluwmanager and pluwmanagerpwd on the PC9 Login page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 702
    testRunner.And("I select Policies from the Search Tab menu of PC9", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 703
    testRunner.And(string.Format("search for account with {0} and select from search results in PC9", accountNumber), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 704
    testRunner.And(string.Format("I verify {0} , {1} , {2} , {3} , {4} , {5} , {6} , {7}, {8}  in Left Account Deta" +
                        "ils page for PC9", gWPrimaryInsured, gWAddress, phoneNumber, emailAddress, gWStatus, gWAddressType, gender, gWOccupation, gWDateofBirth), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 705
    testRunner.And(string.Format("I verify {0} , {1} , {2} , {3} , {4} in Right Account Details page for PC9 for QN" +
                        "A Account", gWDistributionSource, contactPreference, gWApplicationTakenBy, gWPaperlessDelivery, producerCode), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 706
                testRunner.And(string.Format("I verfy   , {0} , REGISTRY in Policy Term  for PC9", gW_PolicyStatus), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 707
    testRunner.And("I logout of the PC9 application", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 708
    testRunner.And("I Kill Web Driver", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 709
                testRunner.And("I access the Guidewire BC on Desktop in IE", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 710
              testRunner.And("I enter bcmanager and bcmanagerpwd on the BC Login page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 711
                testRunner.And("I select Search from the Tab menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 712
                testRunner.And(string.Format("search for account with {0} and select from search results for QNA", accountNumber), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 713
                testRunner.And("I select details from left navigation menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 714
                testRunner.Then(string.Format("I verify {0} , {1} , \" \" , {2} ,  REGISTRY , REGISTRY , {3} in Account Details pa" +
                        "ge", gWPrimaryInsured, gWAddress, gWPaymentPlan, gWPayment_Instrument), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 715
                testRunner.And("I Logout of the Billing Center application", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("QNA_Reg14_STP_Misdemeanor_lessthen16K: QNA")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "RegularQuoteAndApply_PC9")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("STP")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Rqna14")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Rqna")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "QNA")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ApplicationEnvironment", "QNA")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:TargetType", "desktop")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Capability", "")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:BrowserType", "Chrome")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:OperatingSystem", "")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:FirstName", "QNA")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:LastName", "STP")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Address", "48 Jewelers Park Dr")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Apartment", "")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:City", "Neenah")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:State", "Wisconsin")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:AddressZipCode", "54956")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:IsMailingAddress", "Yes")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:PhoneNumber", "8888888888")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:EmailAddress", "adzhoharidze@jminsure.com")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ContactPreference", "Email")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Gender", "FeMale")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:WearerType", "PrimaryApplicant")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:MinorTrafficViolation", "Misdemeanor")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:LossTheftDamageToJewelry", "No")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:PrivacyPolicy", "Yes")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:AlarmAndSecurity", "No")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:EffectiveDate", "currentdate")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ProducerCode", "DIRD")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:GWPaperlessDelivery", "Yes")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:GWApplicationTakenBy", "")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:GWDistributionSource", "Web")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:GWPrimaryInsured", "REGISTRY")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:GWDateofBirth", "05/01/1977")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:GWOccupation", "")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:GWAddressType", "Home")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:GWStatus", "Active")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:GWAddress", "REGISTRY")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:AccountNumber", "REGISTRY")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:GW_UserName", "su")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:GW_Password", "gw")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:GWPaymentPlan", "Annual Pay")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:GWExpireDate", "REGISTRY")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:GWPayment_Instrument", "MasterCard ****4444")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:AutoPay", "Yes")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:GW_PolicyStatus", "In Force")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:TermsAndConditions", "Yes")]
        public virtual void QNA_Reg14_STP_Misdemeanor_Lessthen16K_QNA()
        {
#line 674
this.QNA_Reg14_STP_Misdemeanor_Lessthen16K("QNA", "desktop", "", "Chrome", "", "QNA", "STP", "48 Jewelers Park Dr", "", "Neenah", "Wisconsin", "54956", "Yes", "8888888888", "adzhoharidze@jminsure.com", "Email", "FeMale", "PrimaryApplicant", "Misdemeanor", "No", "Yes", "No", "currentdate", "DIRD", "Yes", "", "Web", "REGISTRY", "05/01/1977", "", "Home", "Active", "REGISTRY", "REGISTRY", "su", "gw", "Annual Pay", "REGISTRY", "MasterCard ****4444", "Yes", "In Force", "Yes", ((string[])(null)));
#line hidden
        }
        
        public virtual void QNA_Reg15_STP_Misdemeanor_DUI_LossesGreater25K_Greaterthen10Years(
                    string applicationEnvironment, 
                    string targetType, 
                    string capability, 
                    string browserType, 
                    string operatingSystem, 
                    string firstName, 
                    string lastName, 
                    string address, 
                    string apartment, 
                    string city, 
                    string state, 
                    string addressZipCode, 
                    string isMailingAddress, 
                    string phoneNumber, 
                    string emailAddress, 
                    string contactPreference, 
                    string gender, 
                    string wearerType, 
                    string minorTrafficViolation, 
                    string lossTheftDamageToJewelry, 
                    string privacyPolicy, 
                    string alarmAndSecurity, 
                    string effectiveDate, 
                    string producerCode, 
                    string gWPaperlessDelivery, 
                    string gWApplicationTakenBy, 
                    string gWDistributionSource, 
                    string gWPrimaryInsured, 
                    string gWDateofBirth, 
                    string gWOccupation, 
                    string gWAddressType, 
                    string gWStatus, 
                    string gWAddress, 
                    string accountNumber, 
                    string gW_UserName, 
                    string gW_Password, 
                    string gWPaymentPlan, 
                    string gWExpireDate, 
                    string gWPayment_Instrument, 
                    string autoPay, 
                    string gW_PolicyStatus, 
                    string termsAndConditions, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "STP",
                    "regression",
                    "Rqna15",
                    "Rqna"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("QNA_Reg15_STP_Misdemeanor_DUI_lossesGreater25K_Greaterthen10years", @__tags);
#line 726
this.ScenarioSetup(scenarioInfo);
#line 727
   testRunner.Given(string.Format("I access the QuoteAndApp app in {0} , {1} , {2} , {3} and {4}", applicationEnvironment, targetType, capability, browserType, operatingSystem), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table2554 = new TechTalk.SpecFlow.Table(new string[] {
                        "ZipCode",
                        "JewelryType",
                        "Value"});
            table2554.AddRow(new string[] {
                        "53189",
                        "Pendant",
                        "15000"});
#line 728
                testRunner.When("I Enter the Quote Page Details", ((string)(null)), table2554, "When ");
#line 731
                 testRunner.And("I click on NewExisting Customer Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 732
                testRunner.And(string.Format("I Enter the Contact Information {0} , {1} , {2} , {3} , {4} , {5} , {6} , {7} , {" +
                        "8} , {9} , {10} , {11} , {12}", firstName, lastName, address, apartment, city, state, addressZipCode, isMailingAddress, phoneNumber, emailAddress, contactPreference, gWDateofBirth, gender), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table2555 = new TechTalk.SpecFlow.Table(new string[] {
                        "WearerType",
                        "FirstName",
                        "LastName",
                        "AddressAsPriApp",
                        "Address",
                        "AptSuite",
                        "City",
                        "StateProv",
                        "ZipCode",
                        "PhoneNumber",
                        "Email",
                        "DOB",
                        "Relationship",
                        "Gender"});
            table2555.AddRow(new string[] {
                        "PrimaryApplicant",
                        "",
                        "",
                        "Yes",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""});
#line 733
                testRunner.And("I Enter the Applicant or Wearers details with respect to wearing items", ((string)(null)), table2555, "And ");
#line 736
            testRunner.And(string.Format("I Enter qualification questions {0} , {1} on Applicant and Wearer page", minorTrafficViolation, lossTheftDamageToJewelry), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table2556 = new TechTalk.SpecFlow.Table(new string[] {
                        "Date",
                        "Type"});
            table2556.AddRow(new string[] {
                        "03/03/2011",
                        "DUI/OWI"});
#line 737
                testRunner.And("I Enetr Sentence completion details", ((string)(null)), table2556, "And ");
#line hidden
            TechTalk.SpecFlow.Table table2557 = new TechTalk.SpecFlow.Table(new string[] {
                        "Loss_Date",
                        "Type",
                        "LossAmount"});
            table2557.AddRow(new string[] {
                        "03/03/2001",
                        "Lost",
                        "26000"});
#line 740
     testRunner.And("I Enetr loss details", ((string)(null)), table2557, "And ");
#line 743
       testRunner.And(string.Format("I Check the {0} on Applicant and Wearer page", termsAndConditions), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table2558 = new TechTalk.SpecFlow.Table(new string[] {
                        "JewelrySubType",
                        "Gender",
                        "DateOFPurchase",
                        "Appraisal"});
            table2558.AddRow(new string[] {
                        "",
                        "",
                        "",
                        ""});
#line 744
                testRunner.And("I Enter the jewelry information Jewelry Details page", ((string)(null)), table2558, "And ");
#line 747
                testRunner.And(string.Format("I select {0} in Jewelry Details page", effectiveDate), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 748
                testRunner.And(string.Format("I Enetr {0} in Securityoption of  Jewelry Details page", alarmAndSecurity), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table2559 = new TechTalk.SpecFlow.Table(new string[] {
                        "Submitapplication",
                        "PaperlessDelivery"});
            table2559.AddRow(new string[] {
                        "No",
                        "Yes"});
#line 749
                testRunner.And("I Review the application", ((string)(null)), table2559, "And ");
#line hidden
            TechTalk.SpecFlow.Table table2560 = new TechTalk.SpecFlow.Table(new string[] {
                        "cardType",
                        "Country",
                        "ConfirmationContentValidation"});
            table2560.AddRow(new string[] {
                        "master",
                        "USA",
                        "You have successfully completed your application, and your jewelry is now insured" +
                            "."});
#line 752
                testRunner.And(string.Format("I make payment using Card, Set {0} and Later I verify confirmation message and po" +
                        "licy number depending on Environment and {1}", autoPay, gW_PolicyStatus), ((string)(null)), table2560, "And ");
#line 755
                testRunner.And("I access the Guidewire PC on Desktop in IE", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 756
     testRunner.And("I enter pluwmanager and pluwmanagerpwd on the PC9 Login page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 757
    testRunner.And("I select Policies from the Search Tab menu of PC9", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 758
    testRunner.And(string.Format("search for account with {0} and select from search results in PC9", accountNumber), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 759
    testRunner.And(string.Format("I verify {0} , {1} , {2} , {3} , {4} , {5} , {6} , {7}, {8}  in Left Account Deta" +
                        "ils page for PC9", gWPrimaryInsured, gWAddress, phoneNumber, emailAddress, gWStatus, gWAddressType, gender, gWOccupation, gWDateofBirth), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 760
    testRunner.And(string.Format("I verify {0} , {1} , {2} , {3} , {4} in Right Account Details page for PC9 for QN" +
                        "A Account", gWDistributionSource, contactPreference, gWApplicationTakenBy, gWPaperlessDelivery, producerCode), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 761
                testRunner.And(string.Format("I verfy   , {0} , REGISTRY in Policy Term  for PC9", gW_PolicyStatus), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 762
    testRunner.And("I logout of the PC9 application", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 763
    testRunner.And("I Kill Web Driver", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 764
                testRunner.And("I access the Guidewire BC on Desktop in IE", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 765
              testRunner.And("I enter bcmanager and bcmanagerpwd on the BC Login page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 766
                testRunner.And("I select Search from the Tab menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 767
                testRunner.And(string.Format("search for account with {0} and select from search results for QNA", accountNumber), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 768
                testRunner.And("I select details from left navigation menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 769
                testRunner.Then(string.Format("I verify {0} , {1} , \" \" , {2} ,  REGISTRY , REGISTRY , {3} in Account Details pa" +
                        "ge", gWPrimaryInsured, gWAddress, gWPaymentPlan, gWPayment_Instrument), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 770
                testRunner.And("I Logout of the Billing Center application", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("QNA_Reg15_STP_Misdemeanor_DUI_lossesGreater25K_Greaterthen10years: QNA")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "RegularQuoteAndApply_PC9")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("STP")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Rqna15")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Rqna")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "QNA")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ApplicationEnvironment", "QNA")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:TargetType", "desktop")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Capability", "")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:BrowserType", "Chrome")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:OperatingSystem", "")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:FirstName", "QNA")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:LastName", "STP")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Address", "48 Jewelers Park Dr")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Apartment", "")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:City", "Neenah")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:State", "Wisconsin")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:AddressZipCode", "54956")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:IsMailingAddress", "Yes")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:PhoneNumber", "8888888888")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:EmailAddress", "adzhoharidze@jminsure.com")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ContactPreference", "Email")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Gender", "FeMale")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:WearerType", "PrimaryApplicant")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:MinorTrafficViolation", "Misdemeanor")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:LossTheftDamageToJewelry", "Yes")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:PrivacyPolicy", "Yes")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:AlarmAndSecurity", "No")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:EffectiveDate", "currentdate")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ProducerCode", "DIRD")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:GWPaperlessDelivery", "Yes")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:GWApplicationTakenBy", "")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:GWDistributionSource", "Web")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:GWPrimaryInsured", "REGISTRY")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:GWDateofBirth", "05/01/1977")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:GWOccupation", "")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:GWAddressType", "Home")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:GWStatus", "Active")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:GWAddress", "REGISTRY")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:AccountNumber", "REGISTRY")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:GW_UserName", "su")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:GW_Password", "gw")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:GWPaymentPlan", "Annual Pay")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:GWExpireDate", "REGISTRY")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:GWPayment_Instrument", "MasterCard ****4444")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:AutoPay", "Yes")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:GW_PolicyStatus", "In Force")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:TermsAndConditions", "Yes")]
        public virtual void QNA_Reg15_STP_Misdemeanor_DUI_LossesGreater25K_Greaterthen10Years_QNA()
        {
#line 726
this.QNA_Reg15_STP_Misdemeanor_DUI_LossesGreater25K_Greaterthen10Years("QNA", "desktop", "", "Chrome", "", "QNA", "STP", "48 Jewelers Park Dr", "", "Neenah", "Wisconsin", "54956", "Yes", "8888888888", "adzhoharidze@jminsure.com", "Email", "FeMale", "PrimaryApplicant", "Misdemeanor", "Yes", "Yes", "No", "currentdate", "DIRD", "Yes", "", "Web", "REGISTRY", "05/01/1977", "", "Home", "Active", "REGISTRY", "REGISTRY", "su", "gw", "Annual Pay", "REGISTRY", "MasterCard ****4444", "Yes", "In Force", "Yes", ((string[])(null)));
#line hidden
        }
        
        public virtual void QNA_Reg16_GEICO_STP_MinimumPremeium_ShellAccount(
                    string applicationEnvironment, 
                    string targetType, 
                    string capability, 
                    string browserType, 
                    string operatingSystem, 
                    string firstName, 
                    string lastName, 
                    string address, 
                    string apartment, 
                    string city, 
                    string state, 
                    string addressZipCode, 
                    string isMailingAddress, 
                    string phoneNumber, 
                    string emailAddress, 
                    string contactPreference, 
                    string gender, 
                    string wearerType, 
                    string minorTrafficViolation, 
                    string lossTheftDamageToJewelry, 
                    string privacyPolicy, 
                    string alarmAndSecurity, 
                    string effectiveDate, 
                    string producerCode, 
                    string gWPaperlessDelivery, 
                    string gWApplicationTakenBy, 
                    string gWDistributionSource, 
                    string gWPrimaryInsured, 
                    string gWDateofBirth, 
                    string gWOccupation, 
                    string gWAddressType, 
                    string gWStatus, 
                    string gWAddress, 
                    string accountNumber, 
                    string gW_UserName, 
                    string gW_Password, 
                    string gWPaymentPlan, 
                    string gWExpireDate, 
                    string gWPayment_Instrument, 
                    string autoPay, 
                    string gW_PolicyStatus, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "STP",
                    "regression",
                    "Rqna16",
                    "Rqna"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("QNA_Reg16_GEICO_STP_MinimumPremeium_Shell Account", @__tags);
#line 781
 this.ScenarioSetup(scenarioInfo);
#line 782
  testRunner.Given(string.Format("I access the QuoteAndApp app in {0} , {1} , {2} , {3} and {4}", applicationEnvironment, targetType, capability, browserType, operatingSystem), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table2561 = new TechTalk.SpecFlow.Table(new string[] {
                        "ZipCode",
                        "JewelryType",
                        "Value"});
            table2561.AddRow(new string[] {
                        "53189",
                        "Earrings",
                        "24"});
#line 783
                testRunner.When("I Enter the Quote Page Details", ((string)(null)), table2561, "When ");
#line 786
    testRunner.And("I click on NewExisting Customer Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 787
                testRunner.And(string.Format("I Enter the Contact Information QNAGEICOGolden , STP , {0} , {1} , {2} , {3} , {4" +
                        "} , {5} , {6} , {7} , {8} , {9} , {10}", address, apartment, city, state, addressZipCode, isMailingAddress, phoneNumber, emailAddress, contactPreference, gWDateofBirth, gender), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table2562 = new TechTalk.SpecFlow.Table(new string[] {
                        "WearerType",
                        "FirstName",
                        "LastName",
                        "AddressAsPriApp",
                        "Address",
                        "AptSuite",
                        "City",
                        "StateProv",
                        "ZipCode",
                        "PhoneNumber",
                        "Email",
                        "DOB",
                        "Relationship",
                        "Gender"});
            table2562.AddRow(new string[] {
                        "PrimaryApplicant",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""});
#line 788
                testRunner.And("I Enter the Applicant or Wearers details with respect to wearing items", ((string)(null)), table2562, "And ");
#line 791
                testRunner.And(string.Format("I Enter qualification questions {0} , {1} on Applicant and Wearer page", minorTrafficViolation, lossTheftDamageToJewelry), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 792
                testRunner.And("I Check the <TermsAndConditions> on Applicant and Wearer page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table2563 = new TechTalk.SpecFlow.Table(new string[] {
                        "JewelrySubType",
                        "Gender",
                        "DateOFPurchase",
                        "Appraisal"});
            table2563.AddRow(new string[] {
                        "Pair of Earrings",
                        "",
                        "",
                        ""});
#line 793
                testRunner.And("I Enter the jewelry information Jewelry Details page", ((string)(null)), table2563, "And ");
#line 796
                testRunner.And(string.Format("I select {0} in Jewelry Details page", effectiveDate), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 797
                testRunner.And(string.Format("I Enetr {0} in Securityoption of  Jewelry Details page", alarmAndSecurity), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table2564 = new TechTalk.SpecFlow.Table(new string[] {
                        "Submitapplication",
                        "PaperlessDelivery"});
            table2564.AddRow(new string[] {
                        "NO",
                        "Yes"});
#line 798
                testRunner.And("I Review the application", ((string)(null)), table2564, "And ");
#line 801
    testRunner.And("I Kill Web Driver", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 802
                testRunner.And(string.Format("I access the QuoteAndApp app in {0} , {1} , {2} , {3} and {4}", applicationEnvironment, targetType, capability, browserType, operatingSystem), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table2565 = new TechTalk.SpecFlow.Table(new string[] {
                        "ZipCode",
                        "JewelryType",
                        "Value"});
            table2565.AddRow(new string[] {
                        "53189",
                        "Earrings",
                        "24"});
#line 803
                testRunner.And("I Enter the Quote Page Details", ((string)(null)), table2565, "And ");
#line 806
    testRunner.And("I click on NewExisting Customer Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 807
                testRunner.And(string.Format("I Enter the Contact Information {0} , {1} , {2} , {3} , {4} , {5} , {6} , {7} , {" +
                        "8} , {9} , {10} , {11} , {12}", firstName, lastName, address, apartment, city, state, addressZipCode, isMailingAddress, phoneNumber, emailAddress, contactPreference, gWDateofBirth, gender), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table2566 = new TechTalk.SpecFlow.Table(new string[] {
                        "WearerType",
                        "FirstName",
                        "LastName",
                        "AddressAsPriApp",
                        "Address",
                        "AptSuite",
                        "City",
                        "StateProv",
                        "ZipCode",
                        "PhoneNumber",
                        "Email",
                        "DOB",
                        "Relationship",
                        "Gender"});
            table2566.AddRow(new string[] {
                        "PrimaryApplicant",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""});
#line 808
                testRunner.And("I Enter the Applicant or Wearers details with respect to wearing items", ((string)(null)), table2566, "And ");
#line 811
                testRunner.And(string.Format("I Enter qualification questions {0} , {1} on Applicant and Wearer page", minorTrafficViolation, lossTheftDamageToJewelry), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 812
                testRunner.And("I Check the <TermsAndConditions> on Applicant and Wearer page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table2567 = new TechTalk.SpecFlow.Table(new string[] {
                        "JewelrySubType",
                        "Gender",
                        "DateOFPurchase",
                        "Appraisal"});
            table2567.AddRow(new string[] {
                        "Pair of Earrings",
                        "",
                        "",
                        ""});
#line 813
                testRunner.And("I Enter the jewelry information Jewelry Details page", ((string)(null)), table2567, "And ");
#line 816
                testRunner.And(string.Format("I select {0} in Jewelry Details page", effectiveDate), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 817
                testRunner.And(string.Format("I Enetr {0} in Securityoption of  Jewelry Details page", alarmAndSecurity), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table2568 = new TechTalk.SpecFlow.Table(new string[] {
                        "Submitapplication",
                        "PaperlessDelivery"});
            table2568.AddRow(new string[] {
                        "NO",
                        "Yes"});
#line 818
                testRunner.And("I Review the application", ((string)(null)), table2568, "And ");
#line hidden
            TechTalk.SpecFlow.Table table2569 = new TechTalk.SpecFlow.Table(new string[] {
                        "cardType",
                        "Country",
                        "ConfirmationContentValidation"});
            table2569.AddRow(new string[] {
                        "AMEX",
                        "USA",
                        "You have successfully completed your application, and your jewelry is now insured" +
                            "."});
#line 821
     testRunner.And(string.Format("I make payment using Card, Set {0} and Later I verify confirmation message and po" +
                        "licy number depending on Environment and {1}", autoPay, gW_PolicyStatus), ((string)(null)), table2569, "And ");
#line 824
      testRunner.And("I access the Guidewire PC on Desktop in IE", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 825
     testRunner.And("I enter pluwmanager and pluwmanagerpwd on the PC9 Login page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 826
    testRunner.And("I select Policies from the Search Tab menu of PC9", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 827
    testRunner.And(string.Format("search for account with {0} and select from search results in PC9", accountNumber), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 828
    testRunner.And(string.Format("I verify {0} , {1} , {2} , {3} , {4} , {5} , {6} , {7}, {8}  in Left Account Deta" +
                        "ils page for PC9", gWPrimaryInsured, gWAddress, phoneNumber, emailAddress, gWStatus, gWAddressType, gender, gWOccupation, gWDateofBirth), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 829
    testRunner.And(string.Format("I verify {0} , {1} , {2} , {3} , {4} in Right Account Details page for PC9 for QN" +
                        "A Account", gWDistributionSource, contactPreference, gWApplicationTakenBy, gWPaperlessDelivery, producerCode), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 830
                testRunner.And(string.Format("I verfy   , {0} , REGISTRY in Policy Term  for PC9", gW_PolicyStatus), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 831
    testRunner.And("I logout of the PC9 application", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 832
    testRunner.And("I Kill Web Driver", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 833
                testRunner.And("I access the Guidewire BC on Desktop in IE", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 834
              testRunner.And("I enter bcmanager and bcmanagerpwd on the BC Login page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 835
                testRunner.And("I select Search from the Tab menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 836
                testRunner.And(string.Format("search for account with {0} and select from search results for QNA", accountNumber), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 837
                testRunner.And("I select details from left navigation menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 838
                testRunner.Then(string.Format("I verify {0} , {1} , \" \" , {2} ,  REGISTRY , REGISTRY , {3} in Account Details pa" +
                        "ge", gWPrimaryInsured, gWAddress, gWPaymentPlan, gWPayment_Instrument), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 839
                testRunner.And("I Logout of the Billing Center application", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("QNA_Reg16_GEICO_STP_MinimumPremeium_Shell Account: QG")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "RegularQuoteAndApply_PC9")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("STP")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Rqna16")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Rqna")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "QG")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ApplicationEnvironment", "QG")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:TargetType", "desktop")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Capability", "")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:BrowserType", "Chrome")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:OperatingSystem", "")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:FirstName", "REGISTRY")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:LastName", "REGISTRY")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Address", "48 Jewelers Park Dr")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Apartment", "")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:City", "Neenah")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:State", "Wisconsin")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:AddressZipCode", "54956")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:IsMailingAddress", "Yes")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:PhoneNumber", "9205352871")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:EmailAddress", "adzhoharidze@jminsure.com")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ContactPreference", "Email")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Gender", "FeMale")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:WearerType", "PrimaryApplicant")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:MinorTrafficViolation", "No")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:LossTheftDamageToJewelry", "No")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:PrivacyPolicy", "Yes")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:AlarmAndSecurity", "No")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:EffectiveDate", "currentdate")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ProducerCode", "Z100D00")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:GWPaperlessDelivery", "Yes")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:GWApplicationTakenBy", "")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:GWDistributionSource", "Agency Express")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:GWPrimaryInsured", "REGISTRY")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:GWDateofBirth", "05/01/1977")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:GWOccupation", "")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:GWAddressType", "Home")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:GWStatus", "Active")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:GWAddress", "REGISTRY")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:AccountNumber", "REGISTRY")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:GW_UserName", "su")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:GW_Password", "gw")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:GWPaymentPlan", "Annual Pay")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:GWExpireDate", "REGISTRY")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:GWPayment_Instrument", "Amex ****0005")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:AutoPay", "Yes")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:GW_PolicyStatus", "In Force")]
        public virtual void QNA_Reg16_GEICO_STP_MinimumPremeium_ShellAccount_QG()
        {
#line 781
 this.QNA_Reg16_GEICO_STP_MinimumPremeium_ShellAccount("QG", "desktop", "", "Chrome", "", "REGISTRY", "REGISTRY", "48 Jewelers Park Dr", "", "Neenah", "Wisconsin", "54956", "Yes", "9205352871", "adzhoharidze@jminsure.com", "Email", "FeMale", "PrimaryApplicant", "No", "No", "Yes", "No", "currentdate", "Z100D00", "Yes", "", "Agency Express", "REGISTRY", "05/01/1977", "", "Home", "Active", "REGISTRY", "REGISTRY", "su", "gw", "Annual Pay", "REGISTRY", "Amex ****0005", "Yes", "In Force", ((string[])(null)));
#line hidden
        }
        
        public virtual void QNA_Reg17_STP_100_Items_US_LessThan50KTotal2(
                    string applicationEnvironment, 
                    string targetType, 
                    string capability, 
                    string browserType, 
                    string operatingSystem, 
                    string firstName, 
                    string lastName, 
                    string address, 
                    string apartment, 
                    string city, 
                    string state, 
                    string addressZipCode, 
                    string isMailingAddress, 
                    string phoneNumber, 
                    string emailAddress, 
                    string contactPreference, 
                    string gender, 
                    string wearerType, 
                    string minorTrafficViolation, 
                    string lossTheftDamageToJewelry, 
                    string privacyPolicy, 
                    string alarmAndSecurity, 
                    string emailOrPhoneJMIS, 
                    string effectiveDate, 
                    string producerCode, 
                    string gWPaperlessDelivery, 
                    string gWApplicationTakenBy, 
                    string gWDistributionSource, 
                    string gWPrimaryInsured, 
                    string gWDateofBirth, 
                    string gWOccupation, 
                    string gWAddressType, 
                    string gWStatus, 
                    string gWAddress, 
                    string accountNumber, 
                    string gW_UserName, 
                    string gW_Password, 
                    string policyStatus, 
                    string activities, 
                    string autoPay, 
                    string pCActivities, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "STP",
                    "regression",
                    "Rqna17",
                    "Rqna"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("QNA_Reg17_STP_100_Items_US_LessThan50kTotal2", @__tags);
#line 848
this.ScenarioSetup(scenarioInfo);
#line 849
testRunner.Given(string.Format("I access the QuoteAndApp app in {0} , {1} , {2} , {3} and {4}", applicationEnvironment, targetType, capability, browserType, operatingSystem), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table2570 = new TechTalk.SpecFlow.Table(new string[] {
                        "ZipCode",
                        "JewelryType",
                        "Value"});
            table2570.AddRow(new string[] {
                        "53189",
                        "Ring",
                        "150"});
            table2570.AddRow(new string[] {
                        "",
                        "Earrings",
                        "150"});
            table2570.AddRow(new string[] {
                        "",
                        "Ring",
                        "150"});
            table2570.AddRow(new string[] {
                        "",
                        "Earrings",
                        "150"});
            table2570.AddRow(new string[] {
                        "",
                        "Bracelet",
                        "150"});
            table2570.AddRow(new string[] {
                        "",
                        "Necklace",
                        "150"});
            table2570.AddRow(new string[] {
                        "",
                        "Watch",
                        "150"});
            table2570.AddRow(new string[] {
                        "",
                        "Pendant",
                        "150"});
            table2570.AddRow(new string[] {
                        "",
                        "Chain",
                        "150"});
            table2570.AddRow(new string[] {
                        "",
                        "Brooch",
                        "150"});
            table2570.AddRow(new string[] {
                        "",
                        "Loose stone",
                        "150"});
            table2570.AddRow(new string[] {
                        "",
                        "Earrings",
                        "150"});
            table2570.AddRow(new string[] {
                        "",
                        "Ring",
                        "150"});
            table2570.AddRow(new string[] {
                        "",
                        "Earrings",
                        "150"});
            table2570.AddRow(new string[] {
                        "",
                        "Bracelet",
                        "150"});
            table2570.AddRow(new string[] {
                        "",
                        "Necklace",
                        "150"});
            table2570.AddRow(new string[] {
                        "",
                        "Watch",
                        "150"});
            table2570.AddRow(new string[] {
                        "",
                        "Pendant",
                        "150"});
            table2570.AddRow(new string[] {
                        "",
                        "Chain",
                        "150"});
            table2570.AddRow(new string[] {
                        "",
                        "Brooch",
                        "150"});
            table2570.AddRow(new string[] {
                        "",
                        "Loose stone",
                        "150"});
            table2570.AddRow(new string[] {
                        "",
                        "Earrings",
                        "100"});
            table2570.AddRow(new string[] {
                        "",
                        "Ring",
                        "150"});
            table2570.AddRow(new string[] {
                        "",
                        "Earrings",
                        "500"});
            table2570.AddRow(new string[] {
                        "",
                        "Bracelet",
                        "150"});
            table2570.AddRow(new string[] {
                        "",
                        "Necklace",
                        "150"});
            table2570.AddRow(new string[] {
                        "",
                        "Watch",
                        "150"});
            table2570.AddRow(new string[] {
                        "",
                        "Pendant",
                        "500"});
            table2570.AddRow(new string[] {
                        "",
                        "Chain",
                        "350"});
            table2570.AddRow(new string[] {
                        "",
                        "Brooch",
                        "350"});
            table2570.AddRow(new string[] {
                        "",
                        "Loose stone",
                        "350"});
            table2570.AddRow(new string[] {
                        "",
                        "Earrings",
                        "350"});
            table2570.AddRow(new string[] {
                        "",
                        "Ring",
                        "350"});
            table2570.AddRow(new string[] {
                        "",
                        "Earrings",
                        "350"});
            table2570.AddRow(new string[] {
                        "",
                        "Bracelet",
                        "500"});
            table2570.AddRow(new string[] {
                        "",
                        "Necklace",
                        "500"});
            table2570.AddRow(new string[] {
                        "",
                        "Watch",
                        "350"});
            table2570.AddRow(new string[] {
                        "",
                        "Pendant",
                        "350"});
            table2570.AddRow(new string[] {
                        "",
                        "Chain",
                        "350"});
            table2570.AddRow(new string[] {
                        "",
                        "Brooch",
                        "350"});
            table2570.AddRow(new string[] {
                        "",
                        "Loose stone",
                        "300"});
            table2570.AddRow(new string[] {
                        "",
                        "Earrings",
                        "500"});
            table2570.AddRow(new string[] {
                        "",
                        "Ring",
                        "350"});
            table2570.AddRow(new string[] {
                        "",
                        "Earrings",
                        "350"});
            table2570.AddRow(new string[] {
                        "",
                        "Bracelet",
                        "350"});
            table2570.AddRow(new string[] {
                        "",
                        "Necklace",
                        "350"});
            table2570.AddRow(new string[] {
                        "",
                        "Watch",
                        "300"});
            table2570.AddRow(new string[] {
                        "",
                        "Pendant",
                        "350"});
            table2570.AddRow(new string[] {
                        "",
                        "Chain",
                        "500"});
            table2570.AddRow(new string[] {
                        "",
                        "Brooch",
                        "350"});
            table2570.AddRow(new string[] {
                        "",
                        "Loose stone",
                        "300"});
            table2570.AddRow(new string[] {
                        "",
                        "Earrings",
                        "500"});
            table2570.AddRow(new string[] {
                        "",
                        "Ring",
                        "300"});
            table2570.AddRow(new string[] {
                        "",
                        "Earrings",
                        "300"});
            table2570.AddRow(new string[] {
                        "",
                        "Bracelet",
                        "300"});
            table2570.AddRow(new string[] {
                        "",
                        "Necklace",
                        "300"});
            table2570.AddRow(new string[] {
                        "",
                        "Watch",
                        "300"});
            table2570.AddRow(new string[] {
                        "",
                        "Pendant",
                        "300"});
            table2570.AddRow(new string[] {
                        "",
                        "Chain",
                        "300"});
            table2570.AddRow(new string[] {
                        "",
                        "Brooch",
                        "250"});
            table2570.AddRow(new string[] {
                        "",
                        "Loose stone",
                        "300"});
            table2570.AddRow(new string[] {
                        "",
                        "Earrings",
                        "300"});
            table2570.AddRow(new string[] {
                        "",
                        "Ring",
                        "300"});
            table2570.AddRow(new string[] {
                        "",
                        "Earrings",
                        "300"});
            table2570.AddRow(new string[] {
                        "",
                        "Bracelet",
                        "300"});
            table2570.AddRow(new string[] {
                        "",
                        "Necklace",
                        "300"});
            table2570.AddRow(new string[] {
                        "",
                        "Watch",
                        "500"});
            table2570.AddRow(new string[] {
                        "",
                        "Pendant",
                        "500"});
            table2570.AddRow(new string[] {
                        "",
                        "Chain",
                        "500"});
            table2570.AddRow(new string[] {
                        "",
                        "Brooch",
                        "500"});
            table2570.AddRow(new string[] {
                        "",
                        "Loose stone",
                        "500"});
            table2570.AddRow(new string[] {
                        "",
                        "Earrings",
                        "500"});
            table2570.AddRow(new string[] {
                        "",
                        "Ring",
                        "500"});
            table2570.AddRow(new string[] {
                        "",
                        "Earrings",
                        "200"});
            table2570.AddRow(new string[] {
                        "",
                        "Bracelet",
                        "500"});
            table2570.AddRow(new string[] {
                        "",
                        "Necklace",
                        "500"});
            table2570.AddRow(new string[] {
                        "",
                        "Watch",
                        "500"});
            table2570.AddRow(new string[] {
                        "",
                        "Pendant",
                        "500"});
            table2570.AddRow(new string[] {
                        "",
                        "Chain",
                        "500"});
            table2570.AddRow(new string[] {
                        "",
                        "Brooch",
                        "500"});
            table2570.AddRow(new string[] {
                        "",
                        "Loose stone",
                        "500"});
            table2570.AddRow(new string[] {
                        "",
                        "Earrings",
                        "500"});
            table2570.AddRow(new string[] {
                        "",
                        "Ring",
                        "300"});
            table2570.AddRow(new string[] {
                        "",
                        "Earrings",
                        "500"});
            table2570.AddRow(new string[] {
                        "",
                        "Bracelet",
                        "500"});
            table2570.AddRow(new string[] {
                        "",
                        "Necklace",
                        "200"});
            table2570.AddRow(new string[] {
                        "",
                        "Watch",
                        "500"});
            table2570.AddRow(new string[] {
                        "",
                        "Pendant",
                        "500"});
            table2570.AddRow(new string[] {
                        "",
                        "Chain",
                        "300"});
            table2570.AddRow(new string[] {
                        "",
                        "Brooch",
                        "300"});
            table2570.AddRow(new string[] {
                        "",
                        "Loose stone",
                        "300"});
            table2570.AddRow(new string[] {
                        "",
                        "Earrings",
                        "300"});
            table2570.AddRow(new string[] {
                        "",
                        "Ring",
                        "300"});
            table2570.AddRow(new string[] {
                        "",
                        "Earrings",
                        "300"});
            table2570.AddRow(new string[] {
                        "",
                        "Bracelet",
                        "300"});
            table2570.AddRow(new string[] {
                        "",
                        "Necklace",
                        "300"});
            table2570.AddRow(new string[] {
                        "",
                        "Watch",
                        "300"});
            table2570.AddRow(new string[] {
                        "",
                        "Pendant",
                        "300"});
            table2570.AddRow(new string[] {
                        "",
                        "Chain",
                        "300"});
            table2570.AddRow(new string[] {
                        "",
                        "Brooch",
                        "300"});
#line 850
testRunner.When("I Enter the Quote Page Details", ((string)(null)), table2570, "When ");
#line 952
testRunner.And("I click on NewExisting Customer Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 953
testRunner.And(string.Format("I Enter the Contact Information {0} , {1} , {2} , {3} , {4} , {5} , {6} , {7} , {" +
                        "8} , {9} , {10} , {11} , {12}", firstName, lastName, address, apartment, city, state, addressZipCode, isMailingAddress, phoneNumber, emailAddress, contactPreference, gWDateofBirth, gender), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table2571 = new TechTalk.SpecFlow.Table(new string[] {
                        "WearerType",
                        "FirstName",
                        "LastName",
                        "AddressAsPriApp",
                        "Address",
                        "AptSuite",
                        "City",
                        "StateProv",
                        "ZipCode",
                        "PhoneNumber",
                        "Email",
                        "DOB",
                        "Relationship",
                        "Gender"});
            table2571.AddRow(new string[] {
                        "Primaryapplicant",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""});
            table2571.AddRow(new string[] {
                        "Primaryapplicant",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""});
            table2571.AddRow(new string[] {
                        "Primaryapplicant",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""});
            table2571.AddRow(new string[] {
                        "Primaryapplicant",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""});
            table2571.AddRow(new string[] {
                        "Primaryapplicant",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""});
            table2571.AddRow(new string[] {
                        "Primaryapplicant",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""});
            table2571.AddRow(new string[] {
                        "Primaryapplicant",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""});
            table2571.AddRow(new string[] {
                        "Primaryapplicant",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""});
            table2571.AddRow(new string[] {
                        "Primaryapplicant",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""});
            table2571.AddRow(new string[] {
                        "Primaryapplicant",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""});
            table2571.AddRow(new string[] {
                        "Primaryapplicant",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""});
            table2571.AddRow(new string[] {
                        "Primaryapplicant",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""});
            table2571.AddRow(new string[] {
                        "Primaryapplicant",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""});
            table2571.AddRow(new string[] {
                        "Primaryapplicant",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""});
            table2571.AddRow(new string[] {
                        "Primaryapplicant",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""});
            table2571.AddRow(new string[] {
                        "Primaryapplicant",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""});
            table2571.AddRow(new string[] {
                        "Primaryapplicant",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""});
            table2571.AddRow(new string[] {
                        "Primaryapplicant",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""});
            table2571.AddRow(new string[] {
                        "Primaryapplicant",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""});
            table2571.AddRow(new string[] {
                        "Primaryapplicant",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""});
            table2571.AddRow(new string[] {
                        "Primaryapplicant",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""});
            table2571.AddRow(new string[] {
                        "Primaryapplicant",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""});
            table2571.AddRow(new string[] {
                        "Primaryapplicant",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""});
            table2571.AddRow(new string[] {
                        "Primaryapplicant",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""});
            table2571.AddRow(new string[] {
                        "Primaryapplicant",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""});
            table2571.AddRow(new string[] {
                        "Primaryapplicant",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""});
            table2571.AddRow(new string[] {
                        "Primaryapplicant",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""});
            table2571.AddRow(new string[] {
                        "Primaryapplicant",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""});
            table2571.AddRow(new string[] {
                        "Primaryapplicant",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""});
            table2571.AddRow(new string[] {
                        "Primaryapplicant",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""});
            table2571.AddRow(new string[] {
                        "Primaryapplicant",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""});
            table2571.AddRow(new string[] {
                        "Primaryapplicant",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""});
            table2571.AddRow(new string[] {
                        "Primaryapplicant",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""});
            table2571.AddRow(new string[] {
                        "Primaryapplicant",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""});
            table2571.AddRow(new string[] {
                        "Primaryapplicant",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""});
            table2571.AddRow(new string[] {
                        "Primaryapplicant",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""});
            table2571.AddRow(new string[] {
                        "Primaryapplicant",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""});
            table2571.AddRow(new string[] {
                        "Primaryapplicant",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""});
            table2571.AddRow(new string[] {
                        "Primaryapplicant",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""});
            table2571.AddRow(new string[] {
                        "Primaryapplicant",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""});
            table2571.AddRow(new string[] {
                        "Primaryapplicant",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""});
            table2571.AddRow(new string[] {
                        "Primaryapplicant",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""});
            table2571.AddRow(new string[] {
                        "Primaryapplicant",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""});
            table2571.AddRow(new string[] {
                        "Primaryapplicant",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""});
            table2571.AddRow(new string[] {
                        "Primaryapplicant",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""});
            table2571.AddRow(new string[] {
                        "Primaryapplicant",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""});
            table2571.AddRow(new string[] {
                        "Primaryapplicant",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""});
            table2571.AddRow(new string[] {
                        "Primaryapplicant",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""});
            table2571.AddRow(new string[] {
                        "Primaryapplicant",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""});
            table2571.AddRow(new string[] {
                        "Primaryapplicant",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""});
            table2571.AddRow(new string[] {
                        "Primaryapplicant",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""});
            table2571.AddRow(new string[] {
                        "Primaryapplicant",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""});
            table2571.AddRow(new string[] {
                        "Primaryapplicant",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""});
            table2571.AddRow(new string[] {
                        "Primaryapplicant",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""});
            table2571.AddRow(new string[] {
                        "Primaryapplicant",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""});
            table2571.AddRow(new string[] {
                        "Primaryapplicant",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""});
            table2571.AddRow(new string[] {
                        "Primaryapplicant",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""});
            table2571.AddRow(new string[] {
                        "Primaryapplicant",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""});
            table2571.AddRow(new string[] {
                        "Primaryapplicant",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""});
            table2571.AddRow(new string[] {
                        "Primaryapplicant",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""});
            table2571.AddRow(new string[] {
                        "Primaryapplicant",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""});
            table2571.AddRow(new string[] {
                        "Primaryapplicant",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""});
            table2571.AddRow(new string[] {
                        "Primaryapplicant",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""});
            table2571.AddRow(new string[] {
                        "Primaryapplicant",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""});
            table2571.AddRow(new string[] {
                        "Primaryapplicant",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""});
            table2571.AddRow(new string[] {
                        "Primaryapplicant",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""});
            table2571.AddRow(new string[] {
                        "Primaryapplicant",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""});
            table2571.AddRow(new string[] {
                        "Primaryapplicant",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""});
            table2571.AddRow(new string[] {
                        "Primaryapplicant",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""});
            table2571.AddRow(new string[] {
                        "Primaryapplicant",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""});
            table2571.AddRow(new string[] {
                        "Primaryapplicant",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""});
            table2571.AddRow(new string[] {
                        "Primaryapplicant",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""});
            table2571.AddRow(new string[] {
                        "Primaryapplicant",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""});
            table2571.AddRow(new string[] {
                        "Primaryapplicant",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""});
            table2571.AddRow(new string[] {
                        "Primaryapplicant",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""});
            table2571.AddRow(new string[] {
                        "Primaryapplicant",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""});
            table2571.AddRow(new string[] {
                        "Primaryapplicant",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""});
            table2571.AddRow(new string[] {
                        "Primaryapplicant",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""});
            table2571.AddRow(new string[] {
                        "Primaryapplicant",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""});
            table2571.AddRow(new string[] {
                        "Primaryapplicant",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""});
            table2571.AddRow(new string[] {
                        "Primaryapplicant",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""});
            table2571.AddRow(new string[] {
                        "Primaryapplicant",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""});
            table2571.AddRow(new string[] {
                        "Primaryapplicant",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""});
            table2571.AddRow(new string[] {
                        "Primaryapplicant",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""});
            table2571.AddRow(new string[] {
                        "Primaryapplicant",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""});
            table2571.AddRow(new string[] {
                        "Primaryapplicant",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""});
            table2571.AddRow(new string[] {
                        "Primaryapplicant",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""});
            table2571.AddRow(new string[] {
                        "Primaryapplicant",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""});
            table2571.AddRow(new string[] {
                        "Primaryapplicant",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""});
            table2571.AddRow(new string[] {
                        "Primaryapplicant",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""});
            table2571.AddRow(new string[] {
                        "Primaryapplicant",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""});
            table2571.AddRow(new string[] {
                        "Primaryapplicant",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""});
            table2571.AddRow(new string[] {
                        "Primaryapplicant",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""});
            table2571.AddRow(new string[] {
                        "Primaryapplicant",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""});
            table2571.AddRow(new string[] {
                        "Primaryapplicant",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""});
            table2571.AddRow(new string[] {
                        "Primaryapplicant",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""});
            table2571.AddRow(new string[] {
                        "Primaryapplicant",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""});
            table2571.AddRow(new string[] {
                        "Primaryapplicant",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""});
            table2571.AddRow(new string[] {
                        "Primaryapplicant",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""});
            table2571.AddRow(new string[] {
                        "Primaryapplicant",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""});
#line 954
testRunner.And("I Enter the Applicant or Wearers details with respect to wearing items", ((string)(null)), table2571, "And ");
#line 1057
testRunner.And(string.Format("I Enter qualification questions {0} , {1} on Applicant and Wearer page", minorTrafficViolation, lossTheftDamageToJewelry), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1058
testRunner.And("I Check the <TermsAndConditions> on Applicant and Wearer page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table2572 = new TechTalk.SpecFlow.Table(new string[] {
                        "JewelrySubType",
                        "Gender",
                        "DateOFPurchase",
                        "Appraisal"});
            table2572.AddRow(new string[] {
                        "Engagement Ring",
                        "Women\'s",
                        "",
                        ""});
            table2572.AddRow(new string[] {
                        "Pair of Earrings",
                        "",
                        "",
                        ""});
            table2572.AddRow(new string[] {
                        "Engagement Ring",
                        "Women\'s",
                        "",
                        ""});
            table2572.AddRow(new string[] {
                        "Pair of Earrings",
                        "",
                        "",
                        ""});
            table2572.AddRow(new string[] {
                        "",
                        "Women\'s",
                        "",
                        ""});
            table2572.AddRow(new string[] {
                        "",
                        "",
                        "",
                        ""});
            table2572.AddRow(new string[] {
                        "Rolex",
                        "Women\'s",
                        "",
                        ""});
            table2572.AddRow(new string[] {
                        "",
                        "",
                        "",
                        ""});
            table2572.AddRow(new string[] {
                        "",
                        "Women\'s",
                        "",
                        ""});
            table2572.AddRow(new string[] {
                        "",
                        "",
                        "",
                        ""});
            table2572.AddRow(new string[] {
                        "",
                        "",
                        "",
                        ""});
            table2572.AddRow(new string[] {
                        "Pair of Earrings",
                        "",
                        "",
                        ""});
            table2572.AddRow(new string[] {
                        "Engagement Ring",
                        "Women\'s",
                        "",
                        ""});
            table2572.AddRow(new string[] {
                        "Pair of Earrings",
                        "",
                        "",
                        ""});
            table2572.AddRow(new string[] {
                        "",
                        "Women\'s",
                        "",
                        ""});
            table2572.AddRow(new string[] {
                        "",
                        "",
                        "",
                        ""});
            table2572.AddRow(new string[] {
                        "Rolex",
                        "Women\'s",
                        "",
                        ""});
            table2572.AddRow(new string[] {
                        "",
                        "",
                        "",
                        ""});
            table2572.AddRow(new string[] {
                        "",
                        "Women\'s",
                        "",
                        ""});
            table2572.AddRow(new string[] {
                        "",
                        "",
                        "",
                        ""});
            table2572.AddRow(new string[] {
                        "",
                        "",
                        "",
                        ""});
            table2572.AddRow(new string[] {
                        "Pair of Earrings",
                        "",
                        "",
                        ""});
            table2572.AddRow(new string[] {
                        "Engagement Ring",
                        "Women\'s",
                        "",
                        ""});
            table2572.AddRow(new string[] {
                        "Pair of Earrings",
                        "",
                        "",
                        ""});
            table2572.AddRow(new string[] {
                        "",
                        "Women\'s",
                        "",
                        ""});
            table2572.AddRow(new string[] {
                        "",
                        "",
                        "",
                        ""});
            table2572.AddRow(new string[] {
                        "Rolex",
                        "Women\'s",
                        "",
                        ""});
            table2572.AddRow(new string[] {
                        "",
                        "",
                        "",
                        ""});
            table2572.AddRow(new string[] {
                        "",
                        "Women\'s",
                        "",
                        ""});
            table2572.AddRow(new string[] {
                        "",
                        "",
                        "",
                        ""});
            table2572.AddRow(new string[] {
                        "",
                        "",
                        "",
                        ""});
            table2572.AddRow(new string[] {
                        "Pair of Earrings",
                        "",
                        "",
                        ""});
            table2572.AddRow(new string[] {
                        "Engagement Ring",
                        "Women\'s",
                        "",
                        ""});
            table2572.AddRow(new string[] {
                        "Pair of Earrings",
                        "",
                        "",
                        ""});
            table2572.AddRow(new string[] {
                        "",
                        "Women\'s",
                        "",
                        ""});
            table2572.AddRow(new string[] {
                        "",
                        "",
                        "",
                        ""});
            table2572.AddRow(new string[] {
                        "Rolex",
                        "Women\'s",
                        "",
                        ""});
            table2572.AddRow(new string[] {
                        "",
                        "",
                        "",
                        ""});
            table2572.AddRow(new string[] {
                        "",
                        "Women\'s",
                        "",
                        ""});
            table2572.AddRow(new string[] {
                        "",
                        "",
                        "",
                        ""});
            table2572.AddRow(new string[] {
                        "",
                        "",
                        "",
                        ""});
            table2572.AddRow(new string[] {
                        "Pair of Earrings",
                        "",
                        "",
                        ""});
            table2572.AddRow(new string[] {
                        "Engagement Ring",
                        "Women\'s",
                        "",
                        ""});
            table2572.AddRow(new string[] {
                        "Pair of Earrings",
                        "",
                        "",
                        ""});
            table2572.AddRow(new string[] {
                        "",
                        "Women\'s",
                        "",
                        ""});
            table2572.AddRow(new string[] {
                        "",
                        "",
                        "",
                        ""});
            table2572.AddRow(new string[] {
                        "Rolex",
                        "Women\'s",
                        "",
                        ""});
            table2572.AddRow(new string[] {
                        "",
                        "",
                        "",
                        ""});
            table2572.AddRow(new string[] {
                        "",
                        "Women\'s",
                        "",
                        ""});
            table2572.AddRow(new string[] {
                        "",
                        "",
                        "",
                        ""});
            table2572.AddRow(new string[] {
                        "",
                        "",
                        "",
                        ""});
            table2572.AddRow(new string[] {
                        "Pair of Earrings",
                        "",
                        "",
                        ""});
            table2572.AddRow(new string[] {
                        "Engagement Ring",
                        "Women\'s",
                        "",
                        ""});
            table2572.AddRow(new string[] {
                        "Pair of Earrings",
                        "",
                        "",
                        ""});
            table2572.AddRow(new string[] {
                        "",
                        "Women\'s",
                        "",
                        ""});
            table2572.AddRow(new string[] {
                        "",
                        "",
                        "",
                        ""});
            table2572.AddRow(new string[] {
                        "Rolex",
                        "Women\'s",
                        "",
                        ""});
            table2572.AddRow(new string[] {
                        "",
                        "",
                        "",
                        ""});
            table2572.AddRow(new string[] {
                        "",
                        "Women\'s",
                        "",
                        ""});
            table2572.AddRow(new string[] {
                        "",
                        "",
                        "",
                        ""});
            table2572.AddRow(new string[] {
                        "",
                        "",
                        "",
                        ""});
            table2572.AddRow(new string[] {
                        "Pair of Earrings",
                        "",
                        "",
                        ""});
            table2572.AddRow(new string[] {
                        "Engagement Ring",
                        "Women\'s",
                        "",
                        ""});
            table2572.AddRow(new string[] {
                        "Pair of Earrings",
                        "",
                        "",
                        ""});
            table2572.AddRow(new string[] {
                        "",
                        "Women\'s",
                        "",
                        ""});
            table2572.AddRow(new string[] {
                        "",
                        "",
                        "",
                        ""});
            table2572.AddRow(new string[] {
                        "Rolex",
                        "Women\'s",
                        "",
                        ""});
            table2572.AddRow(new string[] {
                        "",
                        "",
                        "",
                        ""});
            table2572.AddRow(new string[] {
                        "",
                        "Women\'s",
                        "",
                        ""});
            table2572.AddRow(new string[] {
                        "",
                        "",
                        "",
                        ""});
            table2572.AddRow(new string[] {
                        "",
                        "",
                        "",
                        ""});
            table2572.AddRow(new string[] {
                        "Pair of Earrings",
                        "",
                        "",
                        ""});
            table2572.AddRow(new string[] {
                        "Engagement Ring",
                        "Women\'s",
                        "",
                        ""});
            table2572.AddRow(new string[] {
                        "Pair of Earrings",
                        "",
                        "",
                        ""});
            table2572.AddRow(new string[] {
                        "",
                        "Women\'s",
                        "",
                        ""});
            table2572.AddRow(new string[] {
                        "",
                        "",
                        "",
                        ""});
            table2572.AddRow(new string[] {
                        "Rolex",
                        "Women\'s",
                        "",
                        ""});
            table2572.AddRow(new string[] {
                        "",
                        "",
                        "",
                        ""});
            table2572.AddRow(new string[] {
                        "",
                        "Women\'s",
                        "",
                        ""});
            table2572.AddRow(new string[] {
                        "",
                        "",
                        "",
                        ""});
            table2572.AddRow(new string[] {
                        "",
                        "",
                        "",
                        ""});
            table2572.AddRow(new string[] {
                        "Pair of Earrings",
                        "",
                        "",
                        ""});
            table2572.AddRow(new string[] {
                        "Engagement Ring",
                        "Women\'s",
                        "",
                        ""});
            table2572.AddRow(new string[] {
                        "Pair of Earrings",
                        "",
                        "",
                        ""});
            table2572.AddRow(new string[] {
                        "",
                        "Women\'s",
                        "",
                        ""});
            table2572.AddRow(new string[] {
                        "",
                        "",
                        "",
                        ""});
            table2572.AddRow(new string[] {
                        "Rolex",
                        "Women\'s",
                        "",
                        ""});
            table2572.AddRow(new string[] {
                        "",
                        "",
                        "",
                        ""});
            table2572.AddRow(new string[] {
                        "",
                        "Women\'s",
                        "",
                        ""});
            table2572.AddRow(new string[] {
                        "",
                        "",
                        "",
                        ""});
            table2572.AddRow(new string[] {
                        "",
                        "",
                        "",
                        ""});
            table2572.AddRow(new string[] {
                        "Pair of Earrings",
                        "",
                        "",
                        ""});
            table2572.AddRow(new string[] {
                        "Engagement Ring",
                        "Women\'s",
                        "",
                        ""});
            table2572.AddRow(new string[] {
                        "Pair of Earrings",
                        "",
                        "",
                        ""});
            table2572.AddRow(new string[] {
                        "",
                        "Women\'s",
                        "",
                        ""});
            table2572.AddRow(new string[] {
                        "",
                        "",
                        "",
                        ""});
            table2572.AddRow(new string[] {
                        "Rolex",
                        "Women\'s",
                        "",
                        ""});
            table2572.AddRow(new string[] {
                        "",
                        "",
                        "",
                        ""});
            table2572.AddRow(new string[] {
                        "",
                        "Women\'s",
                        "",
                        ""});
            table2572.AddRow(new string[] {
                        "",
                        "",
                        "",
                        ""});
#line 1059
testRunner.And("I Enter the jewelry information Jewelry Details page", ((string)(null)), table2572, "And ");
#line 1161
testRunner.And(string.Format("I select {0} in Jewelry Details page", effectiveDate), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1162
testRunner.And(string.Format("I Enetr {0} in Securityoption of  Jewelry Details page", alarmAndSecurity), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table2573 = new TechTalk.SpecFlow.Table(new string[] {
                        "Submitapplication",
                        "PaperlessDelivery"});
            table2573.AddRow(new string[] {
                        "NO",
                        "Yes"});
#line 1163
testRunner.And("I Review the application", ((string)(null)), table2573, "And ");
#line hidden
            TechTalk.SpecFlow.Table table2574 = new TechTalk.SpecFlow.Table(new string[] {
                        "cardType",
                        "Country",
                        "ConfirmationContentValidation"});
            table2574.AddRow(new string[] {
                        "VISA",
                        "USA",
                        "You have successfully completed your application, and your jewelry is now insured" +
                            "."});
#line 1166
testRunner.And(string.Format("I make payment using Card, set {0}  and Verify Contact JMIS Page {1}, {2}, {3}, C" +
                        "onfirmation page and policy number depending on Environment and <GW_PolicyStatus" +
                        ">", autoPay, phoneNumber, emailAddress, emailOrPhoneJMIS), ((string)(null)), table2574, "And ");
#line 1169
testRunner.And("I access the Guidewire PC on Desktop in IE", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1170
testRunner.And("I enter pluwmanager and pluwmanagerpwd on the PC9 Login page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1171
testRunner.And("I select Policies from the Search Tab menu of PC9", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1172
testRunner.And(string.Format("search for account with {0} and select from search results in PC9", accountNumber), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1173
testRunner.And(string.Format("I verify {0} , {1} , {2} , {3} , {4} , {5} , {6} , {7}, {8}  in Left Account Deta" +
                        "ils page for PC9", gWPrimaryInsured, gWAddress, phoneNumber, emailAddress, gWStatus, gWAddressType, gender, gWOccupation, gWDateofBirth), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1174
testRunner.And(string.Format("I verify {0} , {1} , {2} , {3} , {4} in Right Account Details page for PC9 for QN" +
                        "A Account", gWDistributionSource, contactPreference, gWApplicationTakenBy, gWPaperlessDelivery, producerCode), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1175
testRunner.And("I verfy    , In Force , REGISTRY in Policy Term  for PC9", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1176
testRunner.And("I logout of the PC9 application", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1177
testRunner.And("I Kill Web Driver", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("QNA_Reg17_STP_100_Items_US_LessThan50kTotal2: QNA")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "RegularQuoteAndApply_PC9")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("STP")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Rqna17")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Rqna")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "QNA")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ApplicationEnvironment", "QNA")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:TargetType", "desktop")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Capability", "")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:BrowserType", "Chrome")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:OperatingSystem", "")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:FirstName", "Account")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:LastName", "Duplicate")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Address", "48 Jewelers Park Dr")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Apartment", "")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:City", "Neenah")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:State", "Wisconsin")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:AddressZipCode", "54956")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:IsMailingAddress", "Yes")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:PhoneNumber", "9999999999")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:EmailAddress", "adzhoharidze@jminsure.com")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ContactPreference", "Email")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Gender", "FeMale")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:WearerType", "PrimaryApplicant")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:MinorTrafficViolation", "No")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:LossTheftDamageToJewelry", "No")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:PrivacyPolicy", "Yes")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:AlarmAndSecurity", "No")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:EmailOrPhoneJMIS", "Phone")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:EffectiveDate", "currentdate")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ProducerCode", "DIRD")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:GWPaperlessDelivery", "Yes")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:GWApplicationTakenBy", "")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:GWDistributionSource", "Web")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:GWPrimaryInsured", "REGISTRY")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:GWDateofBirth", "05/01/1977")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:GWOccupation", "")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:GWAddressType", "Home")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:GWStatus", "Active")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:GWAddress", "REGISTRY")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:AccountNumber", "REGISTRY")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:GW_UserName", "su")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:GW_Password", "gw")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:PolicyStatus", "Quoted")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Activities", "Approval Needed-Possible Duplicate Account")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:AutoPay", "No")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:PCActivities", "Submission with issues")]
        public virtual void QNA_Reg17_STP_100_Items_US_LessThan50KTotal2_QNA()
        {
#line 848
this.QNA_Reg17_STP_100_Items_US_LessThan50KTotal2("QNA", "desktop", "", "Chrome", "", "Account", "Duplicate", "48 Jewelers Park Dr", "", "Neenah", "Wisconsin", "54956", "Yes", "9999999999", "adzhoharidze@jminsure.com", "Email", "FeMale", "PrimaryApplicant", "No", "No", "Yes", "No", "Phone", "currentdate", "DIRD", "Yes", "", "Web", "REGISTRY", "05/01/1977", "", "Home", "Active", "REGISTRY", "REGISTRY", "su", "gw", "Quoted", "Approval Needed-Possible Duplicate Account", "No", "Submission with issues", ((string[])(null)));
#line hidden
        }
        
        public virtual void QNA_Reg88_CAN_STP_MinimumPremium_Prod(
                    string applicationEnvironment, 
                    string targetType, 
                    string capability, 
                    string browserType, 
                    string operatingSystem, 
                    string firstName, 
                    string lastName, 
                    string address, 
                    string apartment, 
                    string city, 
                    string state, 
                    string addressZipCode, 
                    string isMailingAddress, 
                    string phoneNumber, 
                    string emailAddress, 
                    string contactPreference, 
                    string gender, 
                    string minorTrafficViolation, 
                    string lossTheftDamageToJewelry, 
                    string privacyPolicy, 
                    string alarmAndSecurity, 
                    string effectiveDate, 
                    string producerCode, 
                    string gWPaperlessDelivery, 
                    string gWApplicationTakenBy, 
                    string gWDistributionSource, 
                    string gWPrimaryInsured, 
                    string gWDateofBirth, 
                    string gWOccupation, 
                    string gWAddressType, 
                    string gWStatus, 
                    string gWAddress, 
                    string accountNumber, 
                    string gW_UserName, 
                    string gW_Password, 
                    string gWPaymentPlan, 
                    string gWExpireDate, 
                    string gWPayment_Instrument, 
                    string autoPay, 
                    string gW_PolicyStatus, 
                    string creditConsent, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "Rqna88"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("QNA_Reg88_CAN_STP_MinimumPremium_Prod", @__tags);
#line 1186
 this.ScenarioSetup(scenarioInfo);
#line 1187
                testRunner.Given(string.Format("I access the QuoteAndApp app in {0} , {1} , {2} , {3} and {4}", applicationEnvironment, targetType, capability, browserType, operatingSystem), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table2575 = new TechTalk.SpecFlow.Table(new string[] {
                        "ZipCode",
                        "JewelryType",
                        "Value"});
            table2575.AddRow(new string[] {
                        "R3G 3P8",
                        "Bracelet",
                        "49"});
#line 1188
                testRunner.When("I Enter the Quote Page Details", ((string)(null)), table2575, "When ");
#line 1191
    testRunner.And("I click on NewExisting Customer Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1192
                testRunner.And(string.Format("I Enter the Contact Information {0} , {1} , {2} , {3} , {4} , {5} , {6} , {7} , {" +
                        "8} , {9} , {10} , {11} , {12}", firstName, lastName, address, apartment, city, state, addressZipCode, isMailingAddress, phoneNumber, emailAddress, contactPreference, gWDateofBirth, gender), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table2576 = new TechTalk.SpecFlow.Table(new string[] {
                        "WearerType",
                        "FirstName",
                        "LastName",
                        "AddressAsPriApp",
                        "Address",
                        "AptSuite",
                        "City",
                        "StateProv",
                        "ZipCode",
                        "PhoneNumber",
                        "Email",
                        "DOB",
                        "Relationship",
                        "Gender"});
            table2576.AddRow(new string[] {
                        "Wearer",
                        "WearerFName1",
                        "WearerLName",
                        "No",
                        "127 Church Street",
                        "21",
                        "Toronto",
                        "Ontario",
                        "M5C 2G5",
                        "",
                        "",
                        "07/07/1979",
                        "Child",
                        "Female"});
#line 1193
                testRunner.And("I Enter the Applicant or Wearers details with respect to wearing items", ((string)(null)), table2576, "And ");
#line 1196
                testRunner.And(string.Format("I Enter qualification questions {0} , {1} on Applicant and Wearer page", minorTrafficViolation, lossTheftDamageToJewelry), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1197
                testRunner.And("I Check the <TermsAndConditions> on Applicant and Wearer page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table2577 = new TechTalk.SpecFlow.Table(new string[] {
                        "JewelrySubType",
                        "Gender",
                        "DateOFPurchase",
                        "Appraisal"});
            table2577.AddRow(new string[] {
                        "",
                        "Men\'s",
                        "",
                        ""});
#line 1198
                testRunner.And("I Enter the jewelry information Jewelry Details page", ((string)(null)), table2577, "And ");
#line 1201
                testRunner.And(string.Format("I select {0} in Jewelry Details page", effectiveDate), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1202
                testRunner.And(string.Format("I Enetr {0} in Securityoption of  Jewelry Details page", alarmAndSecurity), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1203
                testRunner.And(string.Format("I set Credit Consent {0} for CA", creditConsent), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table2578 = new TechTalk.SpecFlow.Table(new string[] {
                        "Submitapplication",
                        "PaperlessDelivery"});
            table2578.AddRow(new string[] {
                        "NO",
                        "Yes"});
#line 1204
       testRunner.And("I Review the application", ((string)(null)), table2578, "And ");
#line hidden
            TechTalk.SpecFlow.Table table2579 = new TechTalk.SpecFlow.Table(new string[] {
                        "AchType",
                        "Country",
                        "ConfirmationContentValidation"});
            table2579.AddRow(new string[] {
                        "Saving",
                        "CA",
                        "You have successfully completed your application, and your jewelry is now insured" +
                            "."});
#line 1207
      testRunner.And(string.Format("I make payment using E-check, Set {0} and Later I verify confirmation message and" +
                        " policy number depending on Environment and {1}", autoPay, gW_PolicyStatus), ((string)(null)), table2579, "And ");
#line 1210
    testRunner.And("I Kill Web Driver", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("QNA_Reg88_CAN_STP_MinimumPremium_Prod: QNA")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "RegularQuoteAndApply_PC9")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Rqna88")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "QNA")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ApplicationEnvironment", "QNA")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:TargetType", "desktop")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Capability", "")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:BrowserType", "Chrome")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:OperatingSystem", "")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:FirstName", "Golden6")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:LastName", "NonSTP")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Address", "1001 Empress St")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Apartment", "")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:City", "Winnipeg")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:State", "Manitoba")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:AddressZipCode", "R3G 3P8")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:IsMailingAddress", "Yes")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:PhoneNumber", "9205352871")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:EmailAddress", "adzhoharidze@jminsure.com")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ContactPreference", "Email")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Gender", "Male")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:MinorTrafficViolation", "No")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:LossTheftDamageToJewelry", "No")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:PrivacyPolicy", "Yes")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:AlarmAndSecurity", "Monitored Alarm System")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:EffectiveDate", "currentdate")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ProducerCode", "DIRD")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:GWPaperlessDelivery", "Yes")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:GWApplicationTakenBy", "")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:GWDistributionSource", "Web")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:GWPrimaryInsured", "REGISTRY")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:GWDateofBirth", "07/01/1966")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:GWOccupation", "")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:GWAddressType", "Home")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:GWStatus", "Active")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:GWAddress", "REGISTRY")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:AccountNumber", "REGISTRY")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:GW_UserName", "su")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:GW_Password", "gw")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:GWPaymentPlan", "Annual Pay")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:GWExpireDate", "REGISTRY")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:GWPayment_Instrument", "Savings ****3332")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:AutoPay", "Yes")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:GW_PolicyStatus", "In Force")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:creditConsent", "Yes")]
        public virtual void QNA_Reg88_CAN_STP_MinimumPremium_Prod_QNA()
        {
#line 1186
 this.QNA_Reg88_CAN_STP_MinimumPremium_Prod("QNA", "desktop", "", "Chrome", "", "Golden6", "NonSTP", "1001 Empress St", "", "Winnipeg", "Manitoba", "R3G 3P8", "Yes", "9205352871", "adzhoharidze@jminsure.com", "Email", "Male", "No", "No", "Yes", "Monitored Alarm System", "currentdate", "DIRD", "Yes", "", "Web", "REGISTRY", "07/01/1966", "", "Home", "Active", "REGISTRY", "REGISTRY", "su", "gw", "Annual Pay", "REGISTRY", "Savings ****3332", "Yes", "In Force", "Yes", ((string[])(null)));
#line hidden
        }
    }
}
#pragma warning restore
#endregion
