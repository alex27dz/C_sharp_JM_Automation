// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:2.2.0.0
//      SpecFlow Generator Version:2.2.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace GuidewireTestSuites.Features
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.2.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [Microsoft.VisualStudio.TestTools.UnitTesting.TestClassAttribute()]
    public partial class GW_PC9_RegressionSuite_Day1Feature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "GW_PC9_RegressionSuite_Day1.feature"
#line hidden
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassInitializeAttribute()]
        public static void FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext testContext)
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner(null, 0);
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "GW_PC9_RegressionSuite_Day1", null, ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassCleanupAttribute()]
        public static void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestInitializeAttribute()]
        public virtual void TestInitialize()
        {
            if (((testRunner.FeatureContext != null) 
                        && (testRunner.FeatureContext.FeatureInfo.Title != "GW_PC9_RegressionSuite_Day1")))
            {
                global::GuidewireTestSuites.Features.GW_PC9_RegressionSuite_Day1Feature.FeatureSetup(null);
            }
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCleanupAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        public virtual void JBP_TS01_NB_Single_1Pay_ON_CAN(string application, string target, string browser, string userName, string password, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "regression"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("JBP_TS01_NB_Single_1Pay_ON_CAN", @__tags);
#line 5
this.ScenarioSetup(scenarioInfo);
#line 6
 testRunner.Given(string.Format("I access the Guidewire {0} on {1} in {2}", application, target, browser), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 7
 testRunner.And(string.Format("I enter {0} and {1} on the Login page in PC9", userName, password), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 8
 testRunner.And("I get the system date in PC9", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                        "ActionType"});
            table1.AddRow(new string[] {
                        "New Account"});
#line 9
 testRunner.When("I select below Action type from Actions menu", ((string)(null)), table1, "When ");
#line hidden
            TechTalk.SpecFlow.Table table2 = new TechTalk.SpecFlow.Table(new string[] {
                        "CompanyName"});
            table2.AddRow(new string[] {
                        "Selenium CL Smoke"});
#line 12
 testRunner.And("I search for commercial account with below company name in PC9", ((string)(null)), table2, "And ");
#line hidden
            TechTalk.SpecFlow.Table table3 = new TechTalk.SpecFlow.Table(new string[] {
                        "AddressLine1",
                        "City",
                        "State",
                        "ZipCode",
                        "Country",
                        "AddressType",
                        "OrgType",
                        "IsJeweler",
                        "ProducerCode",
                        "PrimaryEmail"});
            table3.AddRow(new string[] {
                        "441 Maple Ave",
                        "Burlington",
                        "Ontario",
                        "L7S 2J8",
                        "Canada",
                        "Other",
                        "LLC",
                        "Yes",
                        "DIRD",
                        "itqaautomation@jminsure.com"});
#line 15
 testRunner.And("I enter following mandatory details on create account page for commercial lines f" +
                    "or ST in PC9", ((string)(null)), table3, "And ");
#line hidden
            TechTalk.SpecFlow.Table table4 = new TechTalk.SpecFlow.Table(new string[] {
                        "ActionType"});
            table4.AddRow(new string[] {
                        "New Submission"});
#line 18
 testRunner.And("I select below Action type from Actions menu", ((string)(null)), table4, "And ");
#line hidden
            TechTalk.SpecFlow.Table table5 = new TechTalk.SpecFlow.Table(new string[] {
                        "PolicyEffDate",
                        "Product"});
            table5.AddRow(new string[] {
                        "SYSTEMDATE+0",
                        "Commercial Lines"});
#line 21
 testRunner.And("I enter below details on CL New submission page", ((string)(null)), table5, "And ");
#line hidden
            TechTalk.SpecFlow.Table table6 = new TechTalk.SpecFlow.Table(new string[] {
                        "Offering"});
            table6.AddRow(new string[] {
                        "Jewelers Block Pak"});
#line 24
 testRunner.And("I select below offering on the Offerings Page in PC9", ((string)(null)), table6, "And ");
#line 27
 testRunner.And("I click next on line selection page in PC9", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 28
 testRunner.And("I enter no for all questions on qualification page in PC9", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 29
 testRunner.And("I enter the policy details on the commercial lines policy information page for ST" +
                    " in PC9", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 30
 testRunner.And("I enter Inland marine details on the Inland Marine line page in PC9", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 31
 testRunner.And("I select the 1 location from existing locations in PC9", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table7 = new TechTalk.SpecFlow.Table(new string[] {
                        "SegmentationCode",
                        "GenBusinessRetail",
                        "FullTimeEmp",
                        "PartTimeEmp",
                        "PublicProtection",
                        "LocationType",
                        "ConstructionType",
                        "TotalBuildingArea",
                        "AreaOccupied",
                        "PercentSplinkered",
                        "SharedPremises",
                        "SharedWith",
                        "BurglarAlarm",
                        "TotalLocationInSafe",
                        "BankVault"});
            table7.AddRow(new string[] {
                        "100",
                        "100",
                        "20",
                        "10",
                        "2",
                        "Strip mall",
                        "Frame",
                        "10000",
                        "9000",
                        "100%",
                        "No",
                        "Testing",
                        "No",
                        "50",
                        "30"});
#line 32
 testRunner.And("I enter below ILM location details in PC9", ((string)(null)), table7, "And ");
#line hidden
            TechTalk.SpecFlow.Table table8 = new TechTalk.SpecFlow.Table(new string[] {
                        "Loc",
                        "RecentInventry",
                        "TakenOn",
                        "MaxStockValue",
                        "AvgAmtCustProp",
                        "AvgAmtMemo",
                        "LooseDiamonds",
                        "StockAOPLimit"});
            table8.AddRow(new string[] {
                        "1",
                        "100,000",
                        "12/12/2016",
                        "100,000",
                        "10,000",
                        "10,000",
                        "100",
                        "200,000"});
#line 35
 testRunner.And("I Enter Below Jewelry Stock Information in PC9", ((string)(null)), table8, "And ");
#line 38
 testRunner.And("I Click Next on ILM Location Page on PC9", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 39
 testRunner.And("I Click Next on Modifiers Page on PC9", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 40
 testRunner.And("I Click Next on Line Review Page for ST on PC9", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 41
 testRunner.And("I Enter Platinum level on Business Owners Line Page in PC9", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 42
 testRunner.And("I Click Next on Business Owners Lines Page in PC9", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("JBP_TS01_NB_Single_1Pay_ON_CAN: PC")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "GW_PC9_RegressionSuite_Day1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("regression")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "PC")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Application", "PC")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Target", "Desktop")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Browser", "IE")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:UserName", "su")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Password", "gw")]
        public virtual void JBP_TS01_NB_Single_1Pay_ON_CAN_PC()
        {
#line 5
this.JBP_TS01_NB_Single_1Pay_ON_CAN("PC", "Desktop", "IE", "su", "gw", ((string[])(null)));
#line hidden
        }
    }
}
#pragma warning restore
#endregion

