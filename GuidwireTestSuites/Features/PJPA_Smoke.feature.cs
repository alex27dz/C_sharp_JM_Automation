// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:2.3.0.0
//      SpecFlow Generator Version:2.3.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace GuidewireTestSuites.Features
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.3.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [Microsoft.VisualStudio.TestTools.UnitTesting.TestClassAttribute()]
    public partial class PJPASmokeFeature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
        private Microsoft.VisualStudio.TestTools.UnitTesting.TestContext _testContext;
        
#line 1 "PJPA_Smoke.feature"
#line hidden
        
        public virtual Microsoft.VisualStudio.TestTools.UnitTesting.TestContext TestContext
        {
            get
            {
                return this._testContext;
            }
            set
            {
                this._testContext = value;
            }
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassInitializeAttribute()]
        public static void FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext testContext)
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner(null, 0);
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "PJPASmoke", null, ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassCleanupAttribute()]
        public static void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestInitializeAttribute()]
        public virtual void TestInitialize()
        {
            if (((testRunner.FeatureContext != null) 
                        && (testRunner.FeatureContext.FeatureInfo.Title != "PJPASmoke")))
            {
                global::GuidewireTestSuites.Features.PJPASmokeFeature.FeatureSetup(null);
            }
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCleanupAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
            testRunner.ScenarioContext.ScenarioContainer.RegisterInstanceAs<Microsoft.VisualStudio.TestTools.UnitTesting.TestContext>(TestContext);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        public virtual void TS01_PJPA_CreatePLPolicy(
                    string application, 
                    string target, 
                    string browser, 
                    string userName, 
                    string password, 
                    string firstName, 
                    string lastName, 
                    string policyEffDate, 
                    string product, 
                    string professionalAthelete, 
                    string previousLoss, 
                    string convictedOfCrime, 
                    string locatedWith, 
                    string @class, 
                    string valueOfItem, 
                    string deductible, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "pjpasmoketest",
                    "createPLpolicysmoke"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("TS01_PJPA_CreatePLPolicy", @__tags);
#line 5
this.ScenarioSetup(scenarioInfo);
#line 6
 testRunner.Given(string.Format("I access the Guidewire {0} on {1} in {2}", application, target, browser), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 7
 testRunner.And(string.Format("I enter {0} and {1} on the Login page in PC9", userName, password), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 8
 testRunner.And("I get the system date in PC9", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table1222 = new TechTalk.SpecFlow.Table(new string[] {
                        "Status"});
            table1222.AddRow(new string[] {
                        "Started"});
#line 9
 testRunner.And("I manage Transport with below status", ((string)(null)), table1222, "And ");
#line hidden
            TechTalk.SpecFlow.Table table1223 = new TechTalk.SpecFlow.Table(new string[] {
                        "ActionType"});
            table1223.AddRow(new string[] {
                        "New Account"});
#line 12
 testRunner.When("I select below Action type from Actions menu", ((string)(null)), table1223, "When ");
#line 15
 testRunner.And(string.Format("I search for personal account in PC9 using {0} and {1}", firstName, lastName), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table1224 = new TechTalk.SpecFlow.Table(new string[] {
                        "AddressLine1",
                        "City",
                        "State",
                        "ZipCode",
                        "Country",
                        "AddressType",
                        "OrgType",
                        "IsJeweler",
                        "ProducerCode",
                        "PrimaryEmail"});
            table1224.AddRow(new string[] {
                        "1981 Kings Rd",
                        "Jacksonville",
                        "Florida",
                        "32209",
                        "United States of America",
                        "Mailing",
                        "LLC",
                        "Yes",
                        "DIRD",
                        "itqaautomation@jminsure.com"});
#line 16
 testRunner.And("I enter following mandatory details on create account page for Personal lines in " +
                    "PC9", ((string)(null)), table1224, "And ");
#line hidden
            TechTalk.SpecFlow.Table table1225 = new TechTalk.SpecFlow.Table(new string[] {
                        "Status"});
            table1225.AddRow(new string[] {
                        "Started"});
#line 19
 testRunner.And("I manage Transport with below status", ((string)(null)), table1225, "And ");
#line hidden
            TechTalk.SpecFlow.Table table1226 = new TechTalk.SpecFlow.Table(new string[] {
                        "ActionType"});
            table1226.AddRow(new string[] {
                        "New Account"});
#line 22
 testRunner.And("I select below Action type from Actions menu", ((string)(null)), table1226, "And ");
#line 25
 testRunner.And(string.Format("I search for personal account in PC9 using {0} and {1}", firstName, lastName), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table1227 = new TechTalk.SpecFlow.Table(new string[] {
                        "AddressLine1",
                        "City",
                        "State",
                        "ZipCode",
                        "Country",
                        "AddressType",
                        "OrgType",
                        "IsJeweler",
                        "ProducerCode",
                        "PrimaryEmail"});
            table1227.AddRow(new string[] {
                        "1981 Kings Rd",
                        "Jacksonville",
                        "Florida",
                        "32209",
                        "United States of America",
                        "Mailing",
                        "LLC",
                        "Yes",
                        "DIRD",
                        "itqaautomation@jminsure.com"});
#line 26
 testRunner.And("I enter following mandatory details on create account page for Personal lines in " +
                    "PC9", ((string)(null)), table1227, "And ");
#line 29
 testRunner.And("I select New Submission from the Actions menu in PC9", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 30
 testRunner.And(string.Format("I enter {0} and {1} on the New Submission page in PC9", policyEffDate, product), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 31
 testRunner.And(string.Format("I enter {0} , {1} , {2} for questions on qualification page in PC9", professionalAthelete, previousLoss, convictedOfCrime), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table1228 = new TechTalk.SpecFlow.Table(new string[] {
                        "AddType",
                        "CompanyName",
                        "IsJeweler",
                        "FirstName",
                        "LastName",
                        "AddrLine1",
                        "City",
                        "State",
                        "ZipCode"});
            table1228.AddRow(new string[] {
                        "NewPerson",
                        "SmokeTest",
                        "Yes",
                        "AIFirstName",
                        "AILastName",
                        "955 Mutual Way",
                        "Appleton",
                        "Wisconsin",
                        "54913"});
#line 32
 testRunner.And("I add below Additional Insured details with unique name in PC9", ((string)(null)), table1228, "And ");
#line 35
 testRunner.And("I enter the details on the policy information page in PC9", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 36
 testRunner.And(string.Format("I Add Jewelry item in PC9 with {0} , {1} , {2} , {3}", locatedWith, @class, valueOfItem, deductible), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 38
 testRunner.And("I click Quote on Risk Analysis Page for ST in PC9", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 39
 testRunner.And("I Click Next on Quote Page in PC9", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 40
 testRunner.And("I check forms listed on Forms Page and click next in PC9", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 41
 testRunner.Then("I Issue the PL Smoke test policy in PC9", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 42
 testRunner.And("I Logout of the Policy Center application", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("TS01_PJPA_CreatePLPolicy: PC")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "PJPASmoke")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("pjpasmoketest")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("createPLpolicysmoke")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "PC")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Application", "PC")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Target", "Desktop")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Browser", "IE")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:UserName", "pluwmanager")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Password", "pluwmanagerpwd")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:FirstName", "Personal")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:LastName", "Smoke")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:PolicyEffDate", "SYSTEMDATE+0")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Product", "")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ProfessionalAthelete", "No")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:PreviousLoss", "No")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ConvictedOfCrime", "No")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:LocatedWith", "REGISTRY")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Class", "Brooch")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ValueOfItem", "1000")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Deductible", "100")]
        public virtual void TS01_PJPA_CreatePLPolicy_PC()
        {
#line 5
this.TS01_PJPA_CreatePLPolicy("PC", "Desktop", "IE", "pluwmanager", "pluwmanagerpwd", "Personal", "Smoke", "SYSTEMDATE+0", "", "No", "No", "No", "REGISTRY", "Brooch", "1000", "100", ((string[])(null)));
#line hidden
        }
        
        public virtual void TS02_PJPA_BC_ACHPaymentAndReversal(string application, string target, string browser, string userName, string password, string paymentAmount, string achType, string aCHPaymentDate, string accountNumber, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "pjpasmoketest",
                    "achpaymentsmoke"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("TS02_PJPA_BC_ACH Payment and Reversal", @__tags);
#line 50
this.ScenarioSetup(scenarioInfo);
#line 51
 testRunner.Given(string.Format("I access the Guidewire {0} on {1} in {2}", application, target, browser), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 52
 testRunner.And(string.Format("I enter {0} and {1} on the BC Login page", userName, password), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 53
 testRunner.When("I select Search from the Tab menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 54
 testRunner.And(string.Format("search for account with {0} and select from search results", accountNumber), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 55
 testRunner.And("I fetch country name and total amount due", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 56
 testRunner.And("I select new payment:Payment Request from actions menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 57
 testRunner.And(string.Format("I pay premium of {0} using E-check with {1} on {2}", paymentAmount, achType, aCHPaymentDate), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 58
 testRunner.And("I select payment wallet from left navigation menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 59
 testRunner.And("I remove the stored payment methods for smoketest", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 60
 testRunner.And("I select Payments:Payment History from left navigation menu for smoketest", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 61
 testRunner.Then("I verify <ACH> payment methods for smoketest", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 62
 testRunner.And("I select Payments:Payments from left navigation menu for smoketest", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 63
 testRunner.And("I perform payment reversal", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 64
 testRunner.And("I Logout of the Billing Center application", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 65
 testRunner.And("I Kill Web Driver", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("TS02_PJPA_BC_ACH Payment and Reversal: BC")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "PJPASmoke")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("pjpasmoketest")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("achpaymentsmoke")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "BC")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Application", "BC")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Target", "Desktop")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Browser", "Chrome")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:UserName", "bcmanager")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Password", "bcmanagerpwd")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:PaymentAmount", "TotalDue")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:AchType", "Checking")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ACHPaymentDate", "TESTINGSYSTEMCLOCK")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:AccountNumber", "REGISTRY")]
        public virtual void TS02_PJPA_BC_ACHPaymentAndReversal_BC()
        {
#line 50
this.TS02_PJPA_BC_ACHPaymentAndReversal("BC", "Desktop", "Chrome", "bcmanager", "bcmanagerpwd", "TotalDue", "Checking", "TESTINGSYSTEMCLOCK", "REGISTRY", ((string[])(null)));
#line hidden
        }
        
        public virtual void TS03_PJPA_BC_CCPaymentAndReversal(string application, string target, string browser, string userName, string password, string paymentAmount, string cCType, string cCPaymentDate, string accountNumber, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "pjpasmoketest",
                    "ccpaymentsmoke"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("TS03_PJPA_BC_CC Payment and Reversal", @__tags);
#line 73
this.ScenarioSetup(scenarioInfo);
#line 74
 testRunner.Given(string.Format("I access the Guidewire {0} on {1} in {2}", application, target, browser), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 75
 testRunner.And(string.Format("I enter {0} and {1} on the BC Login page", userName, password), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 76
 testRunner.When("I select Search from the Tab menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 77
 testRunner.And(string.Format("search for account with {0} and select from search results", accountNumber), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 78
 testRunner.And("I fetch country name and total amount due", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 79
 testRunner.And("I select new payment:Payment Request from actions menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 80
 testRunner.And(string.Format("I pay premium of {0} using credit card with {1} on {2}", paymentAmount, cCType, cCPaymentDate), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 81
 testRunner.And("I select Payments:Payment History from left navigation menu for smoketest", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 82
 testRunner.Then(string.Format("I verify {0} payment methods for smoketest", cCType), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 83
 testRunner.And("I select Payments:Payments from left navigation menu for smoketest", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 84
 testRunner.And("I Logout of the Billing Center application", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 85
 testRunner.And("I Kill Web Driver", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("TS03_PJPA_BC_CC Payment and Reversal: BC")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "PJPASmoke")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("pjpasmoketest")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("ccpaymentsmoke")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "BC")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Application", "BC")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Target", "Desktop")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Browser", "Chrome")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:UserName", "bcmanager")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Password", "bcmanagerpwd")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:PaymentAmount", "TotalDue")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:CCType", "VISA")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:CCPaymentDate", "TESTINGSYSTEMCLOCK+1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:AccountNumber", "REGISTRY")]
        public virtual void TS03_PJPA_BC_CCPaymentAndReversal_BC()
        {
#line 73
this.TS03_PJPA_BC_CCPaymentAndReversal("BC", "Desktop", "Chrome", "bcmanager", "bcmanagerpwd", "TotalDue", "VISA", "TESTINGSYSTEMCLOCK+1", "REGISTRY", ((string[])(null)));
#line hidden
        }
        
        public virtual void TS04_PJPA_CM_CreateContact(string application, string target, string browser, string userName, string password, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "pjpasmoketest",
                    "CreateContactsmoke"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("TS04_PJPA_CM_CreateContact", @__tags);
#line 93
this.ScenarioSetup(scenarioInfo);
#line 94
 testRunner.Given(string.Format("I access the Guidewire {0} on {1} in {2}", application, target, browser), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 95
 testRunner.And(string.Format("I enter {0} and {1} on the CM Login page", userName, password), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 96
 testRunner.And("I click search on Contacts Tab", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table1229 = new TechTalk.SpecFlow.Table(new string[] {
                        "ContactType",
                        "FirstName",
                        "LastName",
                        "CompanyName"});
            table1229.AddRow(new string[] {
                        "Person",
                        "REGISTRY",
                        "REGISTRY",
                        ""});
#line 97
 testRunner.And("I verify below search details on search page", ((string)(null)), table1229, "And ");
#line 100
 testRunner.And("I Logout of the Claim Center application", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("TS04_PJPA_CM_CreateContact: CM")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "PJPASmoke")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("pjpasmoketest")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("CreateContactsmoke")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "CM")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Application", "CM")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Target", "Desktop")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Browser", "IE")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:UserName", "cmmanager")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Password", "cmmanagerpwd")]
        public virtual void TS04_PJPA_CM_CreateContact_CM()
        {
#line 93
this.TS04_PJPA_CM_CreateContact("CM", "Desktop", "IE", "cmmanager", "cmmanagerpwd", ((string[])(null)));
#line hidden
        }
        
        public virtual void TS05_PJPA_JPA_Smoke(
                    string application, 
                    string accountNumber, 
                    string applicationEnvironment, 
                    string target, 
                    string browser, 
                    string userName, 
                    string password, 
                    string firstName, 
                    string lastName, 
                    string dateOfBirth, 
                    string maritalStatus, 
                    string primaryPhone, 
                    string homePhone, 
                    string workPhone, 
                    string mobilePhone, 
                    string otherPhone, 
                    string faxPhone, 
                    string primaryEmail, 
                    string secondaryEmail, 
                    string gender, 
                    string occupation, 
                    string investigations, 
                    string careOf, 
                    string addressLine1, 
                    string addressLine2, 
                    string city, 
                    string state, 
                    string zipCode, 
                    string county, 
                    string country, 
                    string addressType, 
                    string description, 
                    string producerOrganization, 
                    string producerCode, 
                    string sSN, 
                    string isAccountAJeweler, 
                    string distributionSource, 
                    string preferredMethodOfCommunication, 
                    string paperlessDelivery, 
                    string okToSurvey, 
                    string markettingMaterials, 
                    string recieveConfirmationEmails, 
                    string jewelerID, 
                    string policyEffDate, 
                    string product, 
                    string professionalAthelete, 
                    string previousLoss, 
                    string convictedOfCrime, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "pjpasmoketest",
                    "jpasmoke"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("TS05_PJPA_JPA_Smoke", @__tags);
#line 107
this.ScenarioSetup(scenarioInfo);
#line 108
 testRunner.Given(string.Format("I access the Guidewire {0} on {1} in {2}", application, target, browser), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 109
 testRunner.And(string.Format("I enter {0} and {1} on the Login page in PC9", userName, password), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 110
 testRunner.And("I get the system date in PC9", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table1230 = new TechTalk.SpecFlow.Table(new string[] {
                        "Status"});
            table1230.AddRow(new string[] {
                        "Started"});
#line 111
 testRunner.And("I manage Transport with below status", ((string)(null)), table1230, "And ");
#line hidden
            TechTalk.SpecFlow.Table table1231 = new TechTalk.SpecFlow.Table(new string[] {
                        "ActionType"});
            table1231.AddRow(new string[] {
                        "New Account"});
#line 114
 testRunner.When("I select below Action type from Actions menu", ((string)(null)), table1231, "When ");
#line 117
 testRunner.And(string.Format("I search for personal account in PC9 using {0} and {1}", firstName, lastName), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 118
 testRunner.And(string.Format("I enter following details in PC9 on create account page {0} , {1} , {2} , {3} , {" +
                        "4} , {5} , {6} , {7} , {8} , {9} , {10} , {11} , {12}", dateOfBirth, maritalStatus, primaryPhone, homePhone, workPhone, mobilePhone, otherPhone, faxPhone, primaryEmail, secondaryEmail, gender, occupation, investigations), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 119
 testRunner.And(string.Format("I enter Address details in PC9 on the create account page {0} , {1} , {2} , {3} ," +
                        " {4} , {5} , {6} , {7} , {8} , {9}, {10}", careOf, addressLine1, addressLine2, city, state, zipCode, county, country, addressType, description, producerCode), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 120
 testRunner.And(string.Format("I enter official id details  in PC9 on the create account page {0} , {1} , {2} , " +
                        "{3} , {4} , {5} , {6} , {7} , {8}", sSN, isAccountAJeweler, distributionSource, preferredMethodOfCommunication, paperlessDelivery, okToSurvey, markettingMaterials, recieveConfirmationEmails, jewelerID), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 121
 testRunner.And("I select New Submission from the Actions menu in PC9", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 122
 testRunner.And(string.Format("I enter {0} and {1} on the New Submission page in PC9", policyEffDate, product), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table1232 = new TechTalk.SpecFlow.Table(new string[] {
                        "Term",
                        "PolicyEffDate",
                        "ProducerCode"});
            table1232.AddRow(new string[] {
                        "Other",
                        "",
                        ""});
#line 123
 testRunner.And("I enter below details on the policy information page in PC9", ((string)(null)), table1232, "And ");
#line hidden
            TechTalk.SpecFlow.Table table1233 = new TechTalk.SpecFlow.Table(new string[] {
                        "AlarmType"});
            table1233.AddRow(new string[] {
                        "Central Station"});
#line 126
 testRunner.And("I update Alarm type  on the policy location page in PC9", ((string)(null)), table1233, "And ");
#line hidden
            TechTalk.SpecFlow.Table table1234 = new TechTalk.SpecFlow.Table(new string[] {
                        "IsAnchred",
                        "Weight"});
            table1234.AddRow(new string[] {
                        "yes",
                        "0-100 lbs"});
#line 129
 testRunner.And("I update Safe details on the policy location page in PC9", ((string)(null)), table1234, "And ");
#line 132
 testRunner.And("I click next on the policy location page in PC9", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table1235 = new TechTalk.SpecFlow.Table(new string[] {
                        "deniedcoverage",
                        "reason"});
            table1235.AddRow(new string[] {
                        "No",
                        ""});
#line 133
 testRunner.And(string.Format("I enter {0} and denied coverage details on the policy contact page in PC9", dateOfBirth), ((string)(null)), table1235, "And ");
#line 136
 testRunner.And("I click next on the  policy contact page in PC9", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table1236 = new TechTalk.SpecFlow.Table(new string[] {
                        "Unschedulelimit",
                        "UnscheduleDeductible"});
            table1236.AddRow(new string[] {
                        "5000",
                        "100"});
#line 137
 testRunner.And("I Update Unschedule details on personal articles page in PC9", ((string)(null)), table1236, "And ");
#line hidden
            TechTalk.SpecFlow.Table table1237 = new TechTalk.SpecFlow.Table(new string[] {
                        "LocatedWith",
                        "Article",
                        "ArticleSubType",
                        "GenderType",
                        "WearableTech",
                        "Brand",
                        "Style",
                        "ArticleValue",
                        "Deductible",
                        "FullDescriptionFlag",
                        "Description",
                        "AppraisalRequested",
                        "AppraisalReceived",
                        "AppraisalDate",
                        "Retailer",
                        "ValuationType",
                        "Article Stored",
                        "Safe Details",
                        "ValuationType",
                        "Damage",
                        "CarePlan",
                        "CarePLanID",
                        "HowWasArticleAquired",
                        "ArticleAquiredYear",
                        "ArticleAquiredInsurance",
                        "ArticleStored",
                        "CarePlanExpirDate",
                        "AffinityGroup",
                        "Damagetype",
                        "Articleinsuredbyother"});
            table1237.AddRow(new string[] {
                        "self",
                        "Ring",
                        "Engagement",
                        "Gents",
                        "Yes",
                        "",
                        "",
                        "2499",
                        "100",
                        "NO",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "No",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""});
#line 140
 testRunner.And("I Enter below Multi Article details on personal articles page in PC9", ((string)(null)), table1237, "And ");
#line 143
 testRunner.And("I Click next on personal articles page in PC9", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table1238 = new TechTalk.SpecFlow.Table(new string[] {
                        "PossessionofItem",
                        "FaudWarningConsent",
                        "ConsumerReportConsent"});
            table1238.AddRow(new string[] {
                        "No",
                        "Yes",
                        "Yes"});
#line 144
 testRunner.And("I select Additional Details in Additional Details in PC9", ((string)(null)), table1238, "And ");
#line 148
 testRunner.And("I click Quote on Risk Analysis Page for ST in PC9", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 149
 testRunner.And("I Click Next on Quote Page in PC9", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 150
 testRunner.And("I check forms listed on Forms Page and click next in PC9", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 151
 testRunner.And("I Issue the JPA Smoke test policy in PC9", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 152
 testRunner.And("I Logout of the Policy Center application", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 153
 testRunner.And("I Kill Web Driver", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 156
 testRunner.Given(string.Format("I access the Guidewire BC on {0} in {1}", target, browser), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 157
 testRunner.And(string.Format("I access the Guidewire BC on {0} in {1}", target, browser), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 158
 testRunner.And("I enter bcmanager and bcmanagerpwd on the BC Login page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 159
 testRunner.When("I select Search from the Tab menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 160
 testRunner.And("search for account with REGISTRY and select from search results", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 161
 testRunner.And("I fetch country name and total amount due", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 162
 testRunner.And("I select new payment:new direct bill payment from actions menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 163
 testRunner.And("I make a direct bill payment of 100", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 164
 testRunner.Then("I Logout of the Billing Center application", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 165
 testRunner.And("I Kill Web Driver", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 169
 testRunner.Given(string.Format("I access the Guidewire CC on {0} in {1}", target, browser), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 170
 testRunner.And("I enter ccclmanager and ccclmanagerpwd on the Login page of CC9", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 171
 testRunner.And("In CC9 I navigate to the Claim:New Claim Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 172
 testRunner.When("In CC9 I Search for the REGISTRY on Policy Search Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 173
 testRunner.And("In CC9 I Enter the CURRENT and Property on the policy search page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 174
 testRunner.And("In CC9 I Enter the Default , Agent on the Basic Information page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 175
 testRunner.And("In CC9 I Enter the Test Description and Fire on the Claim Information Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 176
 testRunner.And("In CC9 I Enter the Auto Assign to the Claim and Finish the Application", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 177
 testRunner.And("In CC9 I Pick Assign Claim from the Actions menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 178
 testRunner.And("In CC9 I Assign the claim to Use automated assignment", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 179
 testRunner.And("In CC9 I Pick Assign Claim from the Actions menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 180
 testRunner.And("IN CC9 I ReAssign the claim", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 181
 testRunner.And("In CC9 I Pick New Exposure from the Actions menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 182
 testRunner.And("In CC9 I Select Jewelry Item from the New exposure page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 183
 testRunner.And("In CC9 I click on return to Exposures", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 184
 testRunner.And("In CC9 I Add Reserves", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 188
 testRunner.And("In CC9 I select Parties Involved from the left navigation menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 189
    testRunner.And("In CC9 I verify CM CC integration for Insured", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table1239 = new TechTalk.SpecFlow.Table(new string[] {
                        "ContactType",
                        "ContactRole",
                        "FirstName",
                        "LastName",
                        "TaxID",
                        "CompanyName"});
            table1239.AddRow(new string[] {
                        "Person",
                        "Vendor",
                        "SeleniumFname",
                        "SeleniumLname",
                        "213121334",
                        ""});
#line 190
 testRunner.And("In CC9 I Add a new contact", ((string)(null)), table1239, "And ");
#line 198
 testRunner.And("In CC9 I Pick Check from the Actions menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table1240 = new TechTalk.SpecFlow.Table(new string[] {
                        "PrimaryPayeeName",
                        "PrimaryPayeeType",
                        "ReserveLineCategory",
                        "ReserveLine",
                        "PaymentType",
                        "AddtoDeductible",
                        "Amount"});
            table1240.AddRow(new string[] {
                        "Insured",
                        "Other",
                        "Indemnity",
                        "Indemnity Category",
                        "Partial",
                        "no",
                        "100"});
#line 199
 testRunner.And("I Enter below payment information for PL Claim", ((string)(null)), table1240, "And ");
#line 202
 testRunner.And("In CC9 I select Workplan from the left navigation menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 203
 testRunner.And("I Complete all Activities in workplan", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 204
 testRunner.And("In CC9 I Pick Close Claim from the Actions menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table1241 = new TechTalk.SpecFlow.Table(new string[] {
                        "Note",
                        "OutCome",
                        "ForceClose",
                        "ClaimStatus"});
            table1241.AddRow(new string[] {
                        "Selenium Test Note",
                        "Payments Complete",
                        "Yes",
                        "Closed"});
#line 205
 testRunner.Then("In CC9 I close the claim with below details and Verify its status", ((string)(null)), table1241, "Then ");
#line 208
 testRunner.And("I Logout of the Claim Center application", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("TS05_PJPA_JPA_Smoke: PC")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "PJPASmoke")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("pjpasmoketest")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("jpasmoke")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "PC")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Application", "PC")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:AccountNumber", "REGISTRY")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ApplicationEnvironment", "PLP")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Target", "Desktop")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Browser", "IE")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:UserName", "pluwmanager")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Password", "pluwmanagerpwd")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:FirstName", "JPA")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:LastName", "SmokeTest")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:DateOfBirth", "05/25/1976")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:MaritalStatus", "Single")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:PrimaryPhone", "Home")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:HomePhone", "262-111-2222")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:WorkPhone", "262-111-1111")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:MobilePhone", "262-111-3333")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:OtherPhone", "262-111-4444")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:FaxPhone", "262-111-5555")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:PrimaryEmail", "")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:SecondaryEmail", "vbadvel@jminsure.com")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Gender", "Male")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Occupation", "Other")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Investigations", "No")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:CareOf", "TestCareOf")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:AddressLine1", "100 E Main St")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:AddressLine2", "")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:City", "Waukesha")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:State", "Wisconsin")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ZipCode", "53189")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:County", "Waukesha")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Country", "United States of America")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:AddressType", "Home")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Description", "TestDescription")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ProducerOrganization", "septum docklands sympathy potomac foxings")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ProducerCode", "DIRD")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:SSN", "123-12-1221")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:IsAccountAJeweler", "No")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:DistributionSource", "Other")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:PreferredMethodOfCommunication", "Mail")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:PaperlessDelivery", "No")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:OkToSurvey", "yes")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:MarkettingMaterials", "yes")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:RecieveConfirmationEmails", "yes")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:JewelerID", "1234")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:PolicyEffDate", "SYSTEMDATE+0")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Product", "PersonalArticles")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ProfessionalAthelete", "No")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:PreviousLoss", "No")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ConvictedOfCrime", "No")]
        public virtual void TS05_PJPA_JPA_Smoke_PC()
        {
#line 107
this.TS05_PJPA_JPA_Smoke("PC", "REGISTRY", "PLP", "Desktop", "IE", "pluwmanager", "pluwmanagerpwd", "JPA", "SmokeTest", "05/25/1976", "Single", "Home", "262-111-2222", "262-111-1111", "262-111-3333", "262-111-4444", "262-111-5555", "", "vbadvel@jminsure.com", "Male", "Other", "No", "TestCareOf", "100 E Main St", "", "Waukesha", "Wisconsin", "53189", "Waukesha", "United States of America", "Home", "TestDescription", "septum docklands sympathy potomac foxings", "DIRD", "123-12-1221", "No", "Other", "Mail", "No", "yes", "yes", "yes", "1234", "SYSTEMDATE+0", "PersonalArticles", "No", "No", "No", ((string[])(null)));
#line hidden
        }
    }
}
#pragma warning restore
#endregion
